
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model auth_group
 * 
 */
export type auth_group = $Result.DefaultSelection<Prisma.$auth_groupPayload>
/**
 * Model auth_group_permissions
 * 
 */
export type auth_group_permissions = $Result.DefaultSelection<Prisma.$auth_group_permissionsPayload>
/**
 * Model auth_permission
 * 
 */
export type auth_permission = $Result.DefaultSelection<Prisma.$auth_permissionPayload>
/**
 * Model auth_user
 * 
 */
export type auth_user = $Result.DefaultSelection<Prisma.$auth_userPayload>
/**
 * Model auth_user_groups
 * 
 */
export type auth_user_groups = $Result.DefaultSelection<Prisma.$auth_user_groupsPayload>
/**
 * Model auth_user_user_permissions
 * 
 */
export type auth_user_user_permissions = $Result.DefaultSelection<Prisma.$auth_user_user_permissionsPayload>
/**
 * Model django_admin_log
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type django_admin_log = $Result.DefaultSelection<Prisma.$django_admin_logPayload>
/**
 * Model django_content_type
 * 
 */
export type django_content_type = $Result.DefaultSelection<Prisma.$django_content_typePayload>
/**
 * Model django_migrations
 * 
 */
export type django_migrations = $Result.DefaultSelection<Prisma.$django_migrationsPayload>
/**
 * Model django_session
 * 
 */
export type django_session = $Result.DefaultSelection<Prisma.$django_sessionPayload>
/**
 * Model post_app_post_images
 * 
 */
export type post_app_post_images = $Result.DefaultSelection<Prisma.$post_app_post_imagesPayload>
/**
 * Model post_app_post_tags
 * 
 */
export type post_app_post_tags = $Result.DefaultSelection<Prisma.$post_app_post_tagsPayload>
/**
 * Model user_app_verificationcode
 * 
 */
export type user_app_verificationcode = $Result.DefaultSelection<Prisma.$user_app_verificationcodePayload>
/**
 * Model Album
 * 
 */
export type Album = $Result.DefaultSelection<Prisma.$AlbumPayload>
/**
 * Model post_app_album_images
 * 
 */
export type post_app_album_images = $Result.DefaultSelection<Prisma.$post_app_album_imagesPayload>
/**
 * Model ChatGroup
 * 
 */
export type ChatGroup = $Result.DefaultSelection<Prisma.$ChatGroupPayload>
/**
 * Model ChatMessage
 * 
 */
export type ChatMessage = $Result.DefaultSelection<Prisma.$ChatMessagePayload>
/**
 * Model chat_app_chatgroup_members
 * 
 */
export type chat_app_chatgroup_members = $Result.DefaultSelection<Prisma.$chat_app_chatgroup_membersPayload>
/**
 * Model Friendship
 * 
 */
export type Friendship = $Result.DefaultSelection<Prisma.$FriendshipPayload>
/**
 * Model Image
 * 
 */
export type Image = $Result.DefaultSelection<Prisma.$ImagePayload>
/**
 * Model Post
 * 
 */
export type Post = $Result.DefaultSelection<Prisma.$PostPayload>
/**
 * Model Tags
 * 
 */
export type Tags = $Result.DefaultSelection<Prisma.$TagsPayload>
/**
 * Model Link
 * 
 */
export type Link = $Result.DefaultSelection<Prisma.$LinkPayload>
/**
 * Model post_app_post_likes
 * 
 */
export type post_app_post_likes = $Result.DefaultSelection<Prisma.$post_app_post_likesPayload>
/**
 * Model post_app_post_views
 * 
 */
export type post_app_post_views = $Result.DefaultSelection<Prisma.$post_app_post_viewsPayload>
/**
 * Model Profile
 * 
 */
export type Profile = $Result.DefaultSelection<Prisma.$ProfilePayload>
/**
 * Model Avatar
 * 
 */
export type Avatar = $Result.DefaultSelection<Prisma.$AvatarPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Auth_groups
 * const auth_groups = await prisma.auth_group.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Auth_groups
   * const auth_groups = await prisma.auth_group.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.auth_group`: Exposes CRUD operations for the **auth_group** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Auth_groups
    * const auth_groups = await prisma.auth_group.findMany()
    * ```
    */
  get auth_group(): Prisma.auth_groupDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.auth_group_permissions`: Exposes CRUD operations for the **auth_group_permissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Auth_group_permissions
    * const auth_group_permissions = await prisma.auth_group_permissions.findMany()
    * ```
    */
  get auth_group_permissions(): Prisma.auth_group_permissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.auth_permission`: Exposes CRUD operations for the **auth_permission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Auth_permissions
    * const auth_permissions = await prisma.auth_permission.findMany()
    * ```
    */
  get auth_permission(): Prisma.auth_permissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.auth_user`: Exposes CRUD operations for the **auth_user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Auth_users
    * const auth_users = await prisma.auth_user.findMany()
    * ```
    */
  get auth_user(): Prisma.auth_userDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.auth_user_groups`: Exposes CRUD operations for the **auth_user_groups** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Auth_user_groups
    * const auth_user_groups = await prisma.auth_user_groups.findMany()
    * ```
    */
  get auth_user_groups(): Prisma.auth_user_groupsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.auth_user_user_permissions`: Exposes CRUD operations for the **auth_user_user_permissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Auth_user_user_permissions
    * const auth_user_user_permissions = await prisma.auth_user_user_permissions.findMany()
    * ```
    */
  get auth_user_user_permissions(): Prisma.auth_user_user_permissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.django_admin_log`: Exposes CRUD operations for the **django_admin_log** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Django_admin_logs
    * const django_admin_logs = await prisma.django_admin_log.findMany()
    * ```
    */
  get django_admin_log(): Prisma.django_admin_logDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.django_content_type`: Exposes CRUD operations for the **django_content_type** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Django_content_types
    * const django_content_types = await prisma.django_content_type.findMany()
    * ```
    */
  get django_content_type(): Prisma.django_content_typeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.django_migrations`: Exposes CRUD operations for the **django_migrations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Django_migrations
    * const django_migrations = await prisma.django_migrations.findMany()
    * ```
    */
  get django_migrations(): Prisma.django_migrationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.django_session`: Exposes CRUD operations for the **django_session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Django_sessions
    * const django_sessions = await prisma.django_session.findMany()
    * ```
    */
  get django_session(): Prisma.django_sessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.post_app_post_images`: Exposes CRUD operations for the **post_app_post_images** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Post_app_post_images
    * const post_app_post_images = await prisma.post_app_post_images.findMany()
    * ```
    */
  get post_app_post_images(): Prisma.post_app_post_imagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.post_app_post_tags`: Exposes CRUD operations for the **post_app_post_tags** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Post_app_post_tags
    * const post_app_post_tags = await prisma.post_app_post_tags.findMany()
    * ```
    */
  get post_app_post_tags(): Prisma.post_app_post_tagsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_app_verificationcode`: Exposes CRUD operations for the **user_app_verificationcode** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_app_verificationcodes
    * const user_app_verificationcodes = await prisma.user_app_verificationcode.findMany()
    * ```
    */
  get user_app_verificationcode(): Prisma.user_app_verificationcodeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.album`: Exposes CRUD operations for the **Album** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Albums
    * const albums = await prisma.album.findMany()
    * ```
    */
  get album(): Prisma.AlbumDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.post_app_album_images`: Exposes CRUD operations for the **post_app_album_images** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Post_app_album_images
    * const post_app_album_images = await prisma.post_app_album_images.findMany()
    * ```
    */
  get post_app_album_images(): Prisma.post_app_album_imagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.chatGroup`: Exposes CRUD operations for the **ChatGroup** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChatGroups
    * const chatGroups = await prisma.chatGroup.findMany()
    * ```
    */
  get chatGroup(): Prisma.ChatGroupDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.chatMessage`: Exposes CRUD operations for the **ChatMessage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ChatMessages
    * const chatMessages = await prisma.chatMessage.findMany()
    * ```
    */
  get chatMessage(): Prisma.ChatMessageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.chat_app_chatgroup_members`: Exposes CRUD operations for the **chat_app_chatgroup_members** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Chat_app_chatgroup_members
    * const chat_app_chatgroup_members = await prisma.chat_app_chatgroup_members.findMany()
    * ```
    */
  get chat_app_chatgroup_members(): Prisma.chat_app_chatgroup_membersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.friendship`: Exposes CRUD operations for the **Friendship** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Friendships
    * const friendships = await prisma.friendship.findMany()
    * ```
    */
  get friendship(): Prisma.FriendshipDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.image`: Exposes CRUD operations for the **Image** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Images
    * const images = await prisma.image.findMany()
    * ```
    */
  get image(): Prisma.ImageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.post`: Exposes CRUD operations for the **Post** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Posts
    * const posts = await prisma.post.findMany()
    * ```
    */
  get post(): Prisma.PostDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tags`: Exposes CRUD operations for the **Tags** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tags
    * const tags = await prisma.tags.findMany()
    * ```
    */
  get tags(): Prisma.TagsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.link`: Exposes CRUD operations for the **Link** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Links
    * const links = await prisma.link.findMany()
    * ```
    */
  get link(): Prisma.LinkDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.post_app_post_likes`: Exposes CRUD operations for the **post_app_post_likes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Post_app_post_likes
    * const post_app_post_likes = await prisma.post_app_post_likes.findMany()
    * ```
    */
  get post_app_post_likes(): Prisma.post_app_post_likesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.post_app_post_views`: Exposes CRUD operations for the **post_app_post_views** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Post_app_post_views
    * const post_app_post_views = await prisma.post_app_post_views.findMany()
    * ```
    */
  get post_app_post_views(): Prisma.post_app_post_viewsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.profile`: Exposes CRUD operations for the **Profile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Profiles
    * const profiles = await prisma.profile.findMany()
    * ```
    */
  get profile(): Prisma.ProfileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.avatar`: Exposes CRUD operations for the **Avatar** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Avatars
    * const avatars = await prisma.avatar.findMany()
    * ```
    */
  get avatar(): Prisma.AvatarDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    auth_group: 'auth_group',
    auth_group_permissions: 'auth_group_permissions',
    auth_permission: 'auth_permission',
    auth_user: 'auth_user',
    auth_user_groups: 'auth_user_groups',
    auth_user_user_permissions: 'auth_user_user_permissions',
    django_admin_log: 'django_admin_log',
    django_content_type: 'django_content_type',
    django_migrations: 'django_migrations',
    django_session: 'django_session',
    post_app_post_images: 'post_app_post_images',
    post_app_post_tags: 'post_app_post_tags',
    user_app_verificationcode: 'user_app_verificationcode',
    Album: 'Album',
    post_app_album_images: 'post_app_album_images',
    ChatGroup: 'ChatGroup',
    ChatMessage: 'ChatMessage',
    chat_app_chatgroup_members: 'chat_app_chatgroup_members',
    Friendship: 'Friendship',
    Image: 'Image',
    Post: 'Post',
    Tags: 'Tags',
    Link: 'Link',
    post_app_post_likes: 'post_app_post_likes',
    post_app_post_views: 'post_app_post_views',
    Profile: 'Profile',
    Avatar: 'Avatar'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "auth_group" | "auth_group_permissions" | "auth_permission" | "auth_user" | "auth_user_groups" | "auth_user_user_permissions" | "django_admin_log" | "django_content_type" | "django_migrations" | "django_session" | "post_app_post_images" | "post_app_post_tags" | "user_app_verificationcode" | "album" | "post_app_album_images" | "chatGroup" | "chatMessage" | "chat_app_chatgroup_members" | "friendship" | "image" | "post" | "tags" | "link" | "post_app_post_likes" | "post_app_post_views" | "profile" | "avatar"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      auth_group: {
        payload: Prisma.$auth_groupPayload<ExtArgs>
        fields: Prisma.auth_groupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.auth_groupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_groupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.auth_groupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_groupPayload>
          }
          findFirst: {
            args: Prisma.auth_groupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_groupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.auth_groupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_groupPayload>
          }
          findMany: {
            args: Prisma.auth_groupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_groupPayload>[]
          }
          create: {
            args: Prisma.auth_groupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_groupPayload>
          }
          createMany: {
            args: Prisma.auth_groupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.auth_groupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_groupPayload>
          }
          update: {
            args: Prisma.auth_groupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_groupPayload>
          }
          deleteMany: {
            args: Prisma.auth_groupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.auth_groupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.auth_groupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_groupPayload>
          }
          aggregate: {
            args: Prisma.Auth_groupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuth_group>
          }
          groupBy: {
            args: Prisma.auth_groupGroupByArgs<ExtArgs>
            result: $Utils.Optional<Auth_groupGroupByOutputType>[]
          }
          count: {
            args: Prisma.auth_groupCountArgs<ExtArgs>
            result: $Utils.Optional<Auth_groupCountAggregateOutputType> | number
          }
        }
      }
      auth_group_permissions: {
        payload: Prisma.$auth_group_permissionsPayload<ExtArgs>
        fields: Prisma.auth_group_permissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.auth_group_permissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_group_permissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.auth_group_permissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_group_permissionsPayload>
          }
          findFirst: {
            args: Prisma.auth_group_permissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_group_permissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.auth_group_permissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_group_permissionsPayload>
          }
          findMany: {
            args: Prisma.auth_group_permissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_group_permissionsPayload>[]
          }
          create: {
            args: Prisma.auth_group_permissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_group_permissionsPayload>
          }
          createMany: {
            args: Prisma.auth_group_permissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.auth_group_permissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_group_permissionsPayload>
          }
          update: {
            args: Prisma.auth_group_permissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_group_permissionsPayload>
          }
          deleteMany: {
            args: Prisma.auth_group_permissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.auth_group_permissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.auth_group_permissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_group_permissionsPayload>
          }
          aggregate: {
            args: Prisma.Auth_group_permissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuth_group_permissions>
          }
          groupBy: {
            args: Prisma.auth_group_permissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Auth_group_permissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.auth_group_permissionsCountArgs<ExtArgs>
            result: $Utils.Optional<Auth_group_permissionsCountAggregateOutputType> | number
          }
        }
      }
      auth_permission: {
        payload: Prisma.$auth_permissionPayload<ExtArgs>
        fields: Prisma.auth_permissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.auth_permissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_permissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.auth_permissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_permissionPayload>
          }
          findFirst: {
            args: Prisma.auth_permissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_permissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.auth_permissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_permissionPayload>
          }
          findMany: {
            args: Prisma.auth_permissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_permissionPayload>[]
          }
          create: {
            args: Prisma.auth_permissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_permissionPayload>
          }
          createMany: {
            args: Prisma.auth_permissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.auth_permissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_permissionPayload>
          }
          update: {
            args: Prisma.auth_permissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_permissionPayload>
          }
          deleteMany: {
            args: Prisma.auth_permissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.auth_permissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.auth_permissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_permissionPayload>
          }
          aggregate: {
            args: Prisma.Auth_permissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuth_permission>
          }
          groupBy: {
            args: Prisma.auth_permissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<Auth_permissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.auth_permissionCountArgs<ExtArgs>
            result: $Utils.Optional<Auth_permissionCountAggregateOutputType> | number
          }
        }
      }
      auth_user: {
        payload: Prisma.$auth_userPayload<ExtArgs>
        fields: Prisma.auth_userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.auth_userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.auth_userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_userPayload>
          }
          findFirst: {
            args: Prisma.auth_userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.auth_userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_userPayload>
          }
          findMany: {
            args: Prisma.auth_userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_userPayload>[]
          }
          create: {
            args: Prisma.auth_userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_userPayload>
          }
          createMany: {
            args: Prisma.auth_userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.auth_userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_userPayload>
          }
          update: {
            args: Prisma.auth_userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_userPayload>
          }
          deleteMany: {
            args: Prisma.auth_userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.auth_userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.auth_userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_userPayload>
          }
          aggregate: {
            args: Prisma.Auth_userAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuth_user>
          }
          groupBy: {
            args: Prisma.auth_userGroupByArgs<ExtArgs>
            result: $Utils.Optional<Auth_userGroupByOutputType>[]
          }
          count: {
            args: Prisma.auth_userCountArgs<ExtArgs>
            result: $Utils.Optional<Auth_userCountAggregateOutputType> | number
          }
        }
      }
      auth_user_groups: {
        payload: Prisma.$auth_user_groupsPayload<ExtArgs>
        fields: Prisma.auth_user_groupsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.auth_user_groupsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_groupsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.auth_user_groupsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_groupsPayload>
          }
          findFirst: {
            args: Prisma.auth_user_groupsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_groupsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.auth_user_groupsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_groupsPayload>
          }
          findMany: {
            args: Prisma.auth_user_groupsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_groupsPayload>[]
          }
          create: {
            args: Prisma.auth_user_groupsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_groupsPayload>
          }
          createMany: {
            args: Prisma.auth_user_groupsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.auth_user_groupsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_groupsPayload>
          }
          update: {
            args: Prisma.auth_user_groupsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_groupsPayload>
          }
          deleteMany: {
            args: Prisma.auth_user_groupsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.auth_user_groupsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.auth_user_groupsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_groupsPayload>
          }
          aggregate: {
            args: Prisma.Auth_user_groupsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuth_user_groups>
          }
          groupBy: {
            args: Prisma.auth_user_groupsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Auth_user_groupsGroupByOutputType>[]
          }
          count: {
            args: Prisma.auth_user_groupsCountArgs<ExtArgs>
            result: $Utils.Optional<Auth_user_groupsCountAggregateOutputType> | number
          }
        }
      }
      auth_user_user_permissions: {
        payload: Prisma.$auth_user_user_permissionsPayload<ExtArgs>
        fields: Prisma.auth_user_user_permissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.auth_user_user_permissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_user_permissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.auth_user_user_permissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_user_permissionsPayload>
          }
          findFirst: {
            args: Prisma.auth_user_user_permissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_user_permissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.auth_user_user_permissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_user_permissionsPayload>
          }
          findMany: {
            args: Prisma.auth_user_user_permissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_user_permissionsPayload>[]
          }
          create: {
            args: Prisma.auth_user_user_permissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_user_permissionsPayload>
          }
          createMany: {
            args: Prisma.auth_user_user_permissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.auth_user_user_permissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_user_permissionsPayload>
          }
          update: {
            args: Prisma.auth_user_user_permissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_user_permissionsPayload>
          }
          deleteMany: {
            args: Prisma.auth_user_user_permissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.auth_user_user_permissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.auth_user_user_permissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$auth_user_user_permissionsPayload>
          }
          aggregate: {
            args: Prisma.Auth_user_user_permissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuth_user_user_permissions>
          }
          groupBy: {
            args: Prisma.auth_user_user_permissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Auth_user_user_permissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.auth_user_user_permissionsCountArgs<ExtArgs>
            result: $Utils.Optional<Auth_user_user_permissionsCountAggregateOutputType> | number
          }
        }
      }
      django_admin_log: {
        payload: Prisma.$django_admin_logPayload<ExtArgs>
        fields: Prisma.django_admin_logFieldRefs
        operations: {
          findUnique: {
            args: Prisma.django_admin_logFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_admin_logPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.django_admin_logFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_admin_logPayload>
          }
          findFirst: {
            args: Prisma.django_admin_logFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_admin_logPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.django_admin_logFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_admin_logPayload>
          }
          findMany: {
            args: Prisma.django_admin_logFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_admin_logPayload>[]
          }
          create: {
            args: Prisma.django_admin_logCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_admin_logPayload>
          }
          createMany: {
            args: Prisma.django_admin_logCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.django_admin_logDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_admin_logPayload>
          }
          update: {
            args: Prisma.django_admin_logUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_admin_logPayload>
          }
          deleteMany: {
            args: Prisma.django_admin_logDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.django_admin_logUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.django_admin_logUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_admin_logPayload>
          }
          aggregate: {
            args: Prisma.Django_admin_logAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDjango_admin_log>
          }
          groupBy: {
            args: Prisma.django_admin_logGroupByArgs<ExtArgs>
            result: $Utils.Optional<Django_admin_logGroupByOutputType>[]
          }
          count: {
            args: Prisma.django_admin_logCountArgs<ExtArgs>
            result: $Utils.Optional<Django_admin_logCountAggregateOutputType> | number
          }
        }
      }
      django_content_type: {
        payload: Prisma.$django_content_typePayload<ExtArgs>
        fields: Prisma.django_content_typeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.django_content_typeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_content_typePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.django_content_typeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_content_typePayload>
          }
          findFirst: {
            args: Prisma.django_content_typeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_content_typePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.django_content_typeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_content_typePayload>
          }
          findMany: {
            args: Prisma.django_content_typeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_content_typePayload>[]
          }
          create: {
            args: Prisma.django_content_typeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_content_typePayload>
          }
          createMany: {
            args: Prisma.django_content_typeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.django_content_typeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_content_typePayload>
          }
          update: {
            args: Prisma.django_content_typeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_content_typePayload>
          }
          deleteMany: {
            args: Prisma.django_content_typeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.django_content_typeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.django_content_typeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_content_typePayload>
          }
          aggregate: {
            args: Prisma.Django_content_typeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDjango_content_type>
          }
          groupBy: {
            args: Prisma.django_content_typeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Django_content_typeGroupByOutputType>[]
          }
          count: {
            args: Prisma.django_content_typeCountArgs<ExtArgs>
            result: $Utils.Optional<Django_content_typeCountAggregateOutputType> | number
          }
        }
      }
      django_migrations: {
        payload: Prisma.$django_migrationsPayload<ExtArgs>
        fields: Prisma.django_migrationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.django_migrationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_migrationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.django_migrationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_migrationsPayload>
          }
          findFirst: {
            args: Prisma.django_migrationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_migrationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.django_migrationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_migrationsPayload>
          }
          findMany: {
            args: Prisma.django_migrationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_migrationsPayload>[]
          }
          create: {
            args: Prisma.django_migrationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_migrationsPayload>
          }
          createMany: {
            args: Prisma.django_migrationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.django_migrationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_migrationsPayload>
          }
          update: {
            args: Prisma.django_migrationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_migrationsPayload>
          }
          deleteMany: {
            args: Prisma.django_migrationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.django_migrationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.django_migrationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_migrationsPayload>
          }
          aggregate: {
            args: Prisma.Django_migrationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDjango_migrations>
          }
          groupBy: {
            args: Prisma.django_migrationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Django_migrationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.django_migrationsCountArgs<ExtArgs>
            result: $Utils.Optional<Django_migrationsCountAggregateOutputType> | number
          }
        }
      }
      django_session: {
        payload: Prisma.$django_sessionPayload<ExtArgs>
        fields: Prisma.django_sessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.django_sessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_sessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.django_sessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_sessionPayload>
          }
          findFirst: {
            args: Prisma.django_sessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_sessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.django_sessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_sessionPayload>
          }
          findMany: {
            args: Prisma.django_sessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_sessionPayload>[]
          }
          create: {
            args: Prisma.django_sessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_sessionPayload>
          }
          createMany: {
            args: Prisma.django_sessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.django_sessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_sessionPayload>
          }
          update: {
            args: Prisma.django_sessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_sessionPayload>
          }
          deleteMany: {
            args: Prisma.django_sessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.django_sessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.django_sessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$django_sessionPayload>
          }
          aggregate: {
            args: Prisma.Django_sessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDjango_session>
          }
          groupBy: {
            args: Prisma.django_sessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<Django_sessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.django_sessionCountArgs<ExtArgs>
            result: $Utils.Optional<Django_sessionCountAggregateOutputType> | number
          }
        }
      }
      post_app_post_images: {
        payload: Prisma.$post_app_post_imagesPayload<ExtArgs>
        fields: Prisma.post_app_post_imagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.post_app_post_imagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_imagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.post_app_post_imagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_imagesPayload>
          }
          findFirst: {
            args: Prisma.post_app_post_imagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_imagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.post_app_post_imagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_imagesPayload>
          }
          findMany: {
            args: Prisma.post_app_post_imagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_imagesPayload>[]
          }
          create: {
            args: Prisma.post_app_post_imagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_imagesPayload>
          }
          createMany: {
            args: Prisma.post_app_post_imagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.post_app_post_imagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_imagesPayload>
          }
          update: {
            args: Prisma.post_app_post_imagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_imagesPayload>
          }
          deleteMany: {
            args: Prisma.post_app_post_imagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.post_app_post_imagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.post_app_post_imagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_imagesPayload>
          }
          aggregate: {
            args: Prisma.Post_app_post_imagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost_app_post_images>
          }
          groupBy: {
            args: Prisma.post_app_post_imagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Post_app_post_imagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.post_app_post_imagesCountArgs<ExtArgs>
            result: $Utils.Optional<Post_app_post_imagesCountAggregateOutputType> | number
          }
        }
      }
      post_app_post_tags: {
        payload: Prisma.$post_app_post_tagsPayload<ExtArgs>
        fields: Prisma.post_app_post_tagsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.post_app_post_tagsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_tagsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.post_app_post_tagsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_tagsPayload>
          }
          findFirst: {
            args: Prisma.post_app_post_tagsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_tagsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.post_app_post_tagsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_tagsPayload>
          }
          findMany: {
            args: Prisma.post_app_post_tagsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_tagsPayload>[]
          }
          create: {
            args: Prisma.post_app_post_tagsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_tagsPayload>
          }
          createMany: {
            args: Prisma.post_app_post_tagsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.post_app_post_tagsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_tagsPayload>
          }
          update: {
            args: Prisma.post_app_post_tagsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_tagsPayload>
          }
          deleteMany: {
            args: Prisma.post_app_post_tagsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.post_app_post_tagsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.post_app_post_tagsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_tagsPayload>
          }
          aggregate: {
            args: Prisma.Post_app_post_tagsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost_app_post_tags>
          }
          groupBy: {
            args: Prisma.post_app_post_tagsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Post_app_post_tagsGroupByOutputType>[]
          }
          count: {
            args: Prisma.post_app_post_tagsCountArgs<ExtArgs>
            result: $Utils.Optional<Post_app_post_tagsCountAggregateOutputType> | number
          }
        }
      }
      user_app_verificationcode: {
        payload: Prisma.$user_app_verificationcodePayload<ExtArgs>
        fields: Prisma.user_app_verificationcodeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_app_verificationcodeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_app_verificationcodePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_app_verificationcodeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_app_verificationcodePayload>
          }
          findFirst: {
            args: Prisma.user_app_verificationcodeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_app_verificationcodePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_app_verificationcodeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_app_verificationcodePayload>
          }
          findMany: {
            args: Prisma.user_app_verificationcodeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_app_verificationcodePayload>[]
          }
          create: {
            args: Prisma.user_app_verificationcodeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_app_verificationcodePayload>
          }
          createMany: {
            args: Prisma.user_app_verificationcodeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.user_app_verificationcodeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_app_verificationcodePayload>
          }
          update: {
            args: Prisma.user_app_verificationcodeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_app_verificationcodePayload>
          }
          deleteMany: {
            args: Prisma.user_app_verificationcodeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_app_verificationcodeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.user_app_verificationcodeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_app_verificationcodePayload>
          }
          aggregate: {
            args: Prisma.User_app_verificationcodeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_app_verificationcode>
          }
          groupBy: {
            args: Prisma.user_app_verificationcodeGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_app_verificationcodeGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_app_verificationcodeCountArgs<ExtArgs>
            result: $Utils.Optional<User_app_verificationcodeCountAggregateOutputType> | number
          }
        }
      }
      Album: {
        payload: Prisma.$AlbumPayload<ExtArgs>
        fields: Prisma.AlbumFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AlbumFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlbumPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AlbumFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlbumPayload>
          }
          findFirst: {
            args: Prisma.AlbumFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlbumPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AlbumFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlbumPayload>
          }
          findMany: {
            args: Prisma.AlbumFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlbumPayload>[]
          }
          create: {
            args: Prisma.AlbumCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlbumPayload>
          }
          createMany: {
            args: Prisma.AlbumCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AlbumDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlbumPayload>
          }
          update: {
            args: Prisma.AlbumUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlbumPayload>
          }
          deleteMany: {
            args: Prisma.AlbumDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AlbumUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AlbumUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AlbumPayload>
          }
          aggregate: {
            args: Prisma.AlbumAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAlbum>
          }
          groupBy: {
            args: Prisma.AlbumGroupByArgs<ExtArgs>
            result: $Utils.Optional<AlbumGroupByOutputType>[]
          }
          count: {
            args: Prisma.AlbumCountArgs<ExtArgs>
            result: $Utils.Optional<AlbumCountAggregateOutputType> | number
          }
        }
      }
      post_app_album_images: {
        payload: Prisma.$post_app_album_imagesPayload<ExtArgs>
        fields: Prisma.post_app_album_imagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.post_app_album_imagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_album_imagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.post_app_album_imagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_album_imagesPayload>
          }
          findFirst: {
            args: Prisma.post_app_album_imagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_album_imagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.post_app_album_imagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_album_imagesPayload>
          }
          findMany: {
            args: Prisma.post_app_album_imagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_album_imagesPayload>[]
          }
          create: {
            args: Prisma.post_app_album_imagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_album_imagesPayload>
          }
          createMany: {
            args: Prisma.post_app_album_imagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.post_app_album_imagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_album_imagesPayload>
          }
          update: {
            args: Prisma.post_app_album_imagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_album_imagesPayload>
          }
          deleteMany: {
            args: Prisma.post_app_album_imagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.post_app_album_imagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.post_app_album_imagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_album_imagesPayload>
          }
          aggregate: {
            args: Prisma.Post_app_album_imagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost_app_album_images>
          }
          groupBy: {
            args: Prisma.post_app_album_imagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Post_app_album_imagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.post_app_album_imagesCountArgs<ExtArgs>
            result: $Utils.Optional<Post_app_album_imagesCountAggregateOutputType> | number
          }
        }
      }
      ChatGroup: {
        payload: Prisma.$ChatGroupPayload<ExtArgs>
        fields: Prisma.ChatGroupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChatGroupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatGroupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChatGroupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatGroupPayload>
          }
          findFirst: {
            args: Prisma.ChatGroupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatGroupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChatGroupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatGroupPayload>
          }
          findMany: {
            args: Prisma.ChatGroupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatGroupPayload>[]
          }
          create: {
            args: Prisma.ChatGroupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatGroupPayload>
          }
          createMany: {
            args: Prisma.ChatGroupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ChatGroupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatGroupPayload>
          }
          update: {
            args: Prisma.ChatGroupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatGroupPayload>
          }
          deleteMany: {
            args: Prisma.ChatGroupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChatGroupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ChatGroupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatGroupPayload>
          }
          aggregate: {
            args: Prisma.ChatGroupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChatGroup>
          }
          groupBy: {
            args: Prisma.ChatGroupGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChatGroupGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChatGroupCountArgs<ExtArgs>
            result: $Utils.Optional<ChatGroupCountAggregateOutputType> | number
          }
        }
      }
      ChatMessage: {
        payload: Prisma.$ChatMessagePayload<ExtArgs>
        fields: Prisma.ChatMessageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ChatMessageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ChatMessageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>
          }
          findFirst: {
            args: Prisma.ChatMessageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ChatMessageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>
          }
          findMany: {
            args: Prisma.ChatMessageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>[]
          }
          create: {
            args: Prisma.ChatMessageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>
          }
          createMany: {
            args: Prisma.ChatMessageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ChatMessageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>
          }
          update: {
            args: Prisma.ChatMessageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>
          }
          deleteMany: {
            args: Prisma.ChatMessageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ChatMessageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ChatMessageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ChatMessagePayload>
          }
          aggregate: {
            args: Prisma.ChatMessageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChatMessage>
          }
          groupBy: {
            args: Prisma.ChatMessageGroupByArgs<ExtArgs>
            result: $Utils.Optional<ChatMessageGroupByOutputType>[]
          }
          count: {
            args: Prisma.ChatMessageCountArgs<ExtArgs>
            result: $Utils.Optional<ChatMessageCountAggregateOutputType> | number
          }
        }
      }
      chat_app_chatgroup_members: {
        payload: Prisma.$chat_app_chatgroup_membersPayload<ExtArgs>
        fields: Prisma.chat_app_chatgroup_membersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.chat_app_chatgroup_membersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_app_chatgroup_membersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.chat_app_chatgroup_membersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_app_chatgroup_membersPayload>
          }
          findFirst: {
            args: Prisma.chat_app_chatgroup_membersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_app_chatgroup_membersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.chat_app_chatgroup_membersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_app_chatgroup_membersPayload>
          }
          findMany: {
            args: Prisma.chat_app_chatgroup_membersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_app_chatgroup_membersPayload>[]
          }
          create: {
            args: Prisma.chat_app_chatgroup_membersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_app_chatgroup_membersPayload>
          }
          createMany: {
            args: Prisma.chat_app_chatgroup_membersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.chat_app_chatgroup_membersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_app_chatgroup_membersPayload>
          }
          update: {
            args: Prisma.chat_app_chatgroup_membersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_app_chatgroup_membersPayload>
          }
          deleteMany: {
            args: Prisma.chat_app_chatgroup_membersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.chat_app_chatgroup_membersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.chat_app_chatgroup_membersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_app_chatgroup_membersPayload>
          }
          aggregate: {
            args: Prisma.Chat_app_chatgroup_membersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChat_app_chatgroup_members>
          }
          groupBy: {
            args: Prisma.chat_app_chatgroup_membersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Chat_app_chatgroup_membersGroupByOutputType>[]
          }
          count: {
            args: Prisma.chat_app_chatgroup_membersCountArgs<ExtArgs>
            result: $Utils.Optional<Chat_app_chatgroup_membersCountAggregateOutputType> | number
          }
        }
      }
      Friendship: {
        payload: Prisma.$FriendshipPayload<ExtArgs>
        fields: Prisma.FriendshipFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FriendshipFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FriendshipPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FriendshipFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FriendshipPayload>
          }
          findFirst: {
            args: Prisma.FriendshipFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FriendshipPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FriendshipFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FriendshipPayload>
          }
          findMany: {
            args: Prisma.FriendshipFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FriendshipPayload>[]
          }
          create: {
            args: Prisma.FriendshipCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FriendshipPayload>
          }
          createMany: {
            args: Prisma.FriendshipCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FriendshipDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FriendshipPayload>
          }
          update: {
            args: Prisma.FriendshipUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FriendshipPayload>
          }
          deleteMany: {
            args: Prisma.FriendshipDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FriendshipUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FriendshipUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FriendshipPayload>
          }
          aggregate: {
            args: Prisma.FriendshipAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFriendship>
          }
          groupBy: {
            args: Prisma.FriendshipGroupByArgs<ExtArgs>
            result: $Utils.Optional<FriendshipGroupByOutputType>[]
          }
          count: {
            args: Prisma.FriendshipCountArgs<ExtArgs>
            result: $Utils.Optional<FriendshipCountAggregateOutputType> | number
          }
        }
      }
      Image: {
        payload: Prisma.$ImagePayload<ExtArgs>
        fields: Prisma.ImageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ImageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ImageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload>
          }
          findFirst: {
            args: Prisma.ImageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ImageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload>
          }
          findMany: {
            args: Prisma.ImageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload>[]
          }
          create: {
            args: Prisma.ImageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload>
          }
          createMany: {
            args: Prisma.ImageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ImageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload>
          }
          update: {
            args: Prisma.ImageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload>
          }
          deleteMany: {
            args: Prisma.ImageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ImageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ImageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ImagePayload>
          }
          aggregate: {
            args: Prisma.ImageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImage>
          }
          groupBy: {
            args: Prisma.ImageGroupByArgs<ExtArgs>
            result: $Utils.Optional<ImageGroupByOutputType>[]
          }
          count: {
            args: Prisma.ImageCountArgs<ExtArgs>
            result: $Utils.Optional<ImageCountAggregateOutputType> | number
          }
        }
      }
      Post: {
        payload: Prisma.$PostPayload<ExtArgs>
        fields: Prisma.PostFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PostFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PostFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          findFirst: {
            args: Prisma.PostFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PostFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          findMany: {
            args: Prisma.PostFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>[]
          }
          create: {
            args: Prisma.PostCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          createMany: {
            args: Prisma.PostCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PostDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          update: {
            args: Prisma.PostUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          deleteMany: {
            args: Prisma.PostDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PostUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PostUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PostPayload>
          }
          aggregate: {
            args: Prisma.PostAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost>
          }
          groupBy: {
            args: Prisma.PostGroupByArgs<ExtArgs>
            result: $Utils.Optional<PostGroupByOutputType>[]
          }
          count: {
            args: Prisma.PostCountArgs<ExtArgs>
            result: $Utils.Optional<PostCountAggregateOutputType> | number
          }
        }
      }
      Tags: {
        payload: Prisma.$TagsPayload<ExtArgs>
        fields: Prisma.TagsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TagsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TagsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagsPayload>
          }
          findFirst: {
            args: Prisma.TagsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TagsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagsPayload>
          }
          findMany: {
            args: Prisma.TagsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagsPayload>[]
          }
          create: {
            args: Prisma.TagsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagsPayload>
          }
          createMany: {
            args: Prisma.TagsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TagsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagsPayload>
          }
          update: {
            args: Prisma.TagsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagsPayload>
          }
          deleteMany: {
            args: Prisma.TagsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TagsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TagsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TagsPayload>
          }
          aggregate: {
            args: Prisma.TagsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTags>
          }
          groupBy: {
            args: Prisma.TagsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TagsGroupByOutputType>[]
          }
          count: {
            args: Prisma.TagsCountArgs<ExtArgs>
            result: $Utils.Optional<TagsCountAggregateOutputType> | number
          }
        }
      }
      Link: {
        payload: Prisma.$LinkPayload<ExtArgs>
        fields: Prisma.LinkFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LinkFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LinkFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkPayload>
          }
          findFirst: {
            args: Prisma.LinkFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LinkFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkPayload>
          }
          findMany: {
            args: Prisma.LinkFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkPayload>[]
          }
          create: {
            args: Prisma.LinkCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkPayload>
          }
          createMany: {
            args: Prisma.LinkCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.LinkDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkPayload>
          }
          update: {
            args: Prisma.LinkUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkPayload>
          }
          deleteMany: {
            args: Prisma.LinkDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LinkUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LinkUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LinkPayload>
          }
          aggregate: {
            args: Prisma.LinkAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLink>
          }
          groupBy: {
            args: Prisma.LinkGroupByArgs<ExtArgs>
            result: $Utils.Optional<LinkGroupByOutputType>[]
          }
          count: {
            args: Prisma.LinkCountArgs<ExtArgs>
            result: $Utils.Optional<LinkCountAggregateOutputType> | number
          }
        }
      }
      post_app_post_likes: {
        payload: Prisma.$post_app_post_likesPayload<ExtArgs>
        fields: Prisma.post_app_post_likesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.post_app_post_likesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_likesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.post_app_post_likesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_likesPayload>
          }
          findFirst: {
            args: Prisma.post_app_post_likesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_likesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.post_app_post_likesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_likesPayload>
          }
          findMany: {
            args: Prisma.post_app_post_likesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_likesPayload>[]
          }
          create: {
            args: Prisma.post_app_post_likesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_likesPayload>
          }
          createMany: {
            args: Prisma.post_app_post_likesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.post_app_post_likesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_likesPayload>
          }
          update: {
            args: Prisma.post_app_post_likesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_likesPayload>
          }
          deleteMany: {
            args: Prisma.post_app_post_likesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.post_app_post_likesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.post_app_post_likesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_likesPayload>
          }
          aggregate: {
            args: Prisma.Post_app_post_likesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost_app_post_likes>
          }
          groupBy: {
            args: Prisma.post_app_post_likesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Post_app_post_likesGroupByOutputType>[]
          }
          count: {
            args: Prisma.post_app_post_likesCountArgs<ExtArgs>
            result: $Utils.Optional<Post_app_post_likesCountAggregateOutputType> | number
          }
        }
      }
      post_app_post_views: {
        payload: Prisma.$post_app_post_viewsPayload<ExtArgs>
        fields: Prisma.post_app_post_viewsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.post_app_post_viewsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_viewsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.post_app_post_viewsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_viewsPayload>
          }
          findFirst: {
            args: Prisma.post_app_post_viewsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_viewsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.post_app_post_viewsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_viewsPayload>
          }
          findMany: {
            args: Prisma.post_app_post_viewsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_viewsPayload>[]
          }
          create: {
            args: Prisma.post_app_post_viewsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_viewsPayload>
          }
          createMany: {
            args: Prisma.post_app_post_viewsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.post_app_post_viewsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_viewsPayload>
          }
          update: {
            args: Prisma.post_app_post_viewsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_viewsPayload>
          }
          deleteMany: {
            args: Prisma.post_app_post_viewsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.post_app_post_viewsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.post_app_post_viewsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$post_app_post_viewsPayload>
          }
          aggregate: {
            args: Prisma.Post_app_post_viewsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePost_app_post_views>
          }
          groupBy: {
            args: Prisma.post_app_post_viewsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Post_app_post_viewsGroupByOutputType>[]
          }
          count: {
            args: Prisma.post_app_post_viewsCountArgs<ExtArgs>
            result: $Utils.Optional<Post_app_post_viewsCountAggregateOutputType> | number
          }
        }
      }
      Profile: {
        payload: Prisma.$ProfilePayload<ExtArgs>
        fields: Prisma.ProfileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProfileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProfileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          findFirst: {
            args: Prisma.ProfileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProfileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          findMany: {
            args: Prisma.ProfileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          create: {
            args: Prisma.ProfileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          createMany: {
            args: Prisma.ProfileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProfileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          update: {
            args: Prisma.ProfileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          deleteMany: {
            args: Prisma.ProfileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProfileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProfileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          aggregate: {
            args: Prisma.ProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProfile>
          }
          groupBy: {
            args: Prisma.ProfileGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProfileCountArgs<ExtArgs>
            result: $Utils.Optional<ProfileCountAggregateOutputType> | number
          }
        }
      }
      Avatar: {
        payload: Prisma.$AvatarPayload<ExtArgs>
        fields: Prisma.AvatarFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AvatarFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvatarPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AvatarFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvatarPayload>
          }
          findFirst: {
            args: Prisma.AvatarFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvatarPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AvatarFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvatarPayload>
          }
          findMany: {
            args: Prisma.AvatarFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvatarPayload>[]
          }
          create: {
            args: Prisma.AvatarCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvatarPayload>
          }
          createMany: {
            args: Prisma.AvatarCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AvatarDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvatarPayload>
          }
          update: {
            args: Prisma.AvatarUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvatarPayload>
          }
          deleteMany: {
            args: Prisma.AvatarDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AvatarUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AvatarUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AvatarPayload>
          }
          aggregate: {
            args: Prisma.AvatarAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAvatar>
          }
          groupBy: {
            args: Prisma.AvatarGroupByArgs<ExtArgs>
            result: $Utils.Optional<AvatarGroupByOutputType>[]
          }
          count: {
            args: Prisma.AvatarCountArgs<ExtArgs>
            result: $Utils.Optional<AvatarCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    auth_group?: auth_groupOmit
    auth_group_permissions?: auth_group_permissionsOmit
    auth_permission?: auth_permissionOmit
    auth_user?: auth_userOmit
    auth_user_groups?: auth_user_groupsOmit
    auth_user_user_permissions?: auth_user_user_permissionsOmit
    django_admin_log?: django_admin_logOmit
    django_content_type?: django_content_typeOmit
    django_migrations?: django_migrationsOmit
    django_session?: django_sessionOmit
    post_app_post_images?: post_app_post_imagesOmit
    post_app_post_tags?: post_app_post_tagsOmit
    user_app_verificationcode?: user_app_verificationcodeOmit
    album?: AlbumOmit
    post_app_album_images?: post_app_album_imagesOmit
    chatGroup?: ChatGroupOmit
    chatMessage?: ChatMessageOmit
    chat_app_chatgroup_members?: chat_app_chatgroup_membersOmit
    friendship?: FriendshipOmit
    image?: ImageOmit
    post?: PostOmit
    tags?: TagsOmit
    link?: LinkOmit
    post_app_post_likes?: post_app_post_likesOmit
    post_app_post_views?: post_app_post_viewsOmit
    profile?: ProfileOmit
    avatar?: AvatarOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Auth_groupCountOutputType
   */

  export type Auth_groupCountOutputType = {
    auth_group_permissions: number
    auth_user_groups: number
  }

  export type Auth_groupCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auth_group_permissions?: boolean | Auth_groupCountOutputTypeCountAuth_group_permissionsArgs
    auth_user_groups?: boolean | Auth_groupCountOutputTypeCountAuth_user_groupsArgs
  }

  // Custom InputTypes
  /**
   * Auth_groupCountOutputType without action
   */
  export type Auth_groupCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Auth_groupCountOutputType
     */
    select?: Auth_groupCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Auth_groupCountOutputType without action
   */
  export type Auth_groupCountOutputTypeCountAuth_group_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: auth_group_permissionsWhereInput
  }

  /**
   * Auth_groupCountOutputType without action
   */
  export type Auth_groupCountOutputTypeCountAuth_user_groupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: auth_user_groupsWhereInput
  }


  /**
   * Count Type Auth_permissionCountOutputType
   */

  export type Auth_permissionCountOutputType = {
    auth_group_permissions: number
    auth_user_user_permissions: number
  }

  export type Auth_permissionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auth_group_permissions?: boolean | Auth_permissionCountOutputTypeCountAuth_group_permissionsArgs
    auth_user_user_permissions?: boolean | Auth_permissionCountOutputTypeCountAuth_user_user_permissionsArgs
  }

  // Custom InputTypes
  /**
   * Auth_permissionCountOutputType without action
   */
  export type Auth_permissionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Auth_permissionCountOutputType
     */
    select?: Auth_permissionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Auth_permissionCountOutputType without action
   */
  export type Auth_permissionCountOutputTypeCountAuth_group_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: auth_group_permissionsWhereInput
  }

  /**
   * Auth_permissionCountOutputType without action
   */
  export type Auth_permissionCountOutputTypeCountAuth_user_user_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: auth_user_user_permissionsWhereInput
  }


  /**
   * Count Type Auth_userCountOutputType
   */

  export type Auth_userCountOutputType = {
    auth_user_groups: number
    auth_user_user_permissions: number
    django_admin_log: number
  }

  export type Auth_userCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auth_user_groups?: boolean | Auth_userCountOutputTypeCountAuth_user_groupsArgs
    auth_user_user_permissions?: boolean | Auth_userCountOutputTypeCountAuth_user_user_permissionsArgs
    django_admin_log?: boolean | Auth_userCountOutputTypeCountDjango_admin_logArgs
  }

  // Custom InputTypes
  /**
   * Auth_userCountOutputType without action
   */
  export type Auth_userCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Auth_userCountOutputType
     */
    select?: Auth_userCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Auth_userCountOutputType without action
   */
  export type Auth_userCountOutputTypeCountAuth_user_groupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: auth_user_groupsWhereInput
  }

  /**
   * Auth_userCountOutputType without action
   */
  export type Auth_userCountOutputTypeCountAuth_user_user_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: auth_user_user_permissionsWhereInput
  }

  /**
   * Auth_userCountOutputType without action
   */
  export type Auth_userCountOutputTypeCountDjango_admin_logArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: django_admin_logWhereInput
  }


  /**
   * Count Type Django_content_typeCountOutputType
   */

  export type Django_content_typeCountOutputType = {
    auth_permission: number
    django_admin_log: number
  }

  export type Django_content_typeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auth_permission?: boolean | Django_content_typeCountOutputTypeCountAuth_permissionArgs
    django_admin_log?: boolean | Django_content_typeCountOutputTypeCountDjango_admin_logArgs
  }

  // Custom InputTypes
  /**
   * Django_content_typeCountOutputType without action
   */
  export type Django_content_typeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Django_content_typeCountOutputType
     */
    select?: Django_content_typeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Django_content_typeCountOutputType without action
   */
  export type Django_content_typeCountOutputTypeCountAuth_permissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: auth_permissionWhereInput
  }

  /**
   * Django_content_typeCountOutputType without action
   */
  export type Django_content_typeCountOutputTypeCountDjango_admin_logArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: django_admin_logWhereInput
  }


  /**
   * Count Type AlbumCountOutputType
   */

  export type AlbumCountOutputType = {
    images: number
  }

  export type AlbumCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    images?: boolean | AlbumCountOutputTypeCountImagesArgs
  }

  // Custom InputTypes
  /**
   * AlbumCountOutputType without action
   */
  export type AlbumCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlbumCountOutputType
     */
    select?: AlbumCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AlbumCountOutputType without action
   */
  export type AlbumCountOutputTypeCountImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_app_album_imagesWhereInput
  }


  /**
   * Count Type ChatGroupCountOutputType
   */

  export type ChatGroupCountOutputType = {
    chat_app_chatgroup_members: number
    chat_app_chatmessage: number
  }

  export type ChatGroupCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_app_chatgroup_members?: boolean | ChatGroupCountOutputTypeCountChat_app_chatgroup_membersArgs
    chat_app_chatmessage?: boolean | ChatGroupCountOutputTypeCountChat_app_chatmessageArgs
  }

  // Custom InputTypes
  /**
   * ChatGroupCountOutputType without action
   */
  export type ChatGroupCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatGroupCountOutputType
     */
    select?: ChatGroupCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ChatGroupCountOutputType without action
   */
  export type ChatGroupCountOutputTypeCountChat_app_chatgroup_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_app_chatgroup_membersWhereInput
  }

  /**
   * ChatGroupCountOutputType without action
   */
  export type ChatGroupCountOutputTypeCountChat_app_chatmessageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChatMessageWhereInput
  }


  /**
   * Count Type ImageCountOutputType
   */

  export type ImageCountOutputType = {
    album_images: number
    post_app_post_images: number
  }

  export type ImageCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    album_images?: boolean | ImageCountOutputTypeCountAlbum_imagesArgs
    post_app_post_images?: boolean | ImageCountOutputTypeCountPost_app_post_imagesArgs
  }

  // Custom InputTypes
  /**
   * ImageCountOutputType without action
   */
  export type ImageCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ImageCountOutputType
     */
    select?: ImageCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ImageCountOutputType without action
   */
  export type ImageCountOutputTypeCountAlbum_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_app_album_imagesWhereInput
  }

  /**
   * ImageCountOutputType without action
   */
  export type ImageCountOutputTypeCountPost_app_post_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_app_post_imagesWhereInput
  }


  /**
   * Count Type PostCountOutputType
   */

  export type PostCountOutputType = {
    post_app_link: number
    post_app_post_images: number
    likes: number
    post_app_post_tags: number
    views: number
  }

  export type PostCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post_app_link?: boolean | PostCountOutputTypeCountPost_app_linkArgs
    post_app_post_images?: boolean | PostCountOutputTypeCountPost_app_post_imagesArgs
    likes?: boolean | PostCountOutputTypeCountLikesArgs
    post_app_post_tags?: boolean | PostCountOutputTypeCountPost_app_post_tagsArgs
    views?: boolean | PostCountOutputTypeCountViewsArgs
  }

  // Custom InputTypes
  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PostCountOutputType
     */
    select?: PostCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountPost_app_linkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LinkWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountPost_app_post_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_app_post_imagesWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountLikesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_app_post_likesWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountPost_app_post_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_app_post_tagsWhereInput
  }

  /**
   * PostCountOutputType without action
   */
  export type PostCountOutputTypeCountViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_app_post_viewsWhereInput
  }


  /**
   * Count Type TagsCountOutputType
   */

  export type TagsCountOutputType = {
    post_app_album: number
    post_app_post_tags: number
  }

  export type TagsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post_app_album?: boolean | TagsCountOutputTypeCountPost_app_albumArgs
    post_app_post_tags?: boolean | TagsCountOutputTypeCountPost_app_post_tagsArgs
  }

  // Custom InputTypes
  /**
   * TagsCountOutputType without action
   */
  export type TagsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TagsCountOutputType
     */
    select?: TagsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TagsCountOutputType without action
   */
  export type TagsCountOutputTypeCountPost_app_albumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlbumWhereInput
  }

  /**
   * TagsCountOutputType without action
   */
  export type TagsCountOutputTypeCountPost_app_post_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_app_post_tagsWhereInput
  }


  /**
   * Count Type ProfileCountOutputType
   */

  export type ProfileCountOutputType = {
    administered_groups: number
    chat_group_members: number
    chat_messages: number
    album: number
    post: number
    post_app_post_likes: number
    post_app_post_views: number
    avatar: number
    friendship_from: number
    friendship_to: number
  }

  export type ProfileCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administered_groups?: boolean | ProfileCountOutputTypeCountAdministered_groupsArgs
    chat_group_members?: boolean | ProfileCountOutputTypeCountChat_group_membersArgs
    chat_messages?: boolean | ProfileCountOutputTypeCountChat_messagesArgs
    album?: boolean | ProfileCountOutputTypeCountAlbumArgs
    post?: boolean | ProfileCountOutputTypeCountPostArgs
    post_app_post_likes?: boolean | ProfileCountOutputTypeCountPost_app_post_likesArgs
    post_app_post_views?: boolean | ProfileCountOutputTypeCountPost_app_post_viewsArgs
    avatar?: boolean | ProfileCountOutputTypeCountAvatarArgs
    friendship_from?: boolean | ProfileCountOutputTypeCountFriendship_fromArgs
    friendship_to?: boolean | ProfileCountOutputTypeCountFriendship_toArgs
  }

  // Custom InputTypes
  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfileCountOutputType
     */
    select?: ProfileCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountAdministered_groupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChatGroupWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountChat_group_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_app_chatgroup_membersWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountChat_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChatMessageWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountAlbumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlbumWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountPostArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountPost_app_post_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_app_post_likesWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountPost_app_post_viewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_app_post_viewsWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountAvatarArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvatarWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountFriendship_fromArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FriendshipWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountFriendship_toArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FriendshipWhereInput
  }


  /**
   * Models
   */

  /**
   * Model auth_group
   */

  export type AggregateAuth_group = {
    _count: Auth_groupCountAggregateOutputType | null
    _avg: Auth_groupAvgAggregateOutputType | null
    _sum: Auth_groupSumAggregateOutputType | null
    _min: Auth_groupMinAggregateOutputType | null
    _max: Auth_groupMaxAggregateOutputType | null
  }

  export type Auth_groupAvgAggregateOutputType = {
    id: number | null
  }

  export type Auth_groupSumAggregateOutputType = {
    id: number | null
  }

  export type Auth_groupMinAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type Auth_groupMaxAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type Auth_groupCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type Auth_groupAvgAggregateInputType = {
    id?: true
  }

  export type Auth_groupSumAggregateInputType = {
    id?: true
  }

  export type Auth_groupMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type Auth_groupMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type Auth_groupCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type Auth_groupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which auth_group to aggregate.
     */
    where?: auth_groupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_groups to fetch.
     */
    orderBy?: auth_groupOrderByWithRelationInput | auth_groupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: auth_groupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned auth_groups
    **/
    _count?: true | Auth_groupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Auth_groupAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Auth_groupSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Auth_groupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Auth_groupMaxAggregateInputType
  }

  export type GetAuth_groupAggregateType<T extends Auth_groupAggregateArgs> = {
        [P in keyof T & keyof AggregateAuth_group]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuth_group[P]>
      : GetScalarType<T[P], AggregateAuth_group[P]>
  }




  export type auth_groupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: auth_groupWhereInput
    orderBy?: auth_groupOrderByWithAggregationInput | auth_groupOrderByWithAggregationInput[]
    by: Auth_groupScalarFieldEnum[] | Auth_groupScalarFieldEnum
    having?: auth_groupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Auth_groupCountAggregateInputType | true
    _avg?: Auth_groupAvgAggregateInputType
    _sum?: Auth_groupSumAggregateInputType
    _min?: Auth_groupMinAggregateInputType
    _max?: Auth_groupMaxAggregateInputType
  }

  export type Auth_groupGroupByOutputType = {
    id: number
    name: string
    _count: Auth_groupCountAggregateOutputType | null
    _avg: Auth_groupAvgAggregateOutputType | null
    _sum: Auth_groupSumAggregateOutputType | null
    _min: Auth_groupMinAggregateOutputType | null
    _max: Auth_groupMaxAggregateOutputType | null
  }

  type GetAuth_groupGroupByPayload<T extends auth_groupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Auth_groupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Auth_groupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Auth_groupGroupByOutputType[P]>
            : GetScalarType<T[P], Auth_groupGroupByOutputType[P]>
        }
      >
    >


  export type auth_groupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    auth_group_permissions?: boolean | auth_group$auth_group_permissionsArgs<ExtArgs>
    auth_user_groups?: boolean | auth_group$auth_user_groupsArgs<ExtArgs>
    _count?: boolean | Auth_groupCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auth_group"]>



  export type auth_groupSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type auth_groupOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["auth_group"]>
  export type auth_groupInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auth_group_permissions?: boolean | auth_group$auth_group_permissionsArgs<ExtArgs>
    auth_user_groups?: boolean | auth_group$auth_user_groupsArgs<ExtArgs>
    _count?: boolean | Auth_groupCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $auth_groupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "auth_group"
    objects: {
      auth_group_permissions: Prisma.$auth_group_permissionsPayload<ExtArgs>[]
      auth_user_groups: Prisma.$auth_user_groupsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
    }, ExtArgs["result"]["auth_group"]>
    composites: {}
  }

  type auth_groupGetPayload<S extends boolean | null | undefined | auth_groupDefaultArgs> = $Result.GetResult<Prisma.$auth_groupPayload, S>

  type auth_groupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<auth_groupFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Auth_groupCountAggregateInputType | true
    }

  export interface auth_groupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['auth_group'], meta: { name: 'auth_group' } }
    /**
     * Find zero or one Auth_group that matches the filter.
     * @param {auth_groupFindUniqueArgs} args - Arguments to find a Auth_group
     * @example
     * // Get one Auth_group
     * const auth_group = await prisma.auth_group.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends auth_groupFindUniqueArgs>(args: SelectSubset<T, auth_groupFindUniqueArgs<ExtArgs>>): Prisma__auth_groupClient<$Result.GetResult<Prisma.$auth_groupPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Auth_group that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {auth_groupFindUniqueOrThrowArgs} args - Arguments to find a Auth_group
     * @example
     * // Get one Auth_group
     * const auth_group = await prisma.auth_group.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends auth_groupFindUniqueOrThrowArgs>(args: SelectSubset<T, auth_groupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__auth_groupClient<$Result.GetResult<Prisma.$auth_groupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auth_group that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_groupFindFirstArgs} args - Arguments to find a Auth_group
     * @example
     * // Get one Auth_group
     * const auth_group = await prisma.auth_group.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends auth_groupFindFirstArgs>(args?: SelectSubset<T, auth_groupFindFirstArgs<ExtArgs>>): Prisma__auth_groupClient<$Result.GetResult<Prisma.$auth_groupPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auth_group that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_groupFindFirstOrThrowArgs} args - Arguments to find a Auth_group
     * @example
     * // Get one Auth_group
     * const auth_group = await prisma.auth_group.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends auth_groupFindFirstOrThrowArgs>(args?: SelectSubset<T, auth_groupFindFirstOrThrowArgs<ExtArgs>>): Prisma__auth_groupClient<$Result.GetResult<Prisma.$auth_groupPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Auth_groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_groupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Auth_groups
     * const auth_groups = await prisma.auth_group.findMany()
     * 
     * // Get first 10 Auth_groups
     * const auth_groups = await prisma.auth_group.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auth_groupWithIdOnly = await prisma.auth_group.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends auth_groupFindManyArgs>(args?: SelectSubset<T, auth_groupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_groupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Auth_group.
     * @param {auth_groupCreateArgs} args - Arguments to create a Auth_group.
     * @example
     * // Create one Auth_group
     * const Auth_group = await prisma.auth_group.create({
     *   data: {
     *     // ... data to create a Auth_group
     *   }
     * })
     * 
     */
    create<T extends auth_groupCreateArgs>(args: SelectSubset<T, auth_groupCreateArgs<ExtArgs>>): Prisma__auth_groupClient<$Result.GetResult<Prisma.$auth_groupPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Auth_groups.
     * @param {auth_groupCreateManyArgs} args - Arguments to create many Auth_groups.
     * @example
     * // Create many Auth_groups
     * const auth_group = await prisma.auth_group.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends auth_groupCreateManyArgs>(args?: SelectSubset<T, auth_groupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Auth_group.
     * @param {auth_groupDeleteArgs} args - Arguments to delete one Auth_group.
     * @example
     * // Delete one Auth_group
     * const Auth_group = await prisma.auth_group.delete({
     *   where: {
     *     // ... filter to delete one Auth_group
     *   }
     * })
     * 
     */
    delete<T extends auth_groupDeleteArgs>(args: SelectSubset<T, auth_groupDeleteArgs<ExtArgs>>): Prisma__auth_groupClient<$Result.GetResult<Prisma.$auth_groupPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Auth_group.
     * @param {auth_groupUpdateArgs} args - Arguments to update one Auth_group.
     * @example
     * // Update one Auth_group
     * const auth_group = await prisma.auth_group.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends auth_groupUpdateArgs>(args: SelectSubset<T, auth_groupUpdateArgs<ExtArgs>>): Prisma__auth_groupClient<$Result.GetResult<Prisma.$auth_groupPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Auth_groups.
     * @param {auth_groupDeleteManyArgs} args - Arguments to filter Auth_groups to delete.
     * @example
     * // Delete a few Auth_groups
     * const { count } = await prisma.auth_group.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends auth_groupDeleteManyArgs>(args?: SelectSubset<T, auth_groupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Auth_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_groupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Auth_groups
     * const auth_group = await prisma.auth_group.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends auth_groupUpdateManyArgs>(args: SelectSubset<T, auth_groupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Auth_group.
     * @param {auth_groupUpsertArgs} args - Arguments to update or create a Auth_group.
     * @example
     * // Update or create a Auth_group
     * const auth_group = await prisma.auth_group.upsert({
     *   create: {
     *     // ... data to create a Auth_group
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Auth_group we want to update
     *   }
     * })
     */
    upsert<T extends auth_groupUpsertArgs>(args: SelectSubset<T, auth_groupUpsertArgs<ExtArgs>>): Prisma__auth_groupClient<$Result.GetResult<Prisma.$auth_groupPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Auth_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_groupCountArgs} args - Arguments to filter Auth_groups to count.
     * @example
     * // Count the number of Auth_groups
     * const count = await prisma.auth_group.count({
     *   where: {
     *     // ... the filter for the Auth_groups we want to count
     *   }
     * })
    **/
    count<T extends auth_groupCountArgs>(
      args?: Subset<T, auth_groupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Auth_groupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Auth_group.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Auth_groupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Auth_groupAggregateArgs>(args: Subset<T, Auth_groupAggregateArgs>): Prisma.PrismaPromise<GetAuth_groupAggregateType<T>>

    /**
     * Group by Auth_group.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_groupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends auth_groupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: auth_groupGroupByArgs['orderBy'] }
        : { orderBy?: auth_groupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, auth_groupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuth_groupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the auth_group model
   */
  readonly fields: auth_groupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for auth_group.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__auth_groupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    auth_group_permissions<T extends auth_group$auth_group_permissionsArgs<ExtArgs> = {}>(args?: Subset<T, auth_group$auth_group_permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_group_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    auth_user_groups<T extends auth_group$auth_user_groupsArgs<ExtArgs> = {}>(args?: Subset<T, auth_group$auth_user_groupsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_user_groupsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the auth_group model
   */
  interface auth_groupFieldRefs {
    readonly id: FieldRef<"auth_group", 'Int'>
    readonly name: FieldRef<"auth_group", 'String'>
  }
    

  // Custom InputTypes
  /**
   * auth_group findUnique
   */
  export type auth_groupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group
     */
    select?: auth_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group
     */
    omit?: auth_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_groupInclude<ExtArgs> | null
    /**
     * Filter, which auth_group to fetch.
     */
    where: auth_groupWhereUniqueInput
  }

  /**
   * auth_group findUniqueOrThrow
   */
  export type auth_groupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group
     */
    select?: auth_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group
     */
    omit?: auth_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_groupInclude<ExtArgs> | null
    /**
     * Filter, which auth_group to fetch.
     */
    where: auth_groupWhereUniqueInput
  }

  /**
   * auth_group findFirst
   */
  export type auth_groupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group
     */
    select?: auth_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group
     */
    omit?: auth_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_groupInclude<ExtArgs> | null
    /**
     * Filter, which auth_group to fetch.
     */
    where?: auth_groupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_groups to fetch.
     */
    orderBy?: auth_groupOrderByWithRelationInput | auth_groupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for auth_groups.
     */
    cursor?: auth_groupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of auth_groups.
     */
    distinct?: Auth_groupScalarFieldEnum | Auth_groupScalarFieldEnum[]
  }

  /**
   * auth_group findFirstOrThrow
   */
  export type auth_groupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group
     */
    select?: auth_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group
     */
    omit?: auth_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_groupInclude<ExtArgs> | null
    /**
     * Filter, which auth_group to fetch.
     */
    where?: auth_groupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_groups to fetch.
     */
    orderBy?: auth_groupOrderByWithRelationInput | auth_groupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for auth_groups.
     */
    cursor?: auth_groupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of auth_groups.
     */
    distinct?: Auth_groupScalarFieldEnum | Auth_groupScalarFieldEnum[]
  }

  /**
   * auth_group findMany
   */
  export type auth_groupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group
     */
    select?: auth_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group
     */
    omit?: auth_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_groupInclude<ExtArgs> | null
    /**
     * Filter, which auth_groups to fetch.
     */
    where?: auth_groupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_groups to fetch.
     */
    orderBy?: auth_groupOrderByWithRelationInput | auth_groupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing auth_groups.
     */
    cursor?: auth_groupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_groups.
     */
    skip?: number
    distinct?: Auth_groupScalarFieldEnum | Auth_groupScalarFieldEnum[]
  }

  /**
   * auth_group create
   */
  export type auth_groupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group
     */
    select?: auth_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group
     */
    omit?: auth_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_groupInclude<ExtArgs> | null
    /**
     * The data needed to create a auth_group.
     */
    data: XOR<auth_groupCreateInput, auth_groupUncheckedCreateInput>
  }

  /**
   * auth_group createMany
   */
  export type auth_groupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many auth_groups.
     */
    data: auth_groupCreateManyInput | auth_groupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * auth_group update
   */
  export type auth_groupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group
     */
    select?: auth_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group
     */
    omit?: auth_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_groupInclude<ExtArgs> | null
    /**
     * The data needed to update a auth_group.
     */
    data: XOR<auth_groupUpdateInput, auth_groupUncheckedUpdateInput>
    /**
     * Choose, which auth_group to update.
     */
    where: auth_groupWhereUniqueInput
  }

  /**
   * auth_group updateMany
   */
  export type auth_groupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update auth_groups.
     */
    data: XOR<auth_groupUpdateManyMutationInput, auth_groupUncheckedUpdateManyInput>
    /**
     * Filter which auth_groups to update
     */
    where?: auth_groupWhereInput
    /**
     * Limit how many auth_groups to update.
     */
    limit?: number
  }

  /**
   * auth_group upsert
   */
  export type auth_groupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group
     */
    select?: auth_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group
     */
    omit?: auth_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_groupInclude<ExtArgs> | null
    /**
     * The filter to search for the auth_group to update in case it exists.
     */
    where: auth_groupWhereUniqueInput
    /**
     * In case the auth_group found by the `where` argument doesn't exist, create a new auth_group with this data.
     */
    create: XOR<auth_groupCreateInput, auth_groupUncheckedCreateInput>
    /**
     * In case the auth_group was found with the provided `where` argument, update it with this data.
     */
    update: XOR<auth_groupUpdateInput, auth_groupUncheckedUpdateInput>
  }

  /**
   * auth_group delete
   */
  export type auth_groupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group
     */
    select?: auth_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group
     */
    omit?: auth_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_groupInclude<ExtArgs> | null
    /**
     * Filter which auth_group to delete.
     */
    where: auth_groupWhereUniqueInput
  }

  /**
   * auth_group deleteMany
   */
  export type auth_groupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which auth_groups to delete
     */
    where?: auth_groupWhereInput
    /**
     * Limit how many auth_groups to delete.
     */
    limit?: number
  }

  /**
   * auth_group.auth_group_permissions
   */
  export type auth_group$auth_group_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group_permissions
     */
    select?: auth_group_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group_permissions
     */
    omit?: auth_group_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_group_permissionsInclude<ExtArgs> | null
    where?: auth_group_permissionsWhereInput
    orderBy?: auth_group_permissionsOrderByWithRelationInput | auth_group_permissionsOrderByWithRelationInput[]
    cursor?: auth_group_permissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Auth_group_permissionsScalarFieldEnum | Auth_group_permissionsScalarFieldEnum[]
  }

  /**
   * auth_group.auth_user_groups
   */
  export type auth_group$auth_user_groupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_groups
     */
    select?: auth_user_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_groups
     */
    omit?: auth_user_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_groupsInclude<ExtArgs> | null
    where?: auth_user_groupsWhereInput
    orderBy?: auth_user_groupsOrderByWithRelationInput | auth_user_groupsOrderByWithRelationInput[]
    cursor?: auth_user_groupsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Auth_user_groupsScalarFieldEnum | Auth_user_groupsScalarFieldEnum[]
  }

  /**
   * auth_group without action
   */
  export type auth_groupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group
     */
    select?: auth_groupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group
     */
    omit?: auth_groupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_groupInclude<ExtArgs> | null
  }


  /**
   * Model auth_group_permissions
   */

  export type AggregateAuth_group_permissions = {
    _count: Auth_group_permissionsCountAggregateOutputType | null
    _avg: Auth_group_permissionsAvgAggregateOutputType | null
    _sum: Auth_group_permissionsSumAggregateOutputType | null
    _min: Auth_group_permissionsMinAggregateOutputType | null
    _max: Auth_group_permissionsMaxAggregateOutputType | null
  }

  export type Auth_group_permissionsAvgAggregateOutputType = {
    id: number | null
    group_id: number | null
    permission_id: number | null
  }

  export type Auth_group_permissionsSumAggregateOutputType = {
    id: bigint | null
    group_id: number | null
    permission_id: number | null
  }

  export type Auth_group_permissionsMinAggregateOutputType = {
    id: bigint | null
    group_id: number | null
    permission_id: number | null
  }

  export type Auth_group_permissionsMaxAggregateOutputType = {
    id: bigint | null
    group_id: number | null
    permission_id: number | null
  }

  export type Auth_group_permissionsCountAggregateOutputType = {
    id: number
    group_id: number
    permission_id: number
    _all: number
  }


  export type Auth_group_permissionsAvgAggregateInputType = {
    id?: true
    group_id?: true
    permission_id?: true
  }

  export type Auth_group_permissionsSumAggregateInputType = {
    id?: true
    group_id?: true
    permission_id?: true
  }

  export type Auth_group_permissionsMinAggregateInputType = {
    id?: true
    group_id?: true
    permission_id?: true
  }

  export type Auth_group_permissionsMaxAggregateInputType = {
    id?: true
    group_id?: true
    permission_id?: true
  }

  export type Auth_group_permissionsCountAggregateInputType = {
    id?: true
    group_id?: true
    permission_id?: true
    _all?: true
  }

  export type Auth_group_permissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which auth_group_permissions to aggregate.
     */
    where?: auth_group_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_group_permissions to fetch.
     */
    orderBy?: auth_group_permissionsOrderByWithRelationInput | auth_group_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: auth_group_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_group_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_group_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned auth_group_permissions
    **/
    _count?: true | Auth_group_permissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Auth_group_permissionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Auth_group_permissionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Auth_group_permissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Auth_group_permissionsMaxAggregateInputType
  }

  export type GetAuth_group_permissionsAggregateType<T extends Auth_group_permissionsAggregateArgs> = {
        [P in keyof T & keyof AggregateAuth_group_permissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuth_group_permissions[P]>
      : GetScalarType<T[P], AggregateAuth_group_permissions[P]>
  }




  export type auth_group_permissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: auth_group_permissionsWhereInput
    orderBy?: auth_group_permissionsOrderByWithAggregationInput | auth_group_permissionsOrderByWithAggregationInput[]
    by: Auth_group_permissionsScalarFieldEnum[] | Auth_group_permissionsScalarFieldEnum
    having?: auth_group_permissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Auth_group_permissionsCountAggregateInputType | true
    _avg?: Auth_group_permissionsAvgAggregateInputType
    _sum?: Auth_group_permissionsSumAggregateInputType
    _min?: Auth_group_permissionsMinAggregateInputType
    _max?: Auth_group_permissionsMaxAggregateInputType
  }

  export type Auth_group_permissionsGroupByOutputType = {
    id: bigint
    group_id: number
    permission_id: number
    _count: Auth_group_permissionsCountAggregateOutputType | null
    _avg: Auth_group_permissionsAvgAggregateOutputType | null
    _sum: Auth_group_permissionsSumAggregateOutputType | null
    _min: Auth_group_permissionsMinAggregateOutputType | null
    _max: Auth_group_permissionsMaxAggregateOutputType | null
  }

  type GetAuth_group_permissionsGroupByPayload<T extends auth_group_permissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Auth_group_permissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Auth_group_permissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Auth_group_permissionsGroupByOutputType[P]>
            : GetScalarType<T[P], Auth_group_permissionsGroupByOutputType[P]>
        }
      >
    >


  export type auth_group_permissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    group_id?: boolean
    permission_id?: boolean
    auth_permission?: boolean | auth_permissionDefaultArgs<ExtArgs>
    auth_group?: boolean | auth_groupDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auth_group_permissions"]>



  export type auth_group_permissionsSelectScalar = {
    id?: boolean
    group_id?: boolean
    permission_id?: boolean
  }

  export type auth_group_permissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "group_id" | "permission_id", ExtArgs["result"]["auth_group_permissions"]>
  export type auth_group_permissionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auth_permission?: boolean | auth_permissionDefaultArgs<ExtArgs>
    auth_group?: boolean | auth_groupDefaultArgs<ExtArgs>
  }

  export type $auth_group_permissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "auth_group_permissions"
    objects: {
      auth_permission: Prisma.$auth_permissionPayload<ExtArgs>
      auth_group: Prisma.$auth_groupPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      group_id: number
      permission_id: number
    }, ExtArgs["result"]["auth_group_permissions"]>
    composites: {}
  }

  type auth_group_permissionsGetPayload<S extends boolean | null | undefined | auth_group_permissionsDefaultArgs> = $Result.GetResult<Prisma.$auth_group_permissionsPayload, S>

  type auth_group_permissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<auth_group_permissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Auth_group_permissionsCountAggregateInputType | true
    }

  export interface auth_group_permissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['auth_group_permissions'], meta: { name: 'auth_group_permissions' } }
    /**
     * Find zero or one Auth_group_permissions that matches the filter.
     * @param {auth_group_permissionsFindUniqueArgs} args - Arguments to find a Auth_group_permissions
     * @example
     * // Get one Auth_group_permissions
     * const auth_group_permissions = await prisma.auth_group_permissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends auth_group_permissionsFindUniqueArgs>(args: SelectSubset<T, auth_group_permissionsFindUniqueArgs<ExtArgs>>): Prisma__auth_group_permissionsClient<$Result.GetResult<Prisma.$auth_group_permissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Auth_group_permissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {auth_group_permissionsFindUniqueOrThrowArgs} args - Arguments to find a Auth_group_permissions
     * @example
     * // Get one Auth_group_permissions
     * const auth_group_permissions = await prisma.auth_group_permissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends auth_group_permissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, auth_group_permissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__auth_group_permissionsClient<$Result.GetResult<Prisma.$auth_group_permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auth_group_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_group_permissionsFindFirstArgs} args - Arguments to find a Auth_group_permissions
     * @example
     * // Get one Auth_group_permissions
     * const auth_group_permissions = await prisma.auth_group_permissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends auth_group_permissionsFindFirstArgs>(args?: SelectSubset<T, auth_group_permissionsFindFirstArgs<ExtArgs>>): Prisma__auth_group_permissionsClient<$Result.GetResult<Prisma.$auth_group_permissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auth_group_permissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_group_permissionsFindFirstOrThrowArgs} args - Arguments to find a Auth_group_permissions
     * @example
     * // Get one Auth_group_permissions
     * const auth_group_permissions = await prisma.auth_group_permissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends auth_group_permissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, auth_group_permissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__auth_group_permissionsClient<$Result.GetResult<Prisma.$auth_group_permissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Auth_group_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_group_permissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Auth_group_permissions
     * const auth_group_permissions = await prisma.auth_group_permissions.findMany()
     * 
     * // Get first 10 Auth_group_permissions
     * const auth_group_permissions = await prisma.auth_group_permissions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auth_group_permissionsWithIdOnly = await prisma.auth_group_permissions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends auth_group_permissionsFindManyArgs>(args?: SelectSubset<T, auth_group_permissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_group_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Auth_group_permissions.
     * @param {auth_group_permissionsCreateArgs} args - Arguments to create a Auth_group_permissions.
     * @example
     * // Create one Auth_group_permissions
     * const Auth_group_permissions = await prisma.auth_group_permissions.create({
     *   data: {
     *     // ... data to create a Auth_group_permissions
     *   }
     * })
     * 
     */
    create<T extends auth_group_permissionsCreateArgs>(args: SelectSubset<T, auth_group_permissionsCreateArgs<ExtArgs>>): Prisma__auth_group_permissionsClient<$Result.GetResult<Prisma.$auth_group_permissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Auth_group_permissions.
     * @param {auth_group_permissionsCreateManyArgs} args - Arguments to create many Auth_group_permissions.
     * @example
     * // Create many Auth_group_permissions
     * const auth_group_permissions = await prisma.auth_group_permissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends auth_group_permissionsCreateManyArgs>(args?: SelectSubset<T, auth_group_permissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Auth_group_permissions.
     * @param {auth_group_permissionsDeleteArgs} args - Arguments to delete one Auth_group_permissions.
     * @example
     * // Delete one Auth_group_permissions
     * const Auth_group_permissions = await prisma.auth_group_permissions.delete({
     *   where: {
     *     // ... filter to delete one Auth_group_permissions
     *   }
     * })
     * 
     */
    delete<T extends auth_group_permissionsDeleteArgs>(args: SelectSubset<T, auth_group_permissionsDeleteArgs<ExtArgs>>): Prisma__auth_group_permissionsClient<$Result.GetResult<Prisma.$auth_group_permissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Auth_group_permissions.
     * @param {auth_group_permissionsUpdateArgs} args - Arguments to update one Auth_group_permissions.
     * @example
     * // Update one Auth_group_permissions
     * const auth_group_permissions = await prisma.auth_group_permissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends auth_group_permissionsUpdateArgs>(args: SelectSubset<T, auth_group_permissionsUpdateArgs<ExtArgs>>): Prisma__auth_group_permissionsClient<$Result.GetResult<Prisma.$auth_group_permissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Auth_group_permissions.
     * @param {auth_group_permissionsDeleteManyArgs} args - Arguments to filter Auth_group_permissions to delete.
     * @example
     * // Delete a few Auth_group_permissions
     * const { count } = await prisma.auth_group_permissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends auth_group_permissionsDeleteManyArgs>(args?: SelectSubset<T, auth_group_permissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Auth_group_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_group_permissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Auth_group_permissions
     * const auth_group_permissions = await prisma.auth_group_permissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends auth_group_permissionsUpdateManyArgs>(args: SelectSubset<T, auth_group_permissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Auth_group_permissions.
     * @param {auth_group_permissionsUpsertArgs} args - Arguments to update or create a Auth_group_permissions.
     * @example
     * // Update or create a Auth_group_permissions
     * const auth_group_permissions = await prisma.auth_group_permissions.upsert({
     *   create: {
     *     // ... data to create a Auth_group_permissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Auth_group_permissions we want to update
     *   }
     * })
     */
    upsert<T extends auth_group_permissionsUpsertArgs>(args: SelectSubset<T, auth_group_permissionsUpsertArgs<ExtArgs>>): Prisma__auth_group_permissionsClient<$Result.GetResult<Prisma.$auth_group_permissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Auth_group_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_group_permissionsCountArgs} args - Arguments to filter Auth_group_permissions to count.
     * @example
     * // Count the number of Auth_group_permissions
     * const count = await prisma.auth_group_permissions.count({
     *   where: {
     *     // ... the filter for the Auth_group_permissions we want to count
     *   }
     * })
    **/
    count<T extends auth_group_permissionsCountArgs>(
      args?: Subset<T, auth_group_permissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Auth_group_permissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Auth_group_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Auth_group_permissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Auth_group_permissionsAggregateArgs>(args: Subset<T, Auth_group_permissionsAggregateArgs>): Prisma.PrismaPromise<GetAuth_group_permissionsAggregateType<T>>

    /**
     * Group by Auth_group_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_group_permissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends auth_group_permissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: auth_group_permissionsGroupByArgs['orderBy'] }
        : { orderBy?: auth_group_permissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, auth_group_permissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuth_group_permissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the auth_group_permissions model
   */
  readonly fields: auth_group_permissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for auth_group_permissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__auth_group_permissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    auth_permission<T extends auth_permissionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, auth_permissionDefaultArgs<ExtArgs>>): Prisma__auth_permissionClient<$Result.GetResult<Prisma.$auth_permissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    auth_group<T extends auth_groupDefaultArgs<ExtArgs> = {}>(args?: Subset<T, auth_groupDefaultArgs<ExtArgs>>): Prisma__auth_groupClient<$Result.GetResult<Prisma.$auth_groupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the auth_group_permissions model
   */
  interface auth_group_permissionsFieldRefs {
    readonly id: FieldRef<"auth_group_permissions", 'BigInt'>
    readonly group_id: FieldRef<"auth_group_permissions", 'Int'>
    readonly permission_id: FieldRef<"auth_group_permissions", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * auth_group_permissions findUnique
   */
  export type auth_group_permissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group_permissions
     */
    select?: auth_group_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group_permissions
     */
    omit?: auth_group_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_group_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which auth_group_permissions to fetch.
     */
    where: auth_group_permissionsWhereUniqueInput
  }

  /**
   * auth_group_permissions findUniqueOrThrow
   */
  export type auth_group_permissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group_permissions
     */
    select?: auth_group_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group_permissions
     */
    omit?: auth_group_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_group_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which auth_group_permissions to fetch.
     */
    where: auth_group_permissionsWhereUniqueInput
  }

  /**
   * auth_group_permissions findFirst
   */
  export type auth_group_permissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group_permissions
     */
    select?: auth_group_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group_permissions
     */
    omit?: auth_group_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_group_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which auth_group_permissions to fetch.
     */
    where?: auth_group_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_group_permissions to fetch.
     */
    orderBy?: auth_group_permissionsOrderByWithRelationInput | auth_group_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for auth_group_permissions.
     */
    cursor?: auth_group_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_group_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_group_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of auth_group_permissions.
     */
    distinct?: Auth_group_permissionsScalarFieldEnum | Auth_group_permissionsScalarFieldEnum[]
  }

  /**
   * auth_group_permissions findFirstOrThrow
   */
  export type auth_group_permissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group_permissions
     */
    select?: auth_group_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group_permissions
     */
    omit?: auth_group_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_group_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which auth_group_permissions to fetch.
     */
    where?: auth_group_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_group_permissions to fetch.
     */
    orderBy?: auth_group_permissionsOrderByWithRelationInput | auth_group_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for auth_group_permissions.
     */
    cursor?: auth_group_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_group_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_group_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of auth_group_permissions.
     */
    distinct?: Auth_group_permissionsScalarFieldEnum | Auth_group_permissionsScalarFieldEnum[]
  }

  /**
   * auth_group_permissions findMany
   */
  export type auth_group_permissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group_permissions
     */
    select?: auth_group_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group_permissions
     */
    omit?: auth_group_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_group_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which auth_group_permissions to fetch.
     */
    where?: auth_group_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_group_permissions to fetch.
     */
    orderBy?: auth_group_permissionsOrderByWithRelationInput | auth_group_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing auth_group_permissions.
     */
    cursor?: auth_group_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_group_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_group_permissions.
     */
    skip?: number
    distinct?: Auth_group_permissionsScalarFieldEnum | Auth_group_permissionsScalarFieldEnum[]
  }

  /**
   * auth_group_permissions create
   */
  export type auth_group_permissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group_permissions
     */
    select?: auth_group_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group_permissions
     */
    omit?: auth_group_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_group_permissionsInclude<ExtArgs> | null
    /**
     * The data needed to create a auth_group_permissions.
     */
    data: XOR<auth_group_permissionsCreateInput, auth_group_permissionsUncheckedCreateInput>
  }

  /**
   * auth_group_permissions createMany
   */
  export type auth_group_permissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many auth_group_permissions.
     */
    data: auth_group_permissionsCreateManyInput | auth_group_permissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * auth_group_permissions update
   */
  export type auth_group_permissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group_permissions
     */
    select?: auth_group_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group_permissions
     */
    omit?: auth_group_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_group_permissionsInclude<ExtArgs> | null
    /**
     * The data needed to update a auth_group_permissions.
     */
    data: XOR<auth_group_permissionsUpdateInput, auth_group_permissionsUncheckedUpdateInput>
    /**
     * Choose, which auth_group_permissions to update.
     */
    where: auth_group_permissionsWhereUniqueInput
  }

  /**
   * auth_group_permissions updateMany
   */
  export type auth_group_permissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update auth_group_permissions.
     */
    data: XOR<auth_group_permissionsUpdateManyMutationInput, auth_group_permissionsUncheckedUpdateManyInput>
    /**
     * Filter which auth_group_permissions to update
     */
    where?: auth_group_permissionsWhereInput
    /**
     * Limit how many auth_group_permissions to update.
     */
    limit?: number
  }

  /**
   * auth_group_permissions upsert
   */
  export type auth_group_permissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group_permissions
     */
    select?: auth_group_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group_permissions
     */
    omit?: auth_group_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_group_permissionsInclude<ExtArgs> | null
    /**
     * The filter to search for the auth_group_permissions to update in case it exists.
     */
    where: auth_group_permissionsWhereUniqueInput
    /**
     * In case the auth_group_permissions found by the `where` argument doesn't exist, create a new auth_group_permissions with this data.
     */
    create: XOR<auth_group_permissionsCreateInput, auth_group_permissionsUncheckedCreateInput>
    /**
     * In case the auth_group_permissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<auth_group_permissionsUpdateInput, auth_group_permissionsUncheckedUpdateInput>
  }

  /**
   * auth_group_permissions delete
   */
  export type auth_group_permissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group_permissions
     */
    select?: auth_group_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group_permissions
     */
    omit?: auth_group_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_group_permissionsInclude<ExtArgs> | null
    /**
     * Filter which auth_group_permissions to delete.
     */
    where: auth_group_permissionsWhereUniqueInput
  }

  /**
   * auth_group_permissions deleteMany
   */
  export type auth_group_permissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which auth_group_permissions to delete
     */
    where?: auth_group_permissionsWhereInput
    /**
     * Limit how many auth_group_permissions to delete.
     */
    limit?: number
  }

  /**
   * auth_group_permissions without action
   */
  export type auth_group_permissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group_permissions
     */
    select?: auth_group_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group_permissions
     */
    omit?: auth_group_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_group_permissionsInclude<ExtArgs> | null
  }


  /**
   * Model auth_permission
   */

  export type AggregateAuth_permission = {
    _count: Auth_permissionCountAggregateOutputType | null
    _avg: Auth_permissionAvgAggregateOutputType | null
    _sum: Auth_permissionSumAggregateOutputType | null
    _min: Auth_permissionMinAggregateOutputType | null
    _max: Auth_permissionMaxAggregateOutputType | null
  }

  export type Auth_permissionAvgAggregateOutputType = {
    id: number | null
    content_type_id: number | null
  }

  export type Auth_permissionSumAggregateOutputType = {
    id: number | null
    content_type_id: number | null
  }

  export type Auth_permissionMinAggregateOutputType = {
    id: number | null
    name: string | null
    content_type_id: number | null
    codename: string | null
  }

  export type Auth_permissionMaxAggregateOutputType = {
    id: number | null
    name: string | null
    content_type_id: number | null
    codename: string | null
  }

  export type Auth_permissionCountAggregateOutputType = {
    id: number
    name: number
    content_type_id: number
    codename: number
    _all: number
  }


  export type Auth_permissionAvgAggregateInputType = {
    id?: true
    content_type_id?: true
  }

  export type Auth_permissionSumAggregateInputType = {
    id?: true
    content_type_id?: true
  }

  export type Auth_permissionMinAggregateInputType = {
    id?: true
    name?: true
    content_type_id?: true
    codename?: true
  }

  export type Auth_permissionMaxAggregateInputType = {
    id?: true
    name?: true
    content_type_id?: true
    codename?: true
  }

  export type Auth_permissionCountAggregateInputType = {
    id?: true
    name?: true
    content_type_id?: true
    codename?: true
    _all?: true
  }

  export type Auth_permissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which auth_permission to aggregate.
     */
    where?: auth_permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_permissions to fetch.
     */
    orderBy?: auth_permissionOrderByWithRelationInput | auth_permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: auth_permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned auth_permissions
    **/
    _count?: true | Auth_permissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Auth_permissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Auth_permissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Auth_permissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Auth_permissionMaxAggregateInputType
  }

  export type GetAuth_permissionAggregateType<T extends Auth_permissionAggregateArgs> = {
        [P in keyof T & keyof AggregateAuth_permission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuth_permission[P]>
      : GetScalarType<T[P], AggregateAuth_permission[P]>
  }




  export type auth_permissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: auth_permissionWhereInput
    orderBy?: auth_permissionOrderByWithAggregationInput | auth_permissionOrderByWithAggregationInput[]
    by: Auth_permissionScalarFieldEnum[] | Auth_permissionScalarFieldEnum
    having?: auth_permissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Auth_permissionCountAggregateInputType | true
    _avg?: Auth_permissionAvgAggregateInputType
    _sum?: Auth_permissionSumAggregateInputType
    _min?: Auth_permissionMinAggregateInputType
    _max?: Auth_permissionMaxAggregateInputType
  }

  export type Auth_permissionGroupByOutputType = {
    id: number
    name: string
    content_type_id: number
    codename: string
    _count: Auth_permissionCountAggregateOutputType | null
    _avg: Auth_permissionAvgAggregateOutputType | null
    _sum: Auth_permissionSumAggregateOutputType | null
    _min: Auth_permissionMinAggregateOutputType | null
    _max: Auth_permissionMaxAggregateOutputType | null
  }

  type GetAuth_permissionGroupByPayload<T extends auth_permissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Auth_permissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Auth_permissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Auth_permissionGroupByOutputType[P]>
            : GetScalarType<T[P], Auth_permissionGroupByOutputType[P]>
        }
      >
    >


  export type auth_permissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    content_type_id?: boolean
    codename?: boolean
    auth_group_permissions?: boolean | auth_permission$auth_group_permissionsArgs<ExtArgs>
    django_content_type?: boolean | django_content_typeDefaultArgs<ExtArgs>
    auth_user_user_permissions?: boolean | auth_permission$auth_user_user_permissionsArgs<ExtArgs>
    _count?: boolean | Auth_permissionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auth_permission"]>



  export type auth_permissionSelectScalar = {
    id?: boolean
    name?: boolean
    content_type_id?: boolean
    codename?: boolean
  }

  export type auth_permissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "content_type_id" | "codename", ExtArgs["result"]["auth_permission"]>
  export type auth_permissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auth_group_permissions?: boolean | auth_permission$auth_group_permissionsArgs<ExtArgs>
    django_content_type?: boolean | django_content_typeDefaultArgs<ExtArgs>
    auth_user_user_permissions?: boolean | auth_permission$auth_user_user_permissionsArgs<ExtArgs>
    _count?: boolean | Auth_permissionCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $auth_permissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "auth_permission"
    objects: {
      auth_group_permissions: Prisma.$auth_group_permissionsPayload<ExtArgs>[]
      django_content_type: Prisma.$django_content_typePayload<ExtArgs>
      auth_user_user_permissions: Prisma.$auth_user_user_permissionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      content_type_id: number
      codename: string
    }, ExtArgs["result"]["auth_permission"]>
    composites: {}
  }

  type auth_permissionGetPayload<S extends boolean | null | undefined | auth_permissionDefaultArgs> = $Result.GetResult<Prisma.$auth_permissionPayload, S>

  type auth_permissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<auth_permissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Auth_permissionCountAggregateInputType | true
    }

  export interface auth_permissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['auth_permission'], meta: { name: 'auth_permission' } }
    /**
     * Find zero or one Auth_permission that matches the filter.
     * @param {auth_permissionFindUniqueArgs} args - Arguments to find a Auth_permission
     * @example
     * // Get one Auth_permission
     * const auth_permission = await prisma.auth_permission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends auth_permissionFindUniqueArgs>(args: SelectSubset<T, auth_permissionFindUniqueArgs<ExtArgs>>): Prisma__auth_permissionClient<$Result.GetResult<Prisma.$auth_permissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Auth_permission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {auth_permissionFindUniqueOrThrowArgs} args - Arguments to find a Auth_permission
     * @example
     * // Get one Auth_permission
     * const auth_permission = await prisma.auth_permission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends auth_permissionFindUniqueOrThrowArgs>(args: SelectSubset<T, auth_permissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__auth_permissionClient<$Result.GetResult<Prisma.$auth_permissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auth_permission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_permissionFindFirstArgs} args - Arguments to find a Auth_permission
     * @example
     * // Get one Auth_permission
     * const auth_permission = await prisma.auth_permission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends auth_permissionFindFirstArgs>(args?: SelectSubset<T, auth_permissionFindFirstArgs<ExtArgs>>): Prisma__auth_permissionClient<$Result.GetResult<Prisma.$auth_permissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auth_permission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_permissionFindFirstOrThrowArgs} args - Arguments to find a Auth_permission
     * @example
     * // Get one Auth_permission
     * const auth_permission = await prisma.auth_permission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends auth_permissionFindFirstOrThrowArgs>(args?: SelectSubset<T, auth_permissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__auth_permissionClient<$Result.GetResult<Prisma.$auth_permissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Auth_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_permissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Auth_permissions
     * const auth_permissions = await prisma.auth_permission.findMany()
     * 
     * // Get first 10 Auth_permissions
     * const auth_permissions = await prisma.auth_permission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auth_permissionWithIdOnly = await prisma.auth_permission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends auth_permissionFindManyArgs>(args?: SelectSubset<T, auth_permissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_permissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Auth_permission.
     * @param {auth_permissionCreateArgs} args - Arguments to create a Auth_permission.
     * @example
     * // Create one Auth_permission
     * const Auth_permission = await prisma.auth_permission.create({
     *   data: {
     *     // ... data to create a Auth_permission
     *   }
     * })
     * 
     */
    create<T extends auth_permissionCreateArgs>(args: SelectSubset<T, auth_permissionCreateArgs<ExtArgs>>): Prisma__auth_permissionClient<$Result.GetResult<Prisma.$auth_permissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Auth_permissions.
     * @param {auth_permissionCreateManyArgs} args - Arguments to create many Auth_permissions.
     * @example
     * // Create many Auth_permissions
     * const auth_permission = await prisma.auth_permission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends auth_permissionCreateManyArgs>(args?: SelectSubset<T, auth_permissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Auth_permission.
     * @param {auth_permissionDeleteArgs} args - Arguments to delete one Auth_permission.
     * @example
     * // Delete one Auth_permission
     * const Auth_permission = await prisma.auth_permission.delete({
     *   where: {
     *     // ... filter to delete one Auth_permission
     *   }
     * })
     * 
     */
    delete<T extends auth_permissionDeleteArgs>(args: SelectSubset<T, auth_permissionDeleteArgs<ExtArgs>>): Prisma__auth_permissionClient<$Result.GetResult<Prisma.$auth_permissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Auth_permission.
     * @param {auth_permissionUpdateArgs} args - Arguments to update one Auth_permission.
     * @example
     * // Update one Auth_permission
     * const auth_permission = await prisma.auth_permission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends auth_permissionUpdateArgs>(args: SelectSubset<T, auth_permissionUpdateArgs<ExtArgs>>): Prisma__auth_permissionClient<$Result.GetResult<Prisma.$auth_permissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Auth_permissions.
     * @param {auth_permissionDeleteManyArgs} args - Arguments to filter Auth_permissions to delete.
     * @example
     * // Delete a few Auth_permissions
     * const { count } = await prisma.auth_permission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends auth_permissionDeleteManyArgs>(args?: SelectSubset<T, auth_permissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Auth_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_permissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Auth_permissions
     * const auth_permission = await prisma.auth_permission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends auth_permissionUpdateManyArgs>(args: SelectSubset<T, auth_permissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Auth_permission.
     * @param {auth_permissionUpsertArgs} args - Arguments to update or create a Auth_permission.
     * @example
     * // Update or create a Auth_permission
     * const auth_permission = await prisma.auth_permission.upsert({
     *   create: {
     *     // ... data to create a Auth_permission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Auth_permission we want to update
     *   }
     * })
     */
    upsert<T extends auth_permissionUpsertArgs>(args: SelectSubset<T, auth_permissionUpsertArgs<ExtArgs>>): Prisma__auth_permissionClient<$Result.GetResult<Prisma.$auth_permissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Auth_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_permissionCountArgs} args - Arguments to filter Auth_permissions to count.
     * @example
     * // Count the number of Auth_permissions
     * const count = await prisma.auth_permission.count({
     *   where: {
     *     // ... the filter for the Auth_permissions we want to count
     *   }
     * })
    **/
    count<T extends auth_permissionCountArgs>(
      args?: Subset<T, auth_permissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Auth_permissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Auth_permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Auth_permissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Auth_permissionAggregateArgs>(args: Subset<T, Auth_permissionAggregateArgs>): Prisma.PrismaPromise<GetAuth_permissionAggregateType<T>>

    /**
     * Group by Auth_permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_permissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends auth_permissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: auth_permissionGroupByArgs['orderBy'] }
        : { orderBy?: auth_permissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, auth_permissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuth_permissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the auth_permission model
   */
  readonly fields: auth_permissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for auth_permission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__auth_permissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    auth_group_permissions<T extends auth_permission$auth_group_permissionsArgs<ExtArgs> = {}>(args?: Subset<T, auth_permission$auth_group_permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_group_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    django_content_type<T extends django_content_typeDefaultArgs<ExtArgs> = {}>(args?: Subset<T, django_content_typeDefaultArgs<ExtArgs>>): Prisma__django_content_typeClient<$Result.GetResult<Prisma.$django_content_typePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    auth_user_user_permissions<T extends auth_permission$auth_user_user_permissionsArgs<ExtArgs> = {}>(args?: Subset<T, auth_permission$auth_user_user_permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_user_user_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the auth_permission model
   */
  interface auth_permissionFieldRefs {
    readonly id: FieldRef<"auth_permission", 'Int'>
    readonly name: FieldRef<"auth_permission", 'String'>
    readonly content_type_id: FieldRef<"auth_permission", 'Int'>
    readonly codename: FieldRef<"auth_permission", 'String'>
  }
    

  // Custom InputTypes
  /**
   * auth_permission findUnique
   */
  export type auth_permissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_permission
     */
    select?: auth_permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_permission
     */
    omit?: auth_permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_permissionInclude<ExtArgs> | null
    /**
     * Filter, which auth_permission to fetch.
     */
    where: auth_permissionWhereUniqueInput
  }

  /**
   * auth_permission findUniqueOrThrow
   */
  export type auth_permissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_permission
     */
    select?: auth_permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_permission
     */
    omit?: auth_permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_permissionInclude<ExtArgs> | null
    /**
     * Filter, which auth_permission to fetch.
     */
    where: auth_permissionWhereUniqueInput
  }

  /**
   * auth_permission findFirst
   */
  export type auth_permissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_permission
     */
    select?: auth_permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_permission
     */
    omit?: auth_permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_permissionInclude<ExtArgs> | null
    /**
     * Filter, which auth_permission to fetch.
     */
    where?: auth_permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_permissions to fetch.
     */
    orderBy?: auth_permissionOrderByWithRelationInput | auth_permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for auth_permissions.
     */
    cursor?: auth_permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of auth_permissions.
     */
    distinct?: Auth_permissionScalarFieldEnum | Auth_permissionScalarFieldEnum[]
  }

  /**
   * auth_permission findFirstOrThrow
   */
  export type auth_permissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_permission
     */
    select?: auth_permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_permission
     */
    omit?: auth_permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_permissionInclude<ExtArgs> | null
    /**
     * Filter, which auth_permission to fetch.
     */
    where?: auth_permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_permissions to fetch.
     */
    orderBy?: auth_permissionOrderByWithRelationInput | auth_permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for auth_permissions.
     */
    cursor?: auth_permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of auth_permissions.
     */
    distinct?: Auth_permissionScalarFieldEnum | Auth_permissionScalarFieldEnum[]
  }

  /**
   * auth_permission findMany
   */
  export type auth_permissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_permission
     */
    select?: auth_permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_permission
     */
    omit?: auth_permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_permissionInclude<ExtArgs> | null
    /**
     * Filter, which auth_permissions to fetch.
     */
    where?: auth_permissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_permissions to fetch.
     */
    orderBy?: auth_permissionOrderByWithRelationInput | auth_permissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing auth_permissions.
     */
    cursor?: auth_permissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_permissions.
     */
    skip?: number
    distinct?: Auth_permissionScalarFieldEnum | Auth_permissionScalarFieldEnum[]
  }

  /**
   * auth_permission create
   */
  export type auth_permissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_permission
     */
    select?: auth_permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_permission
     */
    omit?: auth_permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_permissionInclude<ExtArgs> | null
    /**
     * The data needed to create a auth_permission.
     */
    data: XOR<auth_permissionCreateInput, auth_permissionUncheckedCreateInput>
  }

  /**
   * auth_permission createMany
   */
  export type auth_permissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many auth_permissions.
     */
    data: auth_permissionCreateManyInput | auth_permissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * auth_permission update
   */
  export type auth_permissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_permission
     */
    select?: auth_permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_permission
     */
    omit?: auth_permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_permissionInclude<ExtArgs> | null
    /**
     * The data needed to update a auth_permission.
     */
    data: XOR<auth_permissionUpdateInput, auth_permissionUncheckedUpdateInput>
    /**
     * Choose, which auth_permission to update.
     */
    where: auth_permissionWhereUniqueInput
  }

  /**
   * auth_permission updateMany
   */
  export type auth_permissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update auth_permissions.
     */
    data: XOR<auth_permissionUpdateManyMutationInput, auth_permissionUncheckedUpdateManyInput>
    /**
     * Filter which auth_permissions to update
     */
    where?: auth_permissionWhereInput
    /**
     * Limit how many auth_permissions to update.
     */
    limit?: number
  }

  /**
   * auth_permission upsert
   */
  export type auth_permissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_permission
     */
    select?: auth_permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_permission
     */
    omit?: auth_permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_permissionInclude<ExtArgs> | null
    /**
     * The filter to search for the auth_permission to update in case it exists.
     */
    where: auth_permissionWhereUniqueInput
    /**
     * In case the auth_permission found by the `where` argument doesn't exist, create a new auth_permission with this data.
     */
    create: XOR<auth_permissionCreateInput, auth_permissionUncheckedCreateInput>
    /**
     * In case the auth_permission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<auth_permissionUpdateInput, auth_permissionUncheckedUpdateInput>
  }

  /**
   * auth_permission delete
   */
  export type auth_permissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_permission
     */
    select?: auth_permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_permission
     */
    omit?: auth_permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_permissionInclude<ExtArgs> | null
    /**
     * Filter which auth_permission to delete.
     */
    where: auth_permissionWhereUniqueInput
  }

  /**
   * auth_permission deleteMany
   */
  export type auth_permissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which auth_permissions to delete
     */
    where?: auth_permissionWhereInput
    /**
     * Limit how many auth_permissions to delete.
     */
    limit?: number
  }

  /**
   * auth_permission.auth_group_permissions
   */
  export type auth_permission$auth_group_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_group_permissions
     */
    select?: auth_group_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_group_permissions
     */
    omit?: auth_group_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_group_permissionsInclude<ExtArgs> | null
    where?: auth_group_permissionsWhereInput
    orderBy?: auth_group_permissionsOrderByWithRelationInput | auth_group_permissionsOrderByWithRelationInput[]
    cursor?: auth_group_permissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Auth_group_permissionsScalarFieldEnum | Auth_group_permissionsScalarFieldEnum[]
  }

  /**
   * auth_permission.auth_user_user_permissions
   */
  export type auth_permission$auth_user_user_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_user_permissions
     */
    select?: auth_user_user_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_user_permissions
     */
    omit?: auth_user_user_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_user_permissionsInclude<ExtArgs> | null
    where?: auth_user_user_permissionsWhereInput
    orderBy?: auth_user_user_permissionsOrderByWithRelationInput | auth_user_user_permissionsOrderByWithRelationInput[]
    cursor?: auth_user_user_permissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Auth_user_user_permissionsScalarFieldEnum | Auth_user_user_permissionsScalarFieldEnum[]
  }

  /**
   * auth_permission without action
   */
  export type auth_permissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_permission
     */
    select?: auth_permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_permission
     */
    omit?: auth_permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_permissionInclude<ExtArgs> | null
  }


  /**
   * Model auth_user
   */

  export type AggregateAuth_user = {
    _count: Auth_userCountAggregateOutputType | null
    _avg: Auth_userAvgAggregateOutputType | null
    _sum: Auth_userSumAggregateOutputType | null
    _min: Auth_userMinAggregateOutputType | null
    _max: Auth_userMaxAggregateOutputType | null
  }

  export type Auth_userAvgAggregateOutputType = {
    id: number | null
  }

  export type Auth_userSumAggregateOutputType = {
    id: number | null
  }

  export type Auth_userMinAggregateOutputType = {
    id: number | null
    password: string | null
    last_login: Date | null
    is_superuser: boolean | null
    username: string | null
    first_name: string | null
    last_name: string | null
    email: string | null
    is_staff: boolean | null
    is_active: boolean | null
    date_joined: Date | null
  }

  export type Auth_userMaxAggregateOutputType = {
    id: number | null
    password: string | null
    last_login: Date | null
    is_superuser: boolean | null
    username: string | null
    first_name: string | null
    last_name: string | null
    email: string | null
    is_staff: boolean | null
    is_active: boolean | null
    date_joined: Date | null
  }

  export type Auth_userCountAggregateOutputType = {
    id: number
    password: number
    last_login: number
    is_superuser: number
    username: number
    first_name: number
    last_name: number
    email: number
    is_staff: number
    is_active: number
    date_joined: number
    _all: number
  }


  export type Auth_userAvgAggregateInputType = {
    id?: true
  }

  export type Auth_userSumAggregateInputType = {
    id?: true
  }

  export type Auth_userMinAggregateInputType = {
    id?: true
    password?: true
    last_login?: true
    is_superuser?: true
    username?: true
    first_name?: true
    last_name?: true
    email?: true
    is_staff?: true
    is_active?: true
    date_joined?: true
  }

  export type Auth_userMaxAggregateInputType = {
    id?: true
    password?: true
    last_login?: true
    is_superuser?: true
    username?: true
    first_name?: true
    last_name?: true
    email?: true
    is_staff?: true
    is_active?: true
    date_joined?: true
  }

  export type Auth_userCountAggregateInputType = {
    id?: true
    password?: true
    last_login?: true
    is_superuser?: true
    username?: true
    first_name?: true
    last_name?: true
    email?: true
    is_staff?: true
    is_active?: true
    date_joined?: true
    _all?: true
  }

  export type Auth_userAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which auth_user to aggregate.
     */
    where?: auth_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_users to fetch.
     */
    orderBy?: auth_userOrderByWithRelationInput | auth_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: auth_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned auth_users
    **/
    _count?: true | Auth_userCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Auth_userAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Auth_userSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Auth_userMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Auth_userMaxAggregateInputType
  }

  export type GetAuth_userAggregateType<T extends Auth_userAggregateArgs> = {
        [P in keyof T & keyof AggregateAuth_user]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuth_user[P]>
      : GetScalarType<T[P], AggregateAuth_user[P]>
  }




  export type auth_userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: auth_userWhereInput
    orderBy?: auth_userOrderByWithAggregationInput | auth_userOrderByWithAggregationInput[]
    by: Auth_userScalarFieldEnum[] | Auth_userScalarFieldEnum
    having?: auth_userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Auth_userCountAggregateInputType | true
    _avg?: Auth_userAvgAggregateInputType
    _sum?: Auth_userSumAggregateInputType
    _min?: Auth_userMinAggregateInputType
    _max?: Auth_userMaxAggregateInputType
  }

  export type Auth_userGroupByOutputType = {
    id: number
    password: string
    last_login: Date | null
    is_superuser: boolean
    username: string
    first_name: string
    last_name: string
    email: string
    is_staff: boolean
    is_active: boolean
    date_joined: Date
    _count: Auth_userCountAggregateOutputType | null
    _avg: Auth_userAvgAggregateOutputType | null
    _sum: Auth_userSumAggregateOutputType | null
    _min: Auth_userMinAggregateOutputType | null
    _max: Auth_userMaxAggregateOutputType | null
  }

  type GetAuth_userGroupByPayload<T extends auth_userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Auth_userGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Auth_userGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Auth_userGroupByOutputType[P]>
            : GetScalarType<T[P], Auth_userGroupByOutputType[P]>
        }
      >
    >


  export type auth_userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    password?: boolean
    last_login?: boolean
    is_superuser?: boolean
    username?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    is_staff?: boolean
    is_active?: boolean
    date_joined?: boolean
    auth_user_groups?: boolean | auth_user$auth_user_groupsArgs<ExtArgs>
    auth_user_user_permissions?: boolean | auth_user$auth_user_user_permissionsArgs<ExtArgs>
    django_admin_log?: boolean | auth_user$django_admin_logArgs<ExtArgs>
    user_app_profile?: boolean | auth_user$user_app_profileArgs<ExtArgs>
    _count?: boolean | Auth_userCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auth_user"]>



  export type auth_userSelectScalar = {
    id?: boolean
    password?: boolean
    last_login?: boolean
    is_superuser?: boolean
    username?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    is_staff?: boolean
    is_active?: boolean
    date_joined?: boolean
  }

  export type auth_userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "password" | "last_login" | "is_superuser" | "username" | "first_name" | "last_name" | "email" | "is_staff" | "is_active" | "date_joined", ExtArgs["result"]["auth_user"]>
  export type auth_userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auth_user_groups?: boolean | auth_user$auth_user_groupsArgs<ExtArgs>
    auth_user_user_permissions?: boolean | auth_user$auth_user_user_permissionsArgs<ExtArgs>
    django_admin_log?: boolean | auth_user$django_admin_logArgs<ExtArgs>
    user_app_profile?: boolean | auth_user$user_app_profileArgs<ExtArgs>
    _count?: boolean | Auth_userCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $auth_userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "auth_user"
    objects: {
      auth_user_groups: Prisma.$auth_user_groupsPayload<ExtArgs>[]
      auth_user_user_permissions: Prisma.$auth_user_user_permissionsPayload<ExtArgs>[]
      django_admin_log: Prisma.$django_admin_logPayload<ExtArgs>[]
      user_app_profile: Prisma.$ProfilePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      password: string
      last_login: Date | null
      is_superuser: boolean
      username: string
      first_name: string
      last_name: string
      email: string
      is_staff: boolean
      is_active: boolean
      date_joined: Date
    }, ExtArgs["result"]["auth_user"]>
    composites: {}
  }

  type auth_userGetPayload<S extends boolean | null | undefined | auth_userDefaultArgs> = $Result.GetResult<Prisma.$auth_userPayload, S>

  type auth_userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<auth_userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Auth_userCountAggregateInputType | true
    }

  export interface auth_userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['auth_user'], meta: { name: 'auth_user' } }
    /**
     * Find zero or one Auth_user that matches the filter.
     * @param {auth_userFindUniqueArgs} args - Arguments to find a Auth_user
     * @example
     * // Get one Auth_user
     * const auth_user = await prisma.auth_user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends auth_userFindUniqueArgs>(args: SelectSubset<T, auth_userFindUniqueArgs<ExtArgs>>): Prisma__auth_userClient<$Result.GetResult<Prisma.$auth_userPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Auth_user that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {auth_userFindUniqueOrThrowArgs} args - Arguments to find a Auth_user
     * @example
     * // Get one Auth_user
     * const auth_user = await prisma.auth_user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends auth_userFindUniqueOrThrowArgs>(args: SelectSubset<T, auth_userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__auth_userClient<$Result.GetResult<Prisma.$auth_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auth_user that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_userFindFirstArgs} args - Arguments to find a Auth_user
     * @example
     * // Get one Auth_user
     * const auth_user = await prisma.auth_user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends auth_userFindFirstArgs>(args?: SelectSubset<T, auth_userFindFirstArgs<ExtArgs>>): Prisma__auth_userClient<$Result.GetResult<Prisma.$auth_userPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auth_user that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_userFindFirstOrThrowArgs} args - Arguments to find a Auth_user
     * @example
     * // Get one Auth_user
     * const auth_user = await prisma.auth_user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends auth_userFindFirstOrThrowArgs>(args?: SelectSubset<T, auth_userFindFirstOrThrowArgs<ExtArgs>>): Prisma__auth_userClient<$Result.GetResult<Prisma.$auth_userPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Auth_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Auth_users
     * const auth_users = await prisma.auth_user.findMany()
     * 
     * // Get first 10 Auth_users
     * const auth_users = await prisma.auth_user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auth_userWithIdOnly = await prisma.auth_user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends auth_userFindManyArgs>(args?: SelectSubset<T, auth_userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Auth_user.
     * @param {auth_userCreateArgs} args - Arguments to create a Auth_user.
     * @example
     * // Create one Auth_user
     * const Auth_user = await prisma.auth_user.create({
     *   data: {
     *     // ... data to create a Auth_user
     *   }
     * })
     * 
     */
    create<T extends auth_userCreateArgs>(args: SelectSubset<T, auth_userCreateArgs<ExtArgs>>): Prisma__auth_userClient<$Result.GetResult<Prisma.$auth_userPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Auth_users.
     * @param {auth_userCreateManyArgs} args - Arguments to create many Auth_users.
     * @example
     * // Create many Auth_users
     * const auth_user = await prisma.auth_user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends auth_userCreateManyArgs>(args?: SelectSubset<T, auth_userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Auth_user.
     * @param {auth_userDeleteArgs} args - Arguments to delete one Auth_user.
     * @example
     * // Delete one Auth_user
     * const Auth_user = await prisma.auth_user.delete({
     *   where: {
     *     // ... filter to delete one Auth_user
     *   }
     * })
     * 
     */
    delete<T extends auth_userDeleteArgs>(args: SelectSubset<T, auth_userDeleteArgs<ExtArgs>>): Prisma__auth_userClient<$Result.GetResult<Prisma.$auth_userPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Auth_user.
     * @param {auth_userUpdateArgs} args - Arguments to update one Auth_user.
     * @example
     * // Update one Auth_user
     * const auth_user = await prisma.auth_user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends auth_userUpdateArgs>(args: SelectSubset<T, auth_userUpdateArgs<ExtArgs>>): Prisma__auth_userClient<$Result.GetResult<Prisma.$auth_userPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Auth_users.
     * @param {auth_userDeleteManyArgs} args - Arguments to filter Auth_users to delete.
     * @example
     * // Delete a few Auth_users
     * const { count } = await prisma.auth_user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends auth_userDeleteManyArgs>(args?: SelectSubset<T, auth_userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Auth_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Auth_users
     * const auth_user = await prisma.auth_user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends auth_userUpdateManyArgs>(args: SelectSubset<T, auth_userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Auth_user.
     * @param {auth_userUpsertArgs} args - Arguments to update or create a Auth_user.
     * @example
     * // Update or create a Auth_user
     * const auth_user = await prisma.auth_user.upsert({
     *   create: {
     *     // ... data to create a Auth_user
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Auth_user we want to update
     *   }
     * })
     */
    upsert<T extends auth_userUpsertArgs>(args: SelectSubset<T, auth_userUpsertArgs<ExtArgs>>): Prisma__auth_userClient<$Result.GetResult<Prisma.$auth_userPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Auth_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_userCountArgs} args - Arguments to filter Auth_users to count.
     * @example
     * // Count the number of Auth_users
     * const count = await prisma.auth_user.count({
     *   where: {
     *     // ... the filter for the Auth_users we want to count
     *   }
     * })
    **/
    count<T extends auth_userCountArgs>(
      args?: Subset<T, auth_userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Auth_userCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Auth_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Auth_userAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Auth_userAggregateArgs>(args: Subset<T, Auth_userAggregateArgs>): Prisma.PrismaPromise<GetAuth_userAggregateType<T>>

    /**
     * Group by Auth_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends auth_userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: auth_userGroupByArgs['orderBy'] }
        : { orderBy?: auth_userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, auth_userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuth_userGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the auth_user model
   */
  readonly fields: auth_userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for auth_user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__auth_userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    auth_user_groups<T extends auth_user$auth_user_groupsArgs<ExtArgs> = {}>(args?: Subset<T, auth_user$auth_user_groupsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_user_groupsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    auth_user_user_permissions<T extends auth_user$auth_user_user_permissionsArgs<ExtArgs> = {}>(args?: Subset<T, auth_user$auth_user_user_permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_user_user_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    django_admin_log<T extends auth_user$django_admin_logArgs<ExtArgs> = {}>(args?: Subset<T, auth_user$django_admin_logArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$django_admin_logPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_app_profile<T extends auth_user$user_app_profileArgs<ExtArgs> = {}>(args?: Subset<T, auth_user$user_app_profileArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the auth_user model
   */
  interface auth_userFieldRefs {
    readonly id: FieldRef<"auth_user", 'Int'>
    readonly password: FieldRef<"auth_user", 'String'>
    readonly last_login: FieldRef<"auth_user", 'DateTime'>
    readonly is_superuser: FieldRef<"auth_user", 'Boolean'>
    readonly username: FieldRef<"auth_user", 'String'>
    readonly first_name: FieldRef<"auth_user", 'String'>
    readonly last_name: FieldRef<"auth_user", 'String'>
    readonly email: FieldRef<"auth_user", 'String'>
    readonly is_staff: FieldRef<"auth_user", 'Boolean'>
    readonly is_active: FieldRef<"auth_user", 'Boolean'>
    readonly date_joined: FieldRef<"auth_user", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * auth_user findUnique
   */
  export type auth_userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user
     */
    select?: auth_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user
     */
    omit?: auth_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_userInclude<ExtArgs> | null
    /**
     * Filter, which auth_user to fetch.
     */
    where: auth_userWhereUniqueInput
  }

  /**
   * auth_user findUniqueOrThrow
   */
  export type auth_userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user
     */
    select?: auth_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user
     */
    omit?: auth_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_userInclude<ExtArgs> | null
    /**
     * Filter, which auth_user to fetch.
     */
    where: auth_userWhereUniqueInput
  }

  /**
   * auth_user findFirst
   */
  export type auth_userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user
     */
    select?: auth_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user
     */
    omit?: auth_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_userInclude<ExtArgs> | null
    /**
     * Filter, which auth_user to fetch.
     */
    where?: auth_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_users to fetch.
     */
    orderBy?: auth_userOrderByWithRelationInput | auth_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for auth_users.
     */
    cursor?: auth_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of auth_users.
     */
    distinct?: Auth_userScalarFieldEnum | Auth_userScalarFieldEnum[]
  }

  /**
   * auth_user findFirstOrThrow
   */
  export type auth_userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user
     */
    select?: auth_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user
     */
    omit?: auth_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_userInclude<ExtArgs> | null
    /**
     * Filter, which auth_user to fetch.
     */
    where?: auth_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_users to fetch.
     */
    orderBy?: auth_userOrderByWithRelationInput | auth_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for auth_users.
     */
    cursor?: auth_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of auth_users.
     */
    distinct?: Auth_userScalarFieldEnum | Auth_userScalarFieldEnum[]
  }

  /**
   * auth_user findMany
   */
  export type auth_userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user
     */
    select?: auth_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user
     */
    omit?: auth_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_userInclude<ExtArgs> | null
    /**
     * Filter, which auth_users to fetch.
     */
    where?: auth_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_users to fetch.
     */
    orderBy?: auth_userOrderByWithRelationInput | auth_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing auth_users.
     */
    cursor?: auth_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_users.
     */
    skip?: number
    distinct?: Auth_userScalarFieldEnum | Auth_userScalarFieldEnum[]
  }

  /**
   * auth_user create
   */
  export type auth_userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user
     */
    select?: auth_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user
     */
    omit?: auth_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_userInclude<ExtArgs> | null
    /**
     * The data needed to create a auth_user.
     */
    data: XOR<auth_userCreateInput, auth_userUncheckedCreateInput>
  }

  /**
   * auth_user createMany
   */
  export type auth_userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many auth_users.
     */
    data: auth_userCreateManyInput | auth_userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * auth_user update
   */
  export type auth_userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user
     */
    select?: auth_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user
     */
    omit?: auth_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_userInclude<ExtArgs> | null
    /**
     * The data needed to update a auth_user.
     */
    data: XOR<auth_userUpdateInput, auth_userUncheckedUpdateInput>
    /**
     * Choose, which auth_user to update.
     */
    where: auth_userWhereUniqueInput
  }

  /**
   * auth_user updateMany
   */
  export type auth_userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update auth_users.
     */
    data: XOR<auth_userUpdateManyMutationInput, auth_userUncheckedUpdateManyInput>
    /**
     * Filter which auth_users to update
     */
    where?: auth_userWhereInput
    /**
     * Limit how many auth_users to update.
     */
    limit?: number
  }

  /**
   * auth_user upsert
   */
  export type auth_userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user
     */
    select?: auth_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user
     */
    omit?: auth_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_userInclude<ExtArgs> | null
    /**
     * The filter to search for the auth_user to update in case it exists.
     */
    where: auth_userWhereUniqueInput
    /**
     * In case the auth_user found by the `where` argument doesn't exist, create a new auth_user with this data.
     */
    create: XOR<auth_userCreateInput, auth_userUncheckedCreateInput>
    /**
     * In case the auth_user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<auth_userUpdateInput, auth_userUncheckedUpdateInput>
  }

  /**
   * auth_user delete
   */
  export type auth_userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user
     */
    select?: auth_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user
     */
    omit?: auth_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_userInclude<ExtArgs> | null
    /**
     * Filter which auth_user to delete.
     */
    where: auth_userWhereUniqueInput
  }

  /**
   * auth_user deleteMany
   */
  export type auth_userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which auth_users to delete
     */
    where?: auth_userWhereInput
    /**
     * Limit how many auth_users to delete.
     */
    limit?: number
  }

  /**
   * auth_user.auth_user_groups
   */
  export type auth_user$auth_user_groupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_groups
     */
    select?: auth_user_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_groups
     */
    omit?: auth_user_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_groupsInclude<ExtArgs> | null
    where?: auth_user_groupsWhereInput
    orderBy?: auth_user_groupsOrderByWithRelationInput | auth_user_groupsOrderByWithRelationInput[]
    cursor?: auth_user_groupsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Auth_user_groupsScalarFieldEnum | Auth_user_groupsScalarFieldEnum[]
  }

  /**
   * auth_user.auth_user_user_permissions
   */
  export type auth_user$auth_user_user_permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_user_permissions
     */
    select?: auth_user_user_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_user_permissions
     */
    omit?: auth_user_user_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_user_permissionsInclude<ExtArgs> | null
    where?: auth_user_user_permissionsWhereInput
    orderBy?: auth_user_user_permissionsOrderByWithRelationInput | auth_user_user_permissionsOrderByWithRelationInput[]
    cursor?: auth_user_user_permissionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Auth_user_user_permissionsScalarFieldEnum | Auth_user_user_permissionsScalarFieldEnum[]
  }

  /**
   * auth_user.django_admin_log
   */
  export type auth_user$django_admin_logArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_admin_log
     */
    select?: django_admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_admin_log
     */
    omit?: django_admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_admin_logInclude<ExtArgs> | null
    where?: django_admin_logWhereInput
    orderBy?: django_admin_logOrderByWithRelationInput | django_admin_logOrderByWithRelationInput[]
    cursor?: django_admin_logWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Django_admin_logScalarFieldEnum | Django_admin_logScalarFieldEnum[]
  }

  /**
   * auth_user.user_app_profile
   */
  export type auth_user$user_app_profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
  }

  /**
   * auth_user without action
   */
  export type auth_userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user
     */
    select?: auth_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user
     */
    omit?: auth_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_userInclude<ExtArgs> | null
  }


  /**
   * Model auth_user_groups
   */

  export type AggregateAuth_user_groups = {
    _count: Auth_user_groupsCountAggregateOutputType | null
    _avg: Auth_user_groupsAvgAggregateOutputType | null
    _sum: Auth_user_groupsSumAggregateOutputType | null
    _min: Auth_user_groupsMinAggregateOutputType | null
    _max: Auth_user_groupsMaxAggregateOutputType | null
  }

  export type Auth_user_groupsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    group_id: number | null
  }

  export type Auth_user_groupsSumAggregateOutputType = {
    id: bigint | null
    user_id: number | null
    group_id: number | null
  }

  export type Auth_user_groupsMinAggregateOutputType = {
    id: bigint | null
    user_id: number | null
    group_id: number | null
  }

  export type Auth_user_groupsMaxAggregateOutputType = {
    id: bigint | null
    user_id: number | null
    group_id: number | null
  }

  export type Auth_user_groupsCountAggregateOutputType = {
    id: number
    user_id: number
    group_id: number
    _all: number
  }


  export type Auth_user_groupsAvgAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
  }

  export type Auth_user_groupsSumAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
  }

  export type Auth_user_groupsMinAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
  }

  export type Auth_user_groupsMaxAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
  }

  export type Auth_user_groupsCountAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
    _all?: true
  }

  export type Auth_user_groupsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which auth_user_groups to aggregate.
     */
    where?: auth_user_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_user_groups to fetch.
     */
    orderBy?: auth_user_groupsOrderByWithRelationInput | auth_user_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: auth_user_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_user_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_user_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned auth_user_groups
    **/
    _count?: true | Auth_user_groupsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Auth_user_groupsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Auth_user_groupsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Auth_user_groupsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Auth_user_groupsMaxAggregateInputType
  }

  export type GetAuth_user_groupsAggregateType<T extends Auth_user_groupsAggregateArgs> = {
        [P in keyof T & keyof AggregateAuth_user_groups]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuth_user_groups[P]>
      : GetScalarType<T[P], AggregateAuth_user_groups[P]>
  }




  export type auth_user_groupsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: auth_user_groupsWhereInput
    orderBy?: auth_user_groupsOrderByWithAggregationInput | auth_user_groupsOrderByWithAggregationInput[]
    by: Auth_user_groupsScalarFieldEnum[] | Auth_user_groupsScalarFieldEnum
    having?: auth_user_groupsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Auth_user_groupsCountAggregateInputType | true
    _avg?: Auth_user_groupsAvgAggregateInputType
    _sum?: Auth_user_groupsSumAggregateInputType
    _min?: Auth_user_groupsMinAggregateInputType
    _max?: Auth_user_groupsMaxAggregateInputType
  }

  export type Auth_user_groupsGroupByOutputType = {
    id: bigint
    user_id: number
    group_id: number
    _count: Auth_user_groupsCountAggregateOutputType | null
    _avg: Auth_user_groupsAvgAggregateOutputType | null
    _sum: Auth_user_groupsSumAggregateOutputType | null
    _min: Auth_user_groupsMinAggregateOutputType | null
    _max: Auth_user_groupsMaxAggregateOutputType | null
  }

  type GetAuth_user_groupsGroupByPayload<T extends auth_user_groupsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Auth_user_groupsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Auth_user_groupsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Auth_user_groupsGroupByOutputType[P]>
            : GetScalarType<T[P], Auth_user_groupsGroupByOutputType[P]>
        }
      >
    >


  export type auth_user_groupsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    group_id?: boolean
    auth_group?: boolean | auth_groupDefaultArgs<ExtArgs>
    auth_user?: boolean | auth_userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auth_user_groups"]>



  export type auth_user_groupsSelectScalar = {
    id?: boolean
    user_id?: boolean
    group_id?: boolean
  }

  export type auth_user_groupsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "group_id", ExtArgs["result"]["auth_user_groups"]>
  export type auth_user_groupsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auth_group?: boolean | auth_groupDefaultArgs<ExtArgs>
    auth_user?: boolean | auth_userDefaultArgs<ExtArgs>
  }

  export type $auth_user_groupsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "auth_user_groups"
    objects: {
      auth_group: Prisma.$auth_groupPayload<ExtArgs>
      auth_user: Prisma.$auth_userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: number
      group_id: number
    }, ExtArgs["result"]["auth_user_groups"]>
    composites: {}
  }

  type auth_user_groupsGetPayload<S extends boolean | null | undefined | auth_user_groupsDefaultArgs> = $Result.GetResult<Prisma.$auth_user_groupsPayload, S>

  type auth_user_groupsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<auth_user_groupsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Auth_user_groupsCountAggregateInputType | true
    }

  export interface auth_user_groupsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['auth_user_groups'], meta: { name: 'auth_user_groups' } }
    /**
     * Find zero or one Auth_user_groups that matches the filter.
     * @param {auth_user_groupsFindUniqueArgs} args - Arguments to find a Auth_user_groups
     * @example
     * // Get one Auth_user_groups
     * const auth_user_groups = await prisma.auth_user_groups.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends auth_user_groupsFindUniqueArgs>(args: SelectSubset<T, auth_user_groupsFindUniqueArgs<ExtArgs>>): Prisma__auth_user_groupsClient<$Result.GetResult<Prisma.$auth_user_groupsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Auth_user_groups that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {auth_user_groupsFindUniqueOrThrowArgs} args - Arguments to find a Auth_user_groups
     * @example
     * // Get one Auth_user_groups
     * const auth_user_groups = await prisma.auth_user_groups.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends auth_user_groupsFindUniqueOrThrowArgs>(args: SelectSubset<T, auth_user_groupsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__auth_user_groupsClient<$Result.GetResult<Prisma.$auth_user_groupsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auth_user_groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_user_groupsFindFirstArgs} args - Arguments to find a Auth_user_groups
     * @example
     * // Get one Auth_user_groups
     * const auth_user_groups = await prisma.auth_user_groups.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends auth_user_groupsFindFirstArgs>(args?: SelectSubset<T, auth_user_groupsFindFirstArgs<ExtArgs>>): Prisma__auth_user_groupsClient<$Result.GetResult<Prisma.$auth_user_groupsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auth_user_groups that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_user_groupsFindFirstOrThrowArgs} args - Arguments to find a Auth_user_groups
     * @example
     * // Get one Auth_user_groups
     * const auth_user_groups = await prisma.auth_user_groups.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends auth_user_groupsFindFirstOrThrowArgs>(args?: SelectSubset<T, auth_user_groupsFindFirstOrThrowArgs<ExtArgs>>): Prisma__auth_user_groupsClient<$Result.GetResult<Prisma.$auth_user_groupsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Auth_user_groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_user_groupsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Auth_user_groups
     * const auth_user_groups = await prisma.auth_user_groups.findMany()
     * 
     * // Get first 10 Auth_user_groups
     * const auth_user_groups = await prisma.auth_user_groups.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auth_user_groupsWithIdOnly = await prisma.auth_user_groups.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends auth_user_groupsFindManyArgs>(args?: SelectSubset<T, auth_user_groupsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_user_groupsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Auth_user_groups.
     * @param {auth_user_groupsCreateArgs} args - Arguments to create a Auth_user_groups.
     * @example
     * // Create one Auth_user_groups
     * const Auth_user_groups = await prisma.auth_user_groups.create({
     *   data: {
     *     // ... data to create a Auth_user_groups
     *   }
     * })
     * 
     */
    create<T extends auth_user_groupsCreateArgs>(args: SelectSubset<T, auth_user_groupsCreateArgs<ExtArgs>>): Prisma__auth_user_groupsClient<$Result.GetResult<Prisma.$auth_user_groupsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Auth_user_groups.
     * @param {auth_user_groupsCreateManyArgs} args - Arguments to create many Auth_user_groups.
     * @example
     * // Create many Auth_user_groups
     * const auth_user_groups = await prisma.auth_user_groups.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends auth_user_groupsCreateManyArgs>(args?: SelectSubset<T, auth_user_groupsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Auth_user_groups.
     * @param {auth_user_groupsDeleteArgs} args - Arguments to delete one Auth_user_groups.
     * @example
     * // Delete one Auth_user_groups
     * const Auth_user_groups = await prisma.auth_user_groups.delete({
     *   where: {
     *     // ... filter to delete one Auth_user_groups
     *   }
     * })
     * 
     */
    delete<T extends auth_user_groupsDeleteArgs>(args: SelectSubset<T, auth_user_groupsDeleteArgs<ExtArgs>>): Prisma__auth_user_groupsClient<$Result.GetResult<Prisma.$auth_user_groupsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Auth_user_groups.
     * @param {auth_user_groupsUpdateArgs} args - Arguments to update one Auth_user_groups.
     * @example
     * // Update one Auth_user_groups
     * const auth_user_groups = await prisma.auth_user_groups.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends auth_user_groupsUpdateArgs>(args: SelectSubset<T, auth_user_groupsUpdateArgs<ExtArgs>>): Prisma__auth_user_groupsClient<$Result.GetResult<Prisma.$auth_user_groupsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Auth_user_groups.
     * @param {auth_user_groupsDeleteManyArgs} args - Arguments to filter Auth_user_groups to delete.
     * @example
     * // Delete a few Auth_user_groups
     * const { count } = await prisma.auth_user_groups.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends auth_user_groupsDeleteManyArgs>(args?: SelectSubset<T, auth_user_groupsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Auth_user_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_user_groupsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Auth_user_groups
     * const auth_user_groups = await prisma.auth_user_groups.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends auth_user_groupsUpdateManyArgs>(args: SelectSubset<T, auth_user_groupsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Auth_user_groups.
     * @param {auth_user_groupsUpsertArgs} args - Arguments to update or create a Auth_user_groups.
     * @example
     * // Update or create a Auth_user_groups
     * const auth_user_groups = await prisma.auth_user_groups.upsert({
     *   create: {
     *     // ... data to create a Auth_user_groups
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Auth_user_groups we want to update
     *   }
     * })
     */
    upsert<T extends auth_user_groupsUpsertArgs>(args: SelectSubset<T, auth_user_groupsUpsertArgs<ExtArgs>>): Prisma__auth_user_groupsClient<$Result.GetResult<Prisma.$auth_user_groupsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Auth_user_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_user_groupsCountArgs} args - Arguments to filter Auth_user_groups to count.
     * @example
     * // Count the number of Auth_user_groups
     * const count = await prisma.auth_user_groups.count({
     *   where: {
     *     // ... the filter for the Auth_user_groups we want to count
     *   }
     * })
    **/
    count<T extends auth_user_groupsCountArgs>(
      args?: Subset<T, auth_user_groupsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Auth_user_groupsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Auth_user_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Auth_user_groupsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Auth_user_groupsAggregateArgs>(args: Subset<T, Auth_user_groupsAggregateArgs>): Prisma.PrismaPromise<GetAuth_user_groupsAggregateType<T>>

    /**
     * Group by Auth_user_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_user_groupsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends auth_user_groupsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: auth_user_groupsGroupByArgs['orderBy'] }
        : { orderBy?: auth_user_groupsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, auth_user_groupsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuth_user_groupsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the auth_user_groups model
   */
  readonly fields: auth_user_groupsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for auth_user_groups.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__auth_user_groupsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    auth_group<T extends auth_groupDefaultArgs<ExtArgs> = {}>(args?: Subset<T, auth_groupDefaultArgs<ExtArgs>>): Prisma__auth_groupClient<$Result.GetResult<Prisma.$auth_groupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    auth_user<T extends auth_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, auth_userDefaultArgs<ExtArgs>>): Prisma__auth_userClient<$Result.GetResult<Prisma.$auth_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the auth_user_groups model
   */
  interface auth_user_groupsFieldRefs {
    readonly id: FieldRef<"auth_user_groups", 'BigInt'>
    readonly user_id: FieldRef<"auth_user_groups", 'Int'>
    readonly group_id: FieldRef<"auth_user_groups", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * auth_user_groups findUnique
   */
  export type auth_user_groupsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_groups
     */
    select?: auth_user_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_groups
     */
    omit?: auth_user_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_groupsInclude<ExtArgs> | null
    /**
     * Filter, which auth_user_groups to fetch.
     */
    where: auth_user_groupsWhereUniqueInput
  }

  /**
   * auth_user_groups findUniqueOrThrow
   */
  export type auth_user_groupsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_groups
     */
    select?: auth_user_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_groups
     */
    omit?: auth_user_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_groupsInclude<ExtArgs> | null
    /**
     * Filter, which auth_user_groups to fetch.
     */
    where: auth_user_groupsWhereUniqueInput
  }

  /**
   * auth_user_groups findFirst
   */
  export type auth_user_groupsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_groups
     */
    select?: auth_user_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_groups
     */
    omit?: auth_user_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_groupsInclude<ExtArgs> | null
    /**
     * Filter, which auth_user_groups to fetch.
     */
    where?: auth_user_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_user_groups to fetch.
     */
    orderBy?: auth_user_groupsOrderByWithRelationInput | auth_user_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for auth_user_groups.
     */
    cursor?: auth_user_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_user_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_user_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of auth_user_groups.
     */
    distinct?: Auth_user_groupsScalarFieldEnum | Auth_user_groupsScalarFieldEnum[]
  }

  /**
   * auth_user_groups findFirstOrThrow
   */
  export type auth_user_groupsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_groups
     */
    select?: auth_user_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_groups
     */
    omit?: auth_user_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_groupsInclude<ExtArgs> | null
    /**
     * Filter, which auth_user_groups to fetch.
     */
    where?: auth_user_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_user_groups to fetch.
     */
    orderBy?: auth_user_groupsOrderByWithRelationInput | auth_user_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for auth_user_groups.
     */
    cursor?: auth_user_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_user_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_user_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of auth_user_groups.
     */
    distinct?: Auth_user_groupsScalarFieldEnum | Auth_user_groupsScalarFieldEnum[]
  }

  /**
   * auth_user_groups findMany
   */
  export type auth_user_groupsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_groups
     */
    select?: auth_user_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_groups
     */
    omit?: auth_user_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_groupsInclude<ExtArgs> | null
    /**
     * Filter, which auth_user_groups to fetch.
     */
    where?: auth_user_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_user_groups to fetch.
     */
    orderBy?: auth_user_groupsOrderByWithRelationInput | auth_user_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing auth_user_groups.
     */
    cursor?: auth_user_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_user_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_user_groups.
     */
    skip?: number
    distinct?: Auth_user_groupsScalarFieldEnum | Auth_user_groupsScalarFieldEnum[]
  }

  /**
   * auth_user_groups create
   */
  export type auth_user_groupsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_groups
     */
    select?: auth_user_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_groups
     */
    omit?: auth_user_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_groupsInclude<ExtArgs> | null
    /**
     * The data needed to create a auth_user_groups.
     */
    data: XOR<auth_user_groupsCreateInput, auth_user_groupsUncheckedCreateInput>
  }

  /**
   * auth_user_groups createMany
   */
  export type auth_user_groupsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many auth_user_groups.
     */
    data: auth_user_groupsCreateManyInput | auth_user_groupsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * auth_user_groups update
   */
  export type auth_user_groupsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_groups
     */
    select?: auth_user_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_groups
     */
    omit?: auth_user_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_groupsInclude<ExtArgs> | null
    /**
     * The data needed to update a auth_user_groups.
     */
    data: XOR<auth_user_groupsUpdateInput, auth_user_groupsUncheckedUpdateInput>
    /**
     * Choose, which auth_user_groups to update.
     */
    where: auth_user_groupsWhereUniqueInput
  }

  /**
   * auth_user_groups updateMany
   */
  export type auth_user_groupsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update auth_user_groups.
     */
    data: XOR<auth_user_groupsUpdateManyMutationInput, auth_user_groupsUncheckedUpdateManyInput>
    /**
     * Filter which auth_user_groups to update
     */
    where?: auth_user_groupsWhereInput
    /**
     * Limit how many auth_user_groups to update.
     */
    limit?: number
  }

  /**
   * auth_user_groups upsert
   */
  export type auth_user_groupsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_groups
     */
    select?: auth_user_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_groups
     */
    omit?: auth_user_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_groupsInclude<ExtArgs> | null
    /**
     * The filter to search for the auth_user_groups to update in case it exists.
     */
    where: auth_user_groupsWhereUniqueInput
    /**
     * In case the auth_user_groups found by the `where` argument doesn't exist, create a new auth_user_groups with this data.
     */
    create: XOR<auth_user_groupsCreateInput, auth_user_groupsUncheckedCreateInput>
    /**
     * In case the auth_user_groups was found with the provided `where` argument, update it with this data.
     */
    update: XOR<auth_user_groupsUpdateInput, auth_user_groupsUncheckedUpdateInput>
  }

  /**
   * auth_user_groups delete
   */
  export type auth_user_groupsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_groups
     */
    select?: auth_user_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_groups
     */
    omit?: auth_user_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_groupsInclude<ExtArgs> | null
    /**
     * Filter which auth_user_groups to delete.
     */
    where: auth_user_groupsWhereUniqueInput
  }

  /**
   * auth_user_groups deleteMany
   */
  export type auth_user_groupsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which auth_user_groups to delete
     */
    where?: auth_user_groupsWhereInput
    /**
     * Limit how many auth_user_groups to delete.
     */
    limit?: number
  }

  /**
   * auth_user_groups without action
   */
  export type auth_user_groupsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_groups
     */
    select?: auth_user_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_groups
     */
    omit?: auth_user_groupsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_groupsInclude<ExtArgs> | null
  }


  /**
   * Model auth_user_user_permissions
   */

  export type AggregateAuth_user_user_permissions = {
    _count: Auth_user_user_permissionsCountAggregateOutputType | null
    _avg: Auth_user_user_permissionsAvgAggregateOutputType | null
    _sum: Auth_user_user_permissionsSumAggregateOutputType | null
    _min: Auth_user_user_permissionsMinAggregateOutputType | null
    _max: Auth_user_user_permissionsMaxAggregateOutputType | null
  }

  export type Auth_user_user_permissionsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    permission_id: number | null
  }

  export type Auth_user_user_permissionsSumAggregateOutputType = {
    id: bigint | null
    user_id: number | null
    permission_id: number | null
  }

  export type Auth_user_user_permissionsMinAggregateOutputType = {
    id: bigint | null
    user_id: number | null
    permission_id: number | null
  }

  export type Auth_user_user_permissionsMaxAggregateOutputType = {
    id: bigint | null
    user_id: number | null
    permission_id: number | null
  }

  export type Auth_user_user_permissionsCountAggregateOutputType = {
    id: number
    user_id: number
    permission_id: number
    _all: number
  }


  export type Auth_user_user_permissionsAvgAggregateInputType = {
    id?: true
    user_id?: true
    permission_id?: true
  }

  export type Auth_user_user_permissionsSumAggregateInputType = {
    id?: true
    user_id?: true
    permission_id?: true
  }

  export type Auth_user_user_permissionsMinAggregateInputType = {
    id?: true
    user_id?: true
    permission_id?: true
  }

  export type Auth_user_user_permissionsMaxAggregateInputType = {
    id?: true
    user_id?: true
    permission_id?: true
  }

  export type Auth_user_user_permissionsCountAggregateInputType = {
    id?: true
    user_id?: true
    permission_id?: true
    _all?: true
  }

  export type Auth_user_user_permissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which auth_user_user_permissions to aggregate.
     */
    where?: auth_user_user_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_user_user_permissions to fetch.
     */
    orderBy?: auth_user_user_permissionsOrderByWithRelationInput | auth_user_user_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: auth_user_user_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_user_user_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_user_user_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned auth_user_user_permissions
    **/
    _count?: true | Auth_user_user_permissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Auth_user_user_permissionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Auth_user_user_permissionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Auth_user_user_permissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Auth_user_user_permissionsMaxAggregateInputType
  }

  export type GetAuth_user_user_permissionsAggregateType<T extends Auth_user_user_permissionsAggregateArgs> = {
        [P in keyof T & keyof AggregateAuth_user_user_permissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuth_user_user_permissions[P]>
      : GetScalarType<T[P], AggregateAuth_user_user_permissions[P]>
  }




  export type auth_user_user_permissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: auth_user_user_permissionsWhereInput
    orderBy?: auth_user_user_permissionsOrderByWithAggregationInput | auth_user_user_permissionsOrderByWithAggregationInput[]
    by: Auth_user_user_permissionsScalarFieldEnum[] | Auth_user_user_permissionsScalarFieldEnum
    having?: auth_user_user_permissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Auth_user_user_permissionsCountAggregateInputType | true
    _avg?: Auth_user_user_permissionsAvgAggregateInputType
    _sum?: Auth_user_user_permissionsSumAggregateInputType
    _min?: Auth_user_user_permissionsMinAggregateInputType
    _max?: Auth_user_user_permissionsMaxAggregateInputType
  }

  export type Auth_user_user_permissionsGroupByOutputType = {
    id: bigint
    user_id: number
    permission_id: number
    _count: Auth_user_user_permissionsCountAggregateOutputType | null
    _avg: Auth_user_user_permissionsAvgAggregateOutputType | null
    _sum: Auth_user_user_permissionsSumAggregateOutputType | null
    _min: Auth_user_user_permissionsMinAggregateOutputType | null
    _max: Auth_user_user_permissionsMaxAggregateOutputType | null
  }

  type GetAuth_user_user_permissionsGroupByPayload<T extends auth_user_user_permissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Auth_user_user_permissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Auth_user_user_permissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Auth_user_user_permissionsGroupByOutputType[P]>
            : GetScalarType<T[P], Auth_user_user_permissionsGroupByOutputType[P]>
        }
      >
    >


  export type auth_user_user_permissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    permission_id?: boolean
    auth_permission?: boolean | auth_permissionDefaultArgs<ExtArgs>
    auth_user?: boolean | auth_userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["auth_user_user_permissions"]>



  export type auth_user_user_permissionsSelectScalar = {
    id?: boolean
    user_id?: boolean
    permission_id?: boolean
  }

  export type auth_user_user_permissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "permission_id", ExtArgs["result"]["auth_user_user_permissions"]>
  export type auth_user_user_permissionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auth_permission?: boolean | auth_permissionDefaultArgs<ExtArgs>
    auth_user?: boolean | auth_userDefaultArgs<ExtArgs>
  }

  export type $auth_user_user_permissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "auth_user_user_permissions"
    objects: {
      auth_permission: Prisma.$auth_permissionPayload<ExtArgs>
      auth_user: Prisma.$auth_userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: number
      permission_id: number
    }, ExtArgs["result"]["auth_user_user_permissions"]>
    composites: {}
  }

  type auth_user_user_permissionsGetPayload<S extends boolean | null | undefined | auth_user_user_permissionsDefaultArgs> = $Result.GetResult<Prisma.$auth_user_user_permissionsPayload, S>

  type auth_user_user_permissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<auth_user_user_permissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Auth_user_user_permissionsCountAggregateInputType | true
    }

  export interface auth_user_user_permissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['auth_user_user_permissions'], meta: { name: 'auth_user_user_permissions' } }
    /**
     * Find zero or one Auth_user_user_permissions that matches the filter.
     * @param {auth_user_user_permissionsFindUniqueArgs} args - Arguments to find a Auth_user_user_permissions
     * @example
     * // Get one Auth_user_user_permissions
     * const auth_user_user_permissions = await prisma.auth_user_user_permissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends auth_user_user_permissionsFindUniqueArgs>(args: SelectSubset<T, auth_user_user_permissionsFindUniqueArgs<ExtArgs>>): Prisma__auth_user_user_permissionsClient<$Result.GetResult<Prisma.$auth_user_user_permissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Auth_user_user_permissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {auth_user_user_permissionsFindUniqueOrThrowArgs} args - Arguments to find a Auth_user_user_permissions
     * @example
     * // Get one Auth_user_user_permissions
     * const auth_user_user_permissions = await prisma.auth_user_user_permissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends auth_user_user_permissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, auth_user_user_permissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__auth_user_user_permissionsClient<$Result.GetResult<Prisma.$auth_user_user_permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auth_user_user_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_user_user_permissionsFindFirstArgs} args - Arguments to find a Auth_user_user_permissions
     * @example
     * // Get one Auth_user_user_permissions
     * const auth_user_user_permissions = await prisma.auth_user_user_permissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends auth_user_user_permissionsFindFirstArgs>(args?: SelectSubset<T, auth_user_user_permissionsFindFirstArgs<ExtArgs>>): Prisma__auth_user_user_permissionsClient<$Result.GetResult<Prisma.$auth_user_user_permissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Auth_user_user_permissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_user_user_permissionsFindFirstOrThrowArgs} args - Arguments to find a Auth_user_user_permissions
     * @example
     * // Get one Auth_user_user_permissions
     * const auth_user_user_permissions = await prisma.auth_user_user_permissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends auth_user_user_permissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, auth_user_user_permissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__auth_user_user_permissionsClient<$Result.GetResult<Prisma.$auth_user_user_permissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Auth_user_user_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_user_user_permissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Auth_user_user_permissions
     * const auth_user_user_permissions = await prisma.auth_user_user_permissions.findMany()
     * 
     * // Get first 10 Auth_user_user_permissions
     * const auth_user_user_permissions = await prisma.auth_user_user_permissions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auth_user_user_permissionsWithIdOnly = await prisma.auth_user_user_permissions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends auth_user_user_permissionsFindManyArgs>(args?: SelectSubset<T, auth_user_user_permissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_user_user_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Auth_user_user_permissions.
     * @param {auth_user_user_permissionsCreateArgs} args - Arguments to create a Auth_user_user_permissions.
     * @example
     * // Create one Auth_user_user_permissions
     * const Auth_user_user_permissions = await prisma.auth_user_user_permissions.create({
     *   data: {
     *     // ... data to create a Auth_user_user_permissions
     *   }
     * })
     * 
     */
    create<T extends auth_user_user_permissionsCreateArgs>(args: SelectSubset<T, auth_user_user_permissionsCreateArgs<ExtArgs>>): Prisma__auth_user_user_permissionsClient<$Result.GetResult<Prisma.$auth_user_user_permissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Auth_user_user_permissions.
     * @param {auth_user_user_permissionsCreateManyArgs} args - Arguments to create many Auth_user_user_permissions.
     * @example
     * // Create many Auth_user_user_permissions
     * const auth_user_user_permissions = await prisma.auth_user_user_permissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends auth_user_user_permissionsCreateManyArgs>(args?: SelectSubset<T, auth_user_user_permissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Auth_user_user_permissions.
     * @param {auth_user_user_permissionsDeleteArgs} args - Arguments to delete one Auth_user_user_permissions.
     * @example
     * // Delete one Auth_user_user_permissions
     * const Auth_user_user_permissions = await prisma.auth_user_user_permissions.delete({
     *   where: {
     *     // ... filter to delete one Auth_user_user_permissions
     *   }
     * })
     * 
     */
    delete<T extends auth_user_user_permissionsDeleteArgs>(args: SelectSubset<T, auth_user_user_permissionsDeleteArgs<ExtArgs>>): Prisma__auth_user_user_permissionsClient<$Result.GetResult<Prisma.$auth_user_user_permissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Auth_user_user_permissions.
     * @param {auth_user_user_permissionsUpdateArgs} args - Arguments to update one Auth_user_user_permissions.
     * @example
     * // Update one Auth_user_user_permissions
     * const auth_user_user_permissions = await prisma.auth_user_user_permissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends auth_user_user_permissionsUpdateArgs>(args: SelectSubset<T, auth_user_user_permissionsUpdateArgs<ExtArgs>>): Prisma__auth_user_user_permissionsClient<$Result.GetResult<Prisma.$auth_user_user_permissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Auth_user_user_permissions.
     * @param {auth_user_user_permissionsDeleteManyArgs} args - Arguments to filter Auth_user_user_permissions to delete.
     * @example
     * // Delete a few Auth_user_user_permissions
     * const { count } = await prisma.auth_user_user_permissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends auth_user_user_permissionsDeleteManyArgs>(args?: SelectSubset<T, auth_user_user_permissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Auth_user_user_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_user_user_permissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Auth_user_user_permissions
     * const auth_user_user_permissions = await prisma.auth_user_user_permissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends auth_user_user_permissionsUpdateManyArgs>(args: SelectSubset<T, auth_user_user_permissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Auth_user_user_permissions.
     * @param {auth_user_user_permissionsUpsertArgs} args - Arguments to update or create a Auth_user_user_permissions.
     * @example
     * // Update or create a Auth_user_user_permissions
     * const auth_user_user_permissions = await prisma.auth_user_user_permissions.upsert({
     *   create: {
     *     // ... data to create a Auth_user_user_permissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Auth_user_user_permissions we want to update
     *   }
     * })
     */
    upsert<T extends auth_user_user_permissionsUpsertArgs>(args: SelectSubset<T, auth_user_user_permissionsUpsertArgs<ExtArgs>>): Prisma__auth_user_user_permissionsClient<$Result.GetResult<Prisma.$auth_user_user_permissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Auth_user_user_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_user_user_permissionsCountArgs} args - Arguments to filter Auth_user_user_permissions to count.
     * @example
     * // Count the number of Auth_user_user_permissions
     * const count = await prisma.auth_user_user_permissions.count({
     *   where: {
     *     // ... the filter for the Auth_user_user_permissions we want to count
     *   }
     * })
    **/
    count<T extends auth_user_user_permissionsCountArgs>(
      args?: Subset<T, auth_user_user_permissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Auth_user_user_permissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Auth_user_user_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Auth_user_user_permissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Auth_user_user_permissionsAggregateArgs>(args: Subset<T, Auth_user_user_permissionsAggregateArgs>): Prisma.PrismaPromise<GetAuth_user_user_permissionsAggregateType<T>>

    /**
     * Group by Auth_user_user_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {auth_user_user_permissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends auth_user_user_permissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: auth_user_user_permissionsGroupByArgs['orderBy'] }
        : { orderBy?: auth_user_user_permissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, auth_user_user_permissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuth_user_user_permissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the auth_user_user_permissions model
   */
  readonly fields: auth_user_user_permissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for auth_user_user_permissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__auth_user_user_permissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    auth_permission<T extends auth_permissionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, auth_permissionDefaultArgs<ExtArgs>>): Prisma__auth_permissionClient<$Result.GetResult<Prisma.$auth_permissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    auth_user<T extends auth_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, auth_userDefaultArgs<ExtArgs>>): Prisma__auth_userClient<$Result.GetResult<Prisma.$auth_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the auth_user_user_permissions model
   */
  interface auth_user_user_permissionsFieldRefs {
    readonly id: FieldRef<"auth_user_user_permissions", 'BigInt'>
    readonly user_id: FieldRef<"auth_user_user_permissions", 'Int'>
    readonly permission_id: FieldRef<"auth_user_user_permissions", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * auth_user_user_permissions findUnique
   */
  export type auth_user_user_permissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_user_permissions
     */
    select?: auth_user_user_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_user_permissions
     */
    omit?: auth_user_user_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_user_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which auth_user_user_permissions to fetch.
     */
    where: auth_user_user_permissionsWhereUniqueInput
  }

  /**
   * auth_user_user_permissions findUniqueOrThrow
   */
  export type auth_user_user_permissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_user_permissions
     */
    select?: auth_user_user_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_user_permissions
     */
    omit?: auth_user_user_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_user_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which auth_user_user_permissions to fetch.
     */
    where: auth_user_user_permissionsWhereUniqueInput
  }

  /**
   * auth_user_user_permissions findFirst
   */
  export type auth_user_user_permissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_user_permissions
     */
    select?: auth_user_user_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_user_permissions
     */
    omit?: auth_user_user_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_user_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which auth_user_user_permissions to fetch.
     */
    where?: auth_user_user_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_user_user_permissions to fetch.
     */
    orderBy?: auth_user_user_permissionsOrderByWithRelationInput | auth_user_user_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for auth_user_user_permissions.
     */
    cursor?: auth_user_user_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_user_user_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_user_user_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of auth_user_user_permissions.
     */
    distinct?: Auth_user_user_permissionsScalarFieldEnum | Auth_user_user_permissionsScalarFieldEnum[]
  }

  /**
   * auth_user_user_permissions findFirstOrThrow
   */
  export type auth_user_user_permissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_user_permissions
     */
    select?: auth_user_user_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_user_permissions
     */
    omit?: auth_user_user_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_user_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which auth_user_user_permissions to fetch.
     */
    where?: auth_user_user_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_user_user_permissions to fetch.
     */
    orderBy?: auth_user_user_permissionsOrderByWithRelationInput | auth_user_user_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for auth_user_user_permissions.
     */
    cursor?: auth_user_user_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_user_user_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_user_user_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of auth_user_user_permissions.
     */
    distinct?: Auth_user_user_permissionsScalarFieldEnum | Auth_user_user_permissionsScalarFieldEnum[]
  }

  /**
   * auth_user_user_permissions findMany
   */
  export type auth_user_user_permissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_user_permissions
     */
    select?: auth_user_user_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_user_permissions
     */
    omit?: auth_user_user_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_user_permissionsInclude<ExtArgs> | null
    /**
     * Filter, which auth_user_user_permissions to fetch.
     */
    where?: auth_user_user_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of auth_user_user_permissions to fetch.
     */
    orderBy?: auth_user_user_permissionsOrderByWithRelationInput | auth_user_user_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing auth_user_user_permissions.
     */
    cursor?: auth_user_user_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` auth_user_user_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` auth_user_user_permissions.
     */
    skip?: number
    distinct?: Auth_user_user_permissionsScalarFieldEnum | Auth_user_user_permissionsScalarFieldEnum[]
  }

  /**
   * auth_user_user_permissions create
   */
  export type auth_user_user_permissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_user_permissions
     */
    select?: auth_user_user_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_user_permissions
     */
    omit?: auth_user_user_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_user_permissionsInclude<ExtArgs> | null
    /**
     * The data needed to create a auth_user_user_permissions.
     */
    data: XOR<auth_user_user_permissionsCreateInput, auth_user_user_permissionsUncheckedCreateInput>
  }

  /**
   * auth_user_user_permissions createMany
   */
  export type auth_user_user_permissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many auth_user_user_permissions.
     */
    data: auth_user_user_permissionsCreateManyInput | auth_user_user_permissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * auth_user_user_permissions update
   */
  export type auth_user_user_permissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_user_permissions
     */
    select?: auth_user_user_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_user_permissions
     */
    omit?: auth_user_user_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_user_permissionsInclude<ExtArgs> | null
    /**
     * The data needed to update a auth_user_user_permissions.
     */
    data: XOR<auth_user_user_permissionsUpdateInput, auth_user_user_permissionsUncheckedUpdateInput>
    /**
     * Choose, which auth_user_user_permissions to update.
     */
    where: auth_user_user_permissionsWhereUniqueInput
  }

  /**
   * auth_user_user_permissions updateMany
   */
  export type auth_user_user_permissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update auth_user_user_permissions.
     */
    data: XOR<auth_user_user_permissionsUpdateManyMutationInput, auth_user_user_permissionsUncheckedUpdateManyInput>
    /**
     * Filter which auth_user_user_permissions to update
     */
    where?: auth_user_user_permissionsWhereInput
    /**
     * Limit how many auth_user_user_permissions to update.
     */
    limit?: number
  }

  /**
   * auth_user_user_permissions upsert
   */
  export type auth_user_user_permissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_user_permissions
     */
    select?: auth_user_user_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_user_permissions
     */
    omit?: auth_user_user_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_user_permissionsInclude<ExtArgs> | null
    /**
     * The filter to search for the auth_user_user_permissions to update in case it exists.
     */
    where: auth_user_user_permissionsWhereUniqueInput
    /**
     * In case the auth_user_user_permissions found by the `where` argument doesn't exist, create a new auth_user_user_permissions with this data.
     */
    create: XOR<auth_user_user_permissionsCreateInput, auth_user_user_permissionsUncheckedCreateInput>
    /**
     * In case the auth_user_user_permissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<auth_user_user_permissionsUpdateInput, auth_user_user_permissionsUncheckedUpdateInput>
  }

  /**
   * auth_user_user_permissions delete
   */
  export type auth_user_user_permissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_user_permissions
     */
    select?: auth_user_user_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_user_permissions
     */
    omit?: auth_user_user_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_user_permissionsInclude<ExtArgs> | null
    /**
     * Filter which auth_user_user_permissions to delete.
     */
    where: auth_user_user_permissionsWhereUniqueInput
  }

  /**
   * auth_user_user_permissions deleteMany
   */
  export type auth_user_user_permissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which auth_user_user_permissions to delete
     */
    where?: auth_user_user_permissionsWhereInput
    /**
     * Limit how many auth_user_user_permissions to delete.
     */
    limit?: number
  }

  /**
   * auth_user_user_permissions without action
   */
  export type auth_user_user_permissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_user_user_permissions
     */
    select?: auth_user_user_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_user_user_permissions
     */
    omit?: auth_user_user_permissionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_user_user_permissionsInclude<ExtArgs> | null
  }


  /**
   * Model django_admin_log
   */

  export type AggregateDjango_admin_log = {
    _count: Django_admin_logCountAggregateOutputType | null
    _avg: Django_admin_logAvgAggregateOutputType | null
    _sum: Django_admin_logSumAggregateOutputType | null
    _min: Django_admin_logMinAggregateOutputType | null
    _max: Django_admin_logMaxAggregateOutputType | null
  }

  export type Django_admin_logAvgAggregateOutputType = {
    id: number | null
    action_flag: number | null
    content_type_id: number | null
    user_id: number | null
  }

  export type Django_admin_logSumAggregateOutputType = {
    id: number | null
    action_flag: number | null
    content_type_id: number | null
    user_id: number | null
  }

  export type Django_admin_logMinAggregateOutputType = {
    id: number | null
    action_time: Date | null
    object_id: string | null
    object_repr: string | null
    action_flag: number | null
    change_message: string | null
    content_type_id: number | null
    user_id: number | null
  }

  export type Django_admin_logMaxAggregateOutputType = {
    id: number | null
    action_time: Date | null
    object_id: string | null
    object_repr: string | null
    action_flag: number | null
    change_message: string | null
    content_type_id: number | null
    user_id: number | null
  }

  export type Django_admin_logCountAggregateOutputType = {
    id: number
    action_time: number
    object_id: number
    object_repr: number
    action_flag: number
    change_message: number
    content_type_id: number
    user_id: number
    _all: number
  }


  export type Django_admin_logAvgAggregateInputType = {
    id?: true
    action_flag?: true
    content_type_id?: true
    user_id?: true
  }

  export type Django_admin_logSumAggregateInputType = {
    id?: true
    action_flag?: true
    content_type_id?: true
    user_id?: true
  }

  export type Django_admin_logMinAggregateInputType = {
    id?: true
    action_time?: true
    object_id?: true
    object_repr?: true
    action_flag?: true
    change_message?: true
    content_type_id?: true
    user_id?: true
  }

  export type Django_admin_logMaxAggregateInputType = {
    id?: true
    action_time?: true
    object_id?: true
    object_repr?: true
    action_flag?: true
    change_message?: true
    content_type_id?: true
    user_id?: true
  }

  export type Django_admin_logCountAggregateInputType = {
    id?: true
    action_time?: true
    object_id?: true
    object_repr?: true
    action_flag?: true
    change_message?: true
    content_type_id?: true
    user_id?: true
    _all?: true
  }

  export type Django_admin_logAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which django_admin_log to aggregate.
     */
    where?: django_admin_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_admin_logs to fetch.
     */
    orderBy?: django_admin_logOrderByWithRelationInput | django_admin_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: django_admin_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_admin_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_admin_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned django_admin_logs
    **/
    _count?: true | Django_admin_logCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Django_admin_logAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Django_admin_logSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Django_admin_logMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Django_admin_logMaxAggregateInputType
  }

  export type GetDjango_admin_logAggregateType<T extends Django_admin_logAggregateArgs> = {
        [P in keyof T & keyof AggregateDjango_admin_log]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDjango_admin_log[P]>
      : GetScalarType<T[P], AggregateDjango_admin_log[P]>
  }




  export type django_admin_logGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: django_admin_logWhereInput
    orderBy?: django_admin_logOrderByWithAggregationInput | django_admin_logOrderByWithAggregationInput[]
    by: Django_admin_logScalarFieldEnum[] | Django_admin_logScalarFieldEnum
    having?: django_admin_logScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Django_admin_logCountAggregateInputType | true
    _avg?: Django_admin_logAvgAggregateInputType
    _sum?: Django_admin_logSumAggregateInputType
    _min?: Django_admin_logMinAggregateInputType
    _max?: Django_admin_logMaxAggregateInputType
  }

  export type Django_admin_logGroupByOutputType = {
    id: number
    action_time: Date
    object_id: string | null
    object_repr: string
    action_flag: number
    change_message: string
    content_type_id: number | null
    user_id: number
    _count: Django_admin_logCountAggregateOutputType | null
    _avg: Django_admin_logAvgAggregateOutputType | null
    _sum: Django_admin_logSumAggregateOutputType | null
    _min: Django_admin_logMinAggregateOutputType | null
    _max: Django_admin_logMaxAggregateOutputType | null
  }

  type GetDjango_admin_logGroupByPayload<T extends django_admin_logGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Django_admin_logGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Django_admin_logGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Django_admin_logGroupByOutputType[P]>
            : GetScalarType<T[P], Django_admin_logGroupByOutputType[P]>
        }
      >
    >


  export type django_admin_logSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    action_time?: boolean
    object_id?: boolean
    object_repr?: boolean
    action_flag?: boolean
    change_message?: boolean
    content_type_id?: boolean
    user_id?: boolean
    django_content_type?: boolean | django_admin_log$django_content_typeArgs<ExtArgs>
    auth_user?: boolean | auth_userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["django_admin_log"]>



  export type django_admin_logSelectScalar = {
    id?: boolean
    action_time?: boolean
    object_id?: boolean
    object_repr?: boolean
    action_flag?: boolean
    change_message?: boolean
    content_type_id?: boolean
    user_id?: boolean
  }

  export type django_admin_logOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "action_time" | "object_id" | "object_repr" | "action_flag" | "change_message" | "content_type_id" | "user_id", ExtArgs["result"]["django_admin_log"]>
  export type django_admin_logInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    django_content_type?: boolean | django_admin_log$django_content_typeArgs<ExtArgs>
    auth_user?: boolean | auth_userDefaultArgs<ExtArgs>
  }

  export type $django_admin_logPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "django_admin_log"
    objects: {
      django_content_type: Prisma.$django_content_typePayload<ExtArgs> | null
      auth_user: Prisma.$auth_userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      action_time: Date
      object_id: string | null
      object_repr: string
      action_flag: number
      change_message: string
      content_type_id: number | null
      user_id: number
    }, ExtArgs["result"]["django_admin_log"]>
    composites: {}
  }

  type django_admin_logGetPayload<S extends boolean | null | undefined | django_admin_logDefaultArgs> = $Result.GetResult<Prisma.$django_admin_logPayload, S>

  type django_admin_logCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<django_admin_logFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Django_admin_logCountAggregateInputType | true
    }

  export interface django_admin_logDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['django_admin_log'], meta: { name: 'django_admin_log' } }
    /**
     * Find zero or one Django_admin_log that matches the filter.
     * @param {django_admin_logFindUniqueArgs} args - Arguments to find a Django_admin_log
     * @example
     * // Get one Django_admin_log
     * const django_admin_log = await prisma.django_admin_log.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends django_admin_logFindUniqueArgs>(args: SelectSubset<T, django_admin_logFindUniqueArgs<ExtArgs>>): Prisma__django_admin_logClient<$Result.GetResult<Prisma.$django_admin_logPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Django_admin_log that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {django_admin_logFindUniqueOrThrowArgs} args - Arguments to find a Django_admin_log
     * @example
     * // Get one Django_admin_log
     * const django_admin_log = await prisma.django_admin_log.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends django_admin_logFindUniqueOrThrowArgs>(args: SelectSubset<T, django_admin_logFindUniqueOrThrowArgs<ExtArgs>>): Prisma__django_admin_logClient<$Result.GetResult<Prisma.$django_admin_logPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Django_admin_log that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_admin_logFindFirstArgs} args - Arguments to find a Django_admin_log
     * @example
     * // Get one Django_admin_log
     * const django_admin_log = await prisma.django_admin_log.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends django_admin_logFindFirstArgs>(args?: SelectSubset<T, django_admin_logFindFirstArgs<ExtArgs>>): Prisma__django_admin_logClient<$Result.GetResult<Prisma.$django_admin_logPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Django_admin_log that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_admin_logFindFirstOrThrowArgs} args - Arguments to find a Django_admin_log
     * @example
     * // Get one Django_admin_log
     * const django_admin_log = await prisma.django_admin_log.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends django_admin_logFindFirstOrThrowArgs>(args?: SelectSubset<T, django_admin_logFindFirstOrThrowArgs<ExtArgs>>): Prisma__django_admin_logClient<$Result.GetResult<Prisma.$django_admin_logPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Django_admin_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_admin_logFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Django_admin_logs
     * const django_admin_logs = await prisma.django_admin_log.findMany()
     * 
     * // Get first 10 Django_admin_logs
     * const django_admin_logs = await prisma.django_admin_log.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const django_admin_logWithIdOnly = await prisma.django_admin_log.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends django_admin_logFindManyArgs>(args?: SelectSubset<T, django_admin_logFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$django_admin_logPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Django_admin_log.
     * @param {django_admin_logCreateArgs} args - Arguments to create a Django_admin_log.
     * @example
     * // Create one Django_admin_log
     * const Django_admin_log = await prisma.django_admin_log.create({
     *   data: {
     *     // ... data to create a Django_admin_log
     *   }
     * })
     * 
     */
    create<T extends django_admin_logCreateArgs>(args: SelectSubset<T, django_admin_logCreateArgs<ExtArgs>>): Prisma__django_admin_logClient<$Result.GetResult<Prisma.$django_admin_logPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Django_admin_logs.
     * @param {django_admin_logCreateManyArgs} args - Arguments to create many Django_admin_logs.
     * @example
     * // Create many Django_admin_logs
     * const django_admin_log = await prisma.django_admin_log.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends django_admin_logCreateManyArgs>(args?: SelectSubset<T, django_admin_logCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Django_admin_log.
     * @param {django_admin_logDeleteArgs} args - Arguments to delete one Django_admin_log.
     * @example
     * // Delete one Django_admin_log
     * const Django_admin_log = await prisma.django_admin_log.delete({
     *   where: {
     *     // ... filter to delete one Django_admin_log
     *   }
     * })
     * 
     */
    delete<T extends django_admin_logDeleteArgs>(args: SelectSubset<T, django_admin_logDeleteArgs<ExtArgs>>): Prisma__django_admin_logClient<$Result.GetResult<Prisma.$django_admin_logPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Django_admin_log.
     * @param {django_admin_logUpdateArgs} args - Arguments to update one Django_admin_log.
     * @example
     * // Update one Django_admin_log
     * const django_admin_log = await prisma.django_admin_log.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends django_admin_logUpdateArgs>(args: SelectSubset<T, django_admin_logUpdateArgs<ExtArgs>>): Prisma__django_admin_logClient<$Result.GetResult<Prisma.$django_admin_logPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Django_admin_logs.
     * @param {django_admin_logDeleteManyArgs} args - Arguments to filter Django_admin_logs to delete.
     * @example
     * // Delete a few Django_admin_logs
     * const { count } = await prisma.django_admin_log.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends django_admin_logDeleteManyArgs>(args?: SelectSubset<T, django_admin_logDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Django_admin_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_admin_logUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Django_admin_logs
     * const django_admin_log = await prisma.django_admin_log.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends django_admin_logUpdateManyArgs>(args: SelectSubset<T, django_admin_logUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Django_admin_log.
     * @param {django_admin_logUpsertArgs} args - Arguments to update or create a Django_admin_log.
     * @example
     * // Update or create a Django_admin_log
     * const django_admin_log = await prisma.django_admin_log.upsert({
     *   create: {
     *     // ... data to create a Django_admin_log
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Django_admin_log we want to update
     *   }
     * })
     */
    upsert<T extends django_admin_logUpsertArgs>(args: SelectSubset<T, django_admin_logUpsertArgs<ExtArgs>>): Prisma__django_admin_logClient<$Result.GetResult<Prisma.$django_admin_logPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Django_admin_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_admin_logCountArgs} args - Arguments to filter Django_admin_logs to count.
     * @example
     * // Count the number of Django_admin_logs
     * const count = await prisma.django_admin_log.count({
     *   where: {
     *     // ... the filter for the Django_admin_logs we want to count
     *   }
     * })
    **/
    count<T extends django_admin_logCountArgs>(
      args?: Subset<T, django_admin_logCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Django_admin_logCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Django_admin_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Django_admin_logAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Django_admin_logAggregateArgs>(args: Subset<T, Django_admin_logAggregateArgs>): Prisma.PrismaPromise<GetDjango_admin_logAggregateType<T>>

    /**
     * Group by Django_admin_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_admin_logGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends django_admin_logGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: django_admin_logGroupByArgs['orderBy'] }
        : { orderBy?: django_admin_logGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, django_admin_logGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDjango_admin_logGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the django_admin_log model
   */
  readonly fields: django_admin_logFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for django_admin_log.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__django_admin_logClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    django_content_type<T extends django_admin_log$django_content_typeArgs<ExtArgs> = {}>(args?: Subset<T, django_admin_log$django_content_typeArgs<ExtArgs>>): Prisma__django_content_typeClient<$Result.GetResult<Prisma.$django_content_typePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    auth_user<T extends auth_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, auth_userDefaultArgs<ExtArgs>>): Prisma__auth_userClient<$Result.GetResult<Prisma.$auth_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the django_admin_log model
   */
  interface django_admin_logFieldRefs {
    readonly id: FieldRef<"django_admin_log", 'Int'>
    readonly action_time: FieldRef<"django_admin_log", 'DateTime'>
    readonly object_id: FieldRef<"django_admin_log", 'String'>
    readonly object_repr: FieldRef<"django_admin_log", 'String'>
    readonly action_flag: FieldRef<"django_admin_log", 'Int'>
    readonly change_message: FieldRef<"django_admin_log", 'String'>
    readonly content_type_id: FieldRef<"django_admin_log", 'Int'>
    readonly user_id: FieldRef<"django_admin_log", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * django_admin_log findUnique
   */
  export type django_admin_logFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_admin_log
     */
    select?: django_admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_admin_log
     */
    omit?: django_admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_admin_logInclude<ExtArgs> | null
    /**
     * Filter, which django_admin_log to fetch.
     */
    where: django_admin_logWhereUniqueInput
  }

  /**
   * django_admin_log findUniqueOrThrow
   */
  export type django_admin_logFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_admin_log
     */
    select?: django_admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_admin_log
     */
    omit?: django_admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_admin_logInclude<ExtArgs> | null
    /**
     * Filter, which django_admin_log to fetch.
     */
    where: django_admin_logWhereUniqueInput
  }

  /**
   * django_admin_log findFirst
   */
  export type django_admin_logFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_admin_log
     */
    select?: django_admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_admin_log
     */
    omit?: django_admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_admin_logInclude<ExtArgs> | null
    /**
     * Filter, which django_admin_log to fetch.
     */
    where?: django_admin_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_admin_logs to fetch.
     */
    orderBy?: django_admin_logOrderByWithRelationInput | django_admin_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for django_admin_logs.
     */
    cursor?: django_admin_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_admin_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_admin_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of django_admin_logs.
     */
    distinct?: Django_admin_logScalarFieldEnum | Django_admin_logScalarFieldEnum[]
  }

  /**
   * django_admin_log findFirstOrThrow
   */
  export type django_admin_logFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_admin_log
     */
    select?: django_admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_admin_log
     */
    omit?: django_admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_admin_logInclude<ExtArgs> | null
    /**
     * Filter, which django_admin_log to fetch.
     */
    where?: django_admin_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_admin_logs to fetch.
     */
    orderBy?: django_admin_logOrderByWithRelationInput | django_admin_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for django_admin_logs.
     */
    cursor?: django_admin_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_admin_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_admin_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of django_admin_logs.
     */
    distinct?: Django_admin_logScalarFieldEnum | Django_admin_logScalarFieldEnum[]
  }

  /**
   * django_admin_log findMany
   */
  export type django_admin_logFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_admin_log
     */
    select?: django_admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_admin_log
     */
    omit?: django_admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_admin_logInclude<ExtArgs> | null
    /**
     * Filter, which django_admin_logs to fetch.
     */
    where?: django_admin_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_admin_logs to fetch.
     */
    orderBy?: django_admin_logOrderByWithRelationInput | django_admin_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing django_admin_logs.
     */
    cursor?: django_admin_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_admin_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_admin_logs.
     */
    skip?: number
    distinct?: Django_admin_logScalarFieldEnum | Django_admin_logScalarFieldEnum[]
  }

  /**
   * django_admin_log create
   */
  export type django_admin_logCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_admin_log
     */
    select?: django_admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_admin_log
     */
    omit?: django_admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_admin_logInclude<ExtArgs> | null
    /**
     * The data needed to create a django_admin_log.
     */
    data: XOR<django_admin_logCreateInput, django_admin_logUncheckedCreateInput>
  }

  /**
   * django_admin_log createMany
   */
  export type django_admin_logCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many django_admin_logs.
     */
    data: django_admin_logCreateManyInput | django_admin_logCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * django_admin_log update
   */
  export type django_admin_logUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_admin_log
     */
    select?: django_admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_admin_log
     */
    omit?: django_admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_admin_logInclude<ExtArgs> | null
    /**
     * The data needed to update a django_admin_log.
     */
    data: XOR<django_admin_logUpdateInput, django_admin_logUncheckedUpdateInput>
    /**
     * Choose, which django_admin_log to update.
     */
    where: django_admin_logWhereUniqueInput
  }

  /**
   * django_admin_log updateMany
   */
  export type django_admin_logUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update django_admin_logs.
     */
    data: XOR<django_admin_logUpdateManyMutationInput, django_admin_logUncheckedUpdateManyInput>
    /**
     * Filter which django_admin_logs to update
     */
    where?: django_admin_logWhereInput
    /**
     * Limit how many django_admin_logs to update.
     */
    limit?: number
  }

  /**
   * django_admin_log upsert
   */
  export type django_admin_logUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_admin_log
     */
    select?: django_admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_admin_log
     */
    omit?: django_admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_admin_logInclude<ExtArgs> | null
    /**
     * The filter to search for the django_admin_log to update in case it exists.
     */
    where: django_admin_logWhereUniqueInput
    /**
     * In case the django_admin_log found by the `where` argument doesn't exist, create a new django_admin_log with this data.
     */
    create: XOR<django_admin_logCreateInput, django_admin_logUncheckedCreateInput>
    /**
     * In case the django_admin_log was found with the provided `where` argument, update it with this data.
     */
    update: XOR<django_admin_logUpdateInput, django_admin_logUncheckedUpdateInput>
  }

  /**
   * django_admin_log delete
   */
  export type django_admin_logDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_admin_log
     */
    select?: django_admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_admin_log
     */
    omit?: django_admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_admin_logInclude<ExtArgs> | null
    /**
     * Filter which django_admin_log to delete.
     */
    where: django_admin_logWhereUniqueInput
  }

  /**
   * django_admin_log deleteMany
   */
  export type django_admin_logDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which django_admin_logs to delete
     */
    where?: django_admin_logWhereInput
    /**
     * Limit how many django_admin_logs to delete.
     */
    limit?: number
  }

  /**
   * django_admin_log.django_content_type
   */
  export type django_admin_log$django_content_typeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_content_type
     */
    select?: django_content_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_content_type
     */
    omit?: django_content_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_content_typeInclude<ExtArgs> | null
    where?: django_content_typeWhereInput
  }

  /**
   * django_admin_log without action
   */
  export type django_admin_logDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_admin_log
     */
    select?: django_admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_admin_log
     */
    omit?: django_admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_admin_logInclude<ExtArgs> | null
  }


  /**
   * Model django_content_type
   */

  export type AggregateDjango_content_type = {
    _count: Django_content_typeCountAggregateOutputType | null
    _avg: Django_content_typeAvgAggregateOutputType | null
    _sum: Django_content_typeSumAggregateOutputType | null
    _min: Django_content_typeMinAggregateOutputType | null
    _max: Django_content_typeMaxAggregateOutputType | null
  }

  export type Django_content_typeAvgAggregateOutputType = {
    id: number | null
  }

  export type Django_content_typeSumAggregateOutputType = {
    id: number | null
  }

  export type Django_content_typeMinAggregateOutputType = {
    id: number | null
    app_label: string | null
    model: string | null
  }

  export type Django_content_typeMaxAggregateOutputType = {
    id: number | null
    app_label: string | null
    model: string | null
  }

  export type Django_content_typeCountAggregateOutputType = {
    id: number
    app_label: number
    model: number
    _all: number
  }


  export type Django_content_typeAvgAggregateInputType = {
    id?: true
  }

  export type Django_content_typeSumAggregateInputType = {
    id?: true
  }

  export type Django_content_typeMinAggregateInputType = {
    id?: true
    app_label?: true
    model?: true
  }

  export type Django_content_typeMaxAggregateInputType = {
    id?: true
    app_label?: true
    model?: true
  }

  export type Django_content_typeCountAggregateInputType = {
    id?: true
    app_label?: true
    model?: true
    _all?: true
  }

  export type Django_content_typeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which django_content_type to aggregate.
     */
    where?: django_content_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_content_types to fetch.
     */
    orderBy?: django_content_typeOrderByWithRelationInput | django_content_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: django_content_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_content_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_content_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned django_content_types
    **/
    _count?: true | Django_content_typeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Django_content_typeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Django_content_typeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Django_content_typeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Django_content_typeMaxAggregateInputType
  }

  export type GetDjango_content_typeAggregateType<T extends Django_content_typeAggregateArgs> = {
        [P in keyof T & keyof AggregateDjango_content_type]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDjango_content_type[P]>
      : GetScalarType<T[P], AggregateDjango_content_type[P]>
  }




  export type django_content_typeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: django_content_typeWhereInput
    orderBy?: django_content_typeOrderByWithAggregationInput | django_content_typeOrderByWithAggregationInput[]
    by: Django_content_typeScalarFieldEnum[] | Django_content_typeScalarFieldEnum
    having?: django_content_typeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Django_content_typeCountAggregateInputType | true
    _avg?: Django_content_typeAvgAggregateInputType
    _sum?: Django_content_typeSumAggregateInputType
    _min?: Django_content_typeMinAggregateInputType
    _max?: Django_content_typeMaxAggregateInputType
  }

  export type Django_content_typeGroupByOutputType = {
    id: number
    app_label: string
    model: string
    _count: Django_content_typeCountAggregateOutputType | null
    _avg: Django_content_typeAvgAggregateOutputType | null
    _sum: Django_content_typeSumAggregateOutputType | null
    _min: Django_content_typeMinAggregateOutputType | null
    _max: Django_content_typeMaxAggregateOutputType | null
  }

  type GetDjango_content_typeGroupByPayload<T extends django_content_typeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Django_content_typeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Django_content_typeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Django_content_typeGroupByOutputType[P]>
            : GetScalarType<T[P], Django_content_typeGroupByOutputType[P]>
        }
      >
    >


  export type django_content_typeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    app_label?: boolean
    model?: boolean
    auth_permission?: boolean | django_content_type$auth_permissionArgs<ExtArgs>
    django_admin_log?: boolean | django_content_type$django_admin_logArgs<ExtArgs>
    _count?: boolean | Django_content_typeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["django_content_type"]>



  export type django_content_typeSelectScalar = {
    id?: boolean
    app_label?: boolean
    model?: boolean
  }

  export type django_content_typeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "app_label" | "model", ExtArgs["result"]["django_content_type"]>
  export type django_content_typeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    auth_permission?: boolean | django_content_type$auth_permissionArgs<ExtArgs>
    django_admin_log?: boolean | django_content_type$django_admin_logArgs<ExtArgs>
    _count?: boolean | Django_content_typeCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $django_content_typePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "django_content_type"
    objects: {
      auth_permission: Prisma.$auth_permissionPayload<ExtArgs>[]
      django_admin_log: Prisma.$django_admin_logPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      app_label: string
      model: string
    }, ExtArgs["result"]["django_content_type"]>
    composites: {}
  }

  type django_content_typeGetPayload<S extends boolean | null | undefined | django_content_typeDefaultArgs> = $Result.GetResult<Prisma.$django_content_typePayload, S>

  type django_content_typeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<django_content_typeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Django_content_typeCountAggregateInputType | true
    }

  export interface django_content_typeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['django_content_type'], meta: { name: 'django_content_type' } }
    /**
     * Find zero or one Django_content_type that matches the filter.
     * @param {django_content_typeFindUniqueArgs} args - Arguments to find a Django_content_type
     * @example
     * // Get one Django_content_type
     * const django_content_type = await prisma.django_content_type.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends django_content_typeFindUniqueArgs>(args: SelectSubset<T, django_content_typeFindUniqueArgs<ExtArgs>>): Prisma__django_content_typeClient<$Result.GetResult<Prisma.$django_content_typePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Django_content_type that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {django_content_typeFindUniqueOrThrowArgs} args - Arguments to find a Django_content_type
     * @example
     * // Get one Django_content_type
     * const django_content_type = await prisma.django_content_type.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends django_content_typeFindUniqueOrThrowArgs>(args: SelectSubset<T, django_content_typeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__django_content_typeClient<$Result.GetResult<Prisma.$django_content_typePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Django_content_type that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_content_typeFindFirstArgs} args - Arguments to find a Django_content_type
     * @example
     * // Get one Django_content_type
     * const django_content_type = await prisma.django_content_type.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends django_content_typeFindFirstArgs>(args?: SelectSubset<T, django_content_typeFindFirstArgs<ExtArgs>>): Prisma__django_content_typeClient<$Result.GetResult<Prisma.$django_content_typePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Django_content_type that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_content_typeFindFirstOrThrowArgs} args - Arguments to find a Django_content_type
     * @example
     * // Get one Django_content_type
     * const django_content_type = await prisma.django_content_type.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends django_content_typeFindFirstOrThrowArgs>(args?: SelectSubset<T, django_content_typeFindFirstOrThrowArgs<ExtArgs>>): Prisma__django_content_typeClient<$Result.GetResult<Prisma.$django_content_typePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Django_content_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_content_typeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Django_content_types
     * const django_content_types = await prisma.django_content_type.findMany()
     * 
     * // Get first 10 Django_content_types
     * const django_content_types = await prisma.django_content_type.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const django_content_typeWithIdOnly = await prisma.django_content_type.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends django_content_typeFindManyArgs>(args?: SelectSubset<T, django_content_typeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$django_content_typePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Django_content_type.
     * @param {django_content_typeCreateArgs} args - Arguments to create a Django_content_type.
     * @example
     * // Create one Django_content_type
     * const Django_content_type = await prisma.django_content_type.create({
     *   data: {
     *     // ... data to create a Django_content_type
     *   }
     * })
     * 
     */
    create<T extends django_content_typeCreateArgs>(args: SelectSubset<T, django_content_typeCreateArgs<ExtArgs>>): Prisma__django_content_typeClient<$Result.GetResult<Prisma.$django_content_typePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Django_content_types.
     * @param {django_content_typeCreateManyArgs} args - Arguments to create many Django_content_types.
     * @example
     * // Create many Django_content_types
     * const django_content_type = await prisma.django_content_type.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends django_content_typeCreateManyArgs>(args?: SelectSubset<T, django_content_typeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Django_content_type.
     * @param {django_content_typeDeleteArgs} args - Arguments to delete one Django_content_type.
     * @example
     * // Delete one Django_content_type
     * const Django_content_type = await prisma.django_content_type.delete({
     *   where: {
     *     // ... filter to delete one Django_content_type
     *   }
     * })
     * 
     */
    delete<T extends django_content_typeDeleteArgs>(args: SelectSubset<T, django_content_typeDeleteArgs<ExtArgs>>): Prisma__django_content_typeClient<$Result.GetResult<Prisma.$django_content_typePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Django_content_type.
     * @param {django_content_typeUpdateArgs} args - Arguments to update one Django_content_type.
     * @example
     * // Update one Django_content_type
     * const django_content_type = await prisma.django_content_type.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends django_content_typeUpdateArgs>(args: SelectSubset<T, django_content_typeUpdateArgs<ExtArgs>>): Prisma__django_content_typeClient<$Result.GetResult<Prisma.$django_content_typePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Django_content_types.
     * @param {django_content_typeDeleteManyArgs} args - Arguments to filter Django_content_types to delete.
     * @example
     * // Delete a few Django_content_types
     * const { count } = await prisma.django_content_type.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends django_content_typeDeleteManyArgs>(args?: SelectSubset<T, django_content_typeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Django_content_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_content_typeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Django_content_types
     * const django_content_type = await prisma.django_content_type.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends django_content_typeUpdateManyArgs>(args: SelectSubset<T, django_content_typeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Django_content_type.
     * @param {django_content_typeUpsertArgs} args - Arguments to update or create a Django_content_type.
     * @example
     * // Update or create a Django_content_type
     * const django_content_type = await prisma.django_content_type.upsert({
     *   create: {
     *     // ... data to create a Django_content_type
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Django_content_type we want to update
     *   }
     * })
     */
    upsert<T extends django_content_typeUpsertArgs>(args: SelectSubset<T, django_content_typeUpsertArgs<ExtArgs>>): Prisma__django_content_typeClient<$Result.GetResult<Prisma.$django_content_typePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Django_content_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_content_typeCountArgs} args - Arguments to filter Django_content_types to count.
     * @example
     * // Count the number of Django_content_types
     * const count = await prisma.django_content_type.count({
     *   where: {
     *     // ... the filter for the Django_content_types we want to count
     *   }
     * })
    **/
    count<T extends django_content_typeCountArgs>(
      args?: Subset<T, django_content_typeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Django_content_typeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Django_content_type.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Django_content_typeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Django_content_typeAggregateArgs>(args: Subset<T, Django_content_typeAggregateArgs>): Prisma.PrismaPromise<GetDjango_content_typeAggregateType<T>>

    /**
     * Group by Django_content_type.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_content_typeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends django_content_typeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: django_content_typeGroupByArgs['orderBy'] }
        : { orderBy?: django_content_typeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, django_content_typeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDjango_content_typeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the django_content_type model
   */
  readonly fields: django_content_typeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for django_content_type.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__django_content_typeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    auth_permission<T extends django_content_type$auth_permissionArgs<ExtArgs> = {}>(args?: Subset<T, django_content_type$auth_permissionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$auth_permissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    django_admin_log<T extends django_content_type$django_admin_logArgs<ExtArgs> = {}>(args?: Subset<T, django_content_type$django_admin_logArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$django_admin_logPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the django_content_type model
   */
  interface django_content_typeFieldRefs {
    readonly id: FieldRef<"django_content_type", 'Int'>
    readonly app_label: FieldRef<"django_content_type", 'String'>
    readonly model: FieldRef<"django_content_type", 'String'>
  }
    

  // Custom InputTypes
  /**
   * django_content_type findUnique
   */
  export type django_content_typeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_content_type
     */
    select?: django_content_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_content_type
     */
    omit?: django_content_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_content_typeInclude<ExtArgs> | null
    /**
     * Filter, which django_content_type to fetch.
     */
    where: django_content_typeWhereUniqueInput
  }

  /**
   * django_content_type findUniqueOrThrow
   */
  export type django_content_typeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_content_type
     */
    select?: django_content_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_content_type
     */
    omit?: django_content_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_content_typeInclude<ExtArgs> | null
    /**
     * Filter, which django_content_type to fetch.
     */
    where: django_content_typeWhereUniqueInput
  }

  /**
   * django_content_type findFirst
   */
  export type django_content_typeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_content_type
     */
    select?: django_content_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_content_type
     */
    omit?: django_content_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_content_typeInclude<ExtArgs> | null
    /**
     * Filter, which django_content_type to fetch.
     */
    where?: django_content_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_content_types to fetch.
     */
    orderBy?: django_content_typeOrderByWithRelationInput | django_content_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for django_content_types.
     */
    cursor?: django_content_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_content_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_content_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of django_content_types.
     */
    distinct?: Django_content_typeScalarFieldEnum | Django_content_typeScalarFieldEnum[]
  }

  /**
   * django_content_type findFirstOrThrow
   */
  export type django_content_typeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_content_type
     */
    select?: django_content_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_content_type
     */
    omit?: django_content_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_content_typeInclude<ExtArgs> | null
    /**
     * Filter, which django_content_type to fetch.
     */
    where?: django_content_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_content_types to fetch.
     */
    orderBy?: django_content_typeOrderByWithRelationInput | django_content_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for django_content_types.
     */
    cursor?: django_content_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_content_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_content_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of django_content_types.
     */
    distinct?: Django_content_typeScalarFieldEnum | Django_content_typeScalarFieldEnum[]
  }

  /**
   * django_content_type findMany
   */
  export type django_content_typeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_content_type
     */
    select?: django_content_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_content_type
     */
    omit?: django_content_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_content_typeInclude<ExtArgs> | null
    /**
     * Filter, which django_content_types to fetch.
     */
    where?: django_content_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_content_types to fetch.
     */
    orderBy?: django_content_typeOrderByWithRelationInput | django_content_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing django_content_types.
     */
    cursor?: django_content_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_content_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_content_types.
     */
    skip?: number
    distinct?: Django_content_typeScalarFieldEnum | Django_content_typeScalarFieldEnum[]
  }

  /**
   * django_content_type create
   */
  export type django_content_typeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_content_type
     */
    select?: django_content_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_content_type
     */
    omit?: django_content_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_content_typeInclude<ExtArgs> | null
    /**
     * The data needed to create a django_content_type.
     */
    data: XOR<django_content_typeCreateInput, django_content_typeUncheckedCreateInput>
  }

  /**
   * django_content_type createMany
   */
  export type django_content_typeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many django_content_types.
     */
    data: django_content_typeCreateManyInput | django_content_typeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * django_content_type update
   */
  export type django_content_typeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_content_type
     */
    select?: django_content_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_content_type
     */
    omit?: django_content_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_content_typeInclude<ExtArgs> | null
    /**
     * The data needed to update a django_content_type.
     */
    data: XOR<django_content_typeUpdateInput, django_content_typeUncheckedUpdateInput>
    /**
     * Choose, which django_content_type to update.
     */
    where: django_content_typeWhereUniqueInput
  }

  /**
   * django_content_type updateMany
   */
  export type django_content_typeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update django_content_types.
     */
    data: XOR<django_content_typeUpdateManyMutationInput, django_content_typeUncheckedUpdateManyInput>
    /**
     * Filter which django_content_types to update
     */
    where?: django_content_typeWhereInput
    /**
     * Limit how many django_content_types to update.
     */
    limit?: number
  }

  /**
   * django_content_type upsert
   */
  export type django_content_typeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_content_type
     */
    select?: django_content_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_content_type
     */
    omit?: django_content_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_content_typeInclude<ExtArgs> | null
    /**
     * The filter to search for the django_content_type to update in case it exists.
     */
    where: django_content_typeWhereUniqueInput
    /**
     * In case the django_content_type found by the `where` argument doesn't exist, create a new django_content_type with this data.
     */
    create: XOR<django_content_typeCreateInput, django_content_typeUncheckedCreateInput>
    /**
     * In case the django_content_type was found with the provided `where` argument, update it with this data.
     */
    update: XOR<django_content_typeUpdateInput, django_content_typeUncheckedUpdateInput>
  }

  /**
   * django_content_type delete
   */
  export type django_content_typeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_content_type
     */
    select?: django_content_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_content_type
     */
    omit?: django_content_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_content_typeInclude<ExtArgs> | null
    /**
     * Filter which django_content_type to delete.
     */
    where: django_content_typeWhereUniqueInput
  }

  /**
   * django_content_type deleteMany
   */
  export type django_content_typeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which django_content_types to delete
     */
    where?: django_content_typeWhereInput
    /**
     * Limit how many django_content_types to delete.
     */
    limit?: number
  }

  /**
   * django_content_type.auth_permission
   */
  export type django_content_type$auth_permissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the auth_permission
     */
    select?: auth_permissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the auth_permission
     */
    omit?: auth_permissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: auth_permissionInclude<ExtArgs> | null
    where?: auth_permissionWhereInput
    orderBy?: auth_permissionOrderByWithRelationInput | auth_permissionOrderByWithRelationInput[]
    cursor?: auth_permissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Auth_permissionScalarFieldEnum | Auth_permissionScalarFieldEnum[]
  }

  /**
   * django_content_type.django_admin_log
   */
  export type django_content_type$django_admin_logArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_admin_log
     */
    select?: django_admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_admin_log
     */
    omit?: django_admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_admin_logInclude<ExtArgs> | null
    where?: django_admin_logWhereInput
    orderBy?: django_admin_logOrderByWithRelationInput | django_admin_logOrderByWithRelationInput[]
    cursor?: django_admin_logWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Django_admin_logScalarFieldEnum | Django_admin_logScalarFieldEnum[]
  }

  /**
   * django_content_type without action
   */
  export type django_content_typeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_content_type
     */
    select?: django_content_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_content_type
     */
    omit?: django_content_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: django_content_typeInclude<ExtArgs> | null
  }


  /**
   * Model django_migrations
   */

  export type AggregateDjango_migrations = {
    _count: Django_migrationsCountAggregateOutputType | null
    _avg: Django_migrationsAvgAggregateOutputType | null
    _sum: Django_migrationsSumAggregateOutputType | null
    _min: Django_migrationsMinAggregateOutputType | null
    _max: Django_migrationsMaxAggregateOutputType | null
  }

  export type Django_migrationsAvgAggregateOutputType = {
    id: number | null
  }

  export type Django_migrationsSumAggregateOutputType = {
    id: bigint | null
  }

  export type Django_migrationsMinAggregateOutputType = {
    id: bigint | null
    app: string | null
    name: string | null
    applied: Date | null
  }

  export type Django_migrationsMaxAggregateOutputType = {
    id: bigint | null
    app: string | null
    name: string | null
    applied: Date | null
  }

  export type Django_migrationsCountAggregateOutputType = {
    id: number
    app: number
    name: number
    applied: number
    _all: number
  }


  export type Django_migrationsAvgAggregateInputType = {
    id?: true
  }

  export type Django_migrationsSumAggregateInputType = {
    id?: true
  }

  export type Django_migrationsMinAggregateInputType = {
    id?: true
    app?: true
    name?: true
    applied?: true
  }

  export type Django_migrationsMaxAggregateInputType = {
    id?: true
    app?: true
    name?: true
    applied?: true
  }

  export type Django_migrationsCountAggregateInputType = {
    id?: true
    app?: true
    name?: true
    applied?: true
    _all?: true
  }

  export type Django_migrationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which django_migrations to aggregate.
     */
    where?: django_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_migrations to fetch.
     */
    orderBy?: django_migrationsOrderByWithRelationInput | django_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: django_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned django_migrations
    **/
    _count?: true | Django_migrationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Django_migrationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Django_migrationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Django_migrationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Django_migrationsMaxAggregateInputType
  }

  export type GetDjango_migrationsAggregateType<T extends Django_migrationsAggregateArgs> = {
        [P in keyof T & keyof AggregateDjango_migrations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDjango_migrations[P]>
      : GetScalarType<T[P], AggregateDjango_migrations[P]>
  }




  export type django_migrationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: django_migrationsWhereInput
    orderBy?: django_migrationsOrderByWithAggregationInput | django_migrationsOrderByWithAggregationInput[]
    by: Django_migrationsScalarFieldEnum[] | Django_migrationsScalarFieldEnum
    having?: django_migrationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Django_migrationsCountAggregateInputType | true
    _avg?: Django_migrationsAvgAggregateInputType
    _sum?: Django_migrationsSumAggregateInputType
    _min?: Django_migrationsMinAggregateInputType
    _max?: Django_migrationsMaxAggregateInputType
  }

  export type Django_migrationsGroupByOutputType = {
    id: bigint
    app: string
    name: string
    applied: Date
    _count: Django_migrationsCountAggregateOutputType | null
    _avg: Django_migrationsAvgAggregateOutputType | null
    _sum: Django_migrationsSumAggregateOutputType | null
    _min: Django_migrationsMinAggregateOutputType | null
    _max: Django_migrationsMaxAggregateOutputType | null
  }

  type GetDjango_migrationsGroupByPayload<T extends django_migrationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Django_migrationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Django_migrationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Django_migrationsGroupByOutputType[P]>
            : GetScalarType<T[P], Django_migrationsGroupByOutputType[P]>
        }
      >
    >


  export type django_migrationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    app?: boolean
    name?: boolean
    applied?: boolean
  }, ExtArgs["result"]["django_migrations"]>



  export type django_migrationsSelectScalar = {
    id?: boolean
    app?: boolean
    name?: boolean
    applied?: boolean
  }

  export type django_migrationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "app" | "name" | "applied", ExtArgs["result"]["django_migrations"]>

  export type $django_migrationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "django_migrations"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      app: string
      name: string
      applied: Date
    }, ExtArgs["result"]["django_migrations"]>
    composites: {}
  }

  type django_migrationsGetPayload<S extends boolean | null | undefined | django_migrationsDefaultArgs> = $Result.GetResult<Prisma.$django_migrationsPayload, S>

  type django_migrationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<django_migrationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Django_migrationsCountAggregateInputType | true
    }

  export interface django_migrationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['django_migrations'], meta: { name: 'django_migrations' } }
    /**
     * Find zero or one Django_migrations that matches the filter.
     * @param {django_migrationsFindUniqueArgs} args - Arguments to find a Django_migrations
     * @example
     * // Get one Django_migrations
     * const django_migrations = await prisma.django_migrations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends django_migrationsFindUniqueArgs>(args: SelectSubset<T, django_migrationsFindUniqueArgs<ExtArgs>>): Prisma__django_migrationsClient<$Result.GetResult<Prisma.$django_migrationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Django_migrations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {django_migrationsFindUniqueOrThrowArgs} args - Arguments to find a Django_migrations
     * @example
     * // Get one Django_migrations
     * const django_migrations = await prisma.django_migrations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends django_migrationsFindUniqueOrThrowArgs>(args: SelectSubset<T, django_migrationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__django_migrationsClient<$Result.GetResult<Prisma.$django_migrationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Django_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_migrationsFindFirstArgs} args - Arguments to find a Django_migrations
     * @example
     * // Get one Django_migrations
     * const django_migrations = await prisma.django_migrations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends django_migrationsFindFirstArgs>(args?: SelectSubset<T, django_migrationsFindFirstArgs<ExtArgs>>): Prisma__django_migrationsClient<$Result.GetResult<Prisma.$django_migrationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Django_migrations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_migrationsFindFirstOrThrowArgs} args - Arguments to find a Django_migrations
     * @example
     * // Get one Django_migrations
     * const django_migrations = await prisma.django_migrations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends django_migrationsFindFirstOrThrowArgs>(args?: SelectSubset<T, django_migrationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__django_migrationsClient<$Result.GetResult<Prisma.$django_migrationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Django_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_migrationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Django_migrations
     * const django_migrations = await prisma.django_migrations.findMany()
     * 
     * // Get first 10 Django_migrations
     * const django_migrations = await prisma.django_migrations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const django_migrationsWithIdOnly = await prisma.django_migrations.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends django_migrationsFindManyArgs>(args?: SelectSubset<T, django_migrationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$django_migrationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Django_migrations.
     * @param {django_migrationsCreateArgs} args - Arguments to create a Django_migrations.
     * @example
     * // Create one Django_migrations
     * const Django_migrations = await prisma.django_migrations.create({
     *   data: {
     *     // ... data to create a Django_migrations
     *   }
     * })
     * 
     */
    create<T extends django_migrationsCreateArgs>(args: SelectSubset<T, django_migrationsCreateArgs<ExtArgs>>): Prisma__django_migrationsClient<$Result.GetResult<Prisma.$django_migrationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Django_migrations.
     * @param {django_migrationsCreateManyArgs} args - Arguments to create many Django_migrations.
     * @example
     * // Create many Django_migrations
     * const django_migrations = await prisma.django_migrations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends django_migrationsCreateManyArgs>(args?: SelectSubset<T, django_migrationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Django_migrations.
     * @param {django_migrationsDeleteArgs} args - Arguments to delete one Django_migrations.
     * @example
     * // Delete one Django_migrations
     * const Django_migrations = await prisma.django_migrations.delete({
     *   where: {
     *     // ... filter to delete one Django_migrations
     *   }
     * })
     * 
     */
    delete<T extends django_migrationsDeleteArgs>(args: SelectSubset<T, django_migrationsDeleteArgs<ExtArgs>>): Prisma__django_migrationsClient<$Result.GetResult<Prisma.$django_migrationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Django_migrations.
     * @param {django_migrationsUpdateArgs} args - Arguments to update one Django_migrations.
     * @example
     * // Update one Django_migrations
     * const django_migrations = await prisma.django_migrations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends django_migrationsUpdateArgs>(args: SelectSubset<T, django_migrationsUpdateArgs<ExtArgs>>): Prisma__django_migrationsClient<$Result.GetResult<Prisma.$django_migrationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Django_migrations.
     * @param {django_migrationsDeleteManyArgs} args - Arguments to filter Django_migrations to delete.
     * @example
     * // Delete a few Django_migrations
     * const { count } = await prisma.django_migrations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends django_migrationsDeleteManyArgs>(args?: SelectSubset<T, django_migrationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Django_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_migrationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Django_migrations
     * const django_migrations = await prisma.django_migrations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends django_migrationsUpdateManyArgs>(args: SelectSubset<T, django_migrationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Django_migrations.
     * @param {django_migrationsUpsertArgs} args - Arguments to update or create a Django_migrations.
     * @example
     * // Update or create a Django_migrations
     * const django_migrations = await prisma.django_migrations.upsert({
     *   create: {
     *     // ... data to create a Django_migrations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Django_migrations we want to update
     *   }
     * })
     */
    upsert<T extends django_migrationsUpsertArgs>(args: SelectSubset<T, django_migrationsUpsertArgs<ExtArgs>>): Prisma__django_migrationsClient<$Result.GetResult<Prisma.$django_migrationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Django_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_migrationsCountArgs} args - Arguments to filter Django_migrations to count.
     * @example
     * // Count the number of Django_migrations
     * const count = await prisma.django_migrations.count({
     *   where: {
     *     // ... the filter for the Django_migrations we want to count
     *   }
     * })
    **/
    count<T extends django_migrationsCountArgs>(
      args?: Subset<T, django_migrationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Django_migrationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Django_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Django_migrationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Django_migrationsAggregateArgs>(args: Subset<T, Django_migrationsAggregateArgs>): Prisma.PrismaPromise<GetDjango_migrationsAggregateType<T>>

    /**
     * Group by Django_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_migrationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends django_migrationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: django_migrationsGroupByArgs['orderBy'] }
        : { orderBy?: django_migrationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, django_migrationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDjango_migrationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the django_migrations model
   */
  readonly fields: django_migrationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for django_migrations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__django_migrationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the django_migrations model
   */
  interface django_migrationsFieldRefs {
    readonly id: FieldRef<"django_migrations", 'BigInt'>
    readonly app: FieldRef<"django_migrations", 'String'>
    readonly name: FieldRef<"django_migrations", 'String'>
    readonly applied: FieldRef<"django_migrations", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * django_migrations findUnique
   */
  export type django_migrationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_migrations
     */
    select?: django_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_migrations
     */
    omit?: django_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which django_migrations to fetch.
     */
    where: django_migrationsWhereUniqueInput
  }

  /**
   * django_migrations findUniqueOrThrow
   */
  export type django_migrationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_migrations
     */
    select?: django_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_migrations
     */
    omit?: django_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which django_migrations to fetch.
     */
    where: django_migrationsWhereUniqueInput
  }

  /**
   * django_migrations findFirst
   */
  export type django_migrationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_migrations
     */
    select?: django_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_migrations
     */
    omit?: django_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which django_migrations to fetch.
     */
    where?: django_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_migrations to fetch.
     */
    orderBy?: django_migrationsOrderByWithRelationInput | django_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for django_migrations.
     */
    cursor?: django_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of django_migrations.
     */
    distinct?: Django_migrationsScalarFieldEnum | Django_migrationsScalarFieldEnum[]
  }

  /**
   * django_migrations findFirstOrThrow
   */
  export type django_migrationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_migrations
     */
    select?: django_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_migrations
     */
    omit?: django_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which django_migrations to fetch.
     */
    where?: django_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_migrations to fetch.
     */
    orderBy?: django_migrationsOrderByWithRelationInput | django_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for django_migrations.
     */
    cursor?: django_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of django_migrations.
     */
    distinct?: Django_migrationsScalarFieldEnum | Django_migrationsScalarFieldEnum[]
  }

  /**
   * django_migrations findMany
   */
  export type django_migrationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_migrations
     */
    select?: django_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_migrations
     */
    omit?: django_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which django_migrations to fetch.
     */
    where?: django_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_migrations to fetch.
     */
    orderBy?: django_migrationsOrderByWithRelationInput | django_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing django_migrations.
     */
    cursor?: django_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_migrations.
     */
    skip?: number
    distinct?: Django_migrationsScalarFieldEnum | Django_migrationsScalarFieldEnum[]
  }

  /**
   * django_migrations create
   */
  export type django_migrationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_migrations
     */
    select?: django_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_migrations
     */
    omit?: django_migrationsOmit<ExtArgs> | null
    /**
     * The data needed to create a django_migrations.
     */
    data: XOR<django_migrationsCreateInput, django_migrationsUncheckedCreateInput>
  }

  /**
   * django_migrations createMany
   */
  export type django_migrationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many django_migrations.
     */
    data: django_migrationsCreateManyInput | django_migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * django_migrations update
   */
  export type django_migrationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_migrations
     */
    select?: django_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_migrations
     */
    omit?: django_migrationsOmit<ExtArgs> | null
    /**
     * The data needed to update a django_migrations.
     */
    data: XOR<django_migrationsUpdateInput, django_migrationsUncheckedUpdateInput>
    /**
     * Choose, which django_migrations to update.
     */
    where: django_migrationsWhereUniqueInput
  }

  /**
   * django_migrations updateMany
   */
  export type django_migrationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update django_migrations.
     */
    data: XOR<django_migrationsUpdateManyMutationInput, django_migrationsUncheckedUpdateManyInput>
    /**
     * Filter which django_migrations to update
     */
    where?: django_migrationsWhereInput
    /**
     * Limit how many django_migrations to update.
     */
    limit?: number
  }

  /**
   * django_migrations upsert
   */
  export type django_migrationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_migrations
     */
    select?: django_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_migrations
     */
    omit?: django_migrationsOmit<ExtArgs> | null
    /**
     * The filter to search for the django_migrations to update in case it exists.
     */
    where: django_migrationsWhereUniqueInput
    /**
     * In case the django_migrations found by the `where` argument doesn't exist, create a new django_migrations with this data.
     */
    create: XOR<django_migrationsCreateInput, django_migrationsUncheckedCreateInput>
    /**
     * In case the django_migrations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<django_migrationsUpdateInput, django_migrationsUncheckedUpdateInput>
  }

  /**
   * django_migrations delete
   */
  export type django_migrationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_migrations
     */
    select?: django_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_migrations
     */
    omit?: django_migrationsOmit<ExtArgs> | null
    /**
     * Filter which django_migrations to delete.
     */
    where: django_migrationsWhereUniqueInput
  }

  /**
   * django_migrations deleteMany
   */
  export type django_migrationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which django_migrations to delete
     */
    where?: django_migrationsWhereInput
    /**
     * Limit how many django_migrations to delete.
     */
    limit?: number
  }

  /**
   * django_migrations without action
   */
  export type django_migrationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_migrations
     */
    select?: django_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_migrations
     */
    omit?: django_migrationsOmit<ExtArgs> | null
  }


  /**
   * Model django_session
   */

  export type AggregateDjango_session = {
    _count: Django_sessionCountAggregateOutputType | null
    _min: Django_sessionMinAggregateOutputType | null
    _max: Django_sessionMaxAggregateOutputType | null
  }

  export type Django_sessionMinAggregateOutputType = {
    session_key: string | null
    session_data: string | null
    expire_date: Date | null
  }

  export type Django_sessionMaxAggregateOutputType = {
    session_key: string | null
    session_data: string | null
    expire_date: Date | null
  }

  export type Django_sessionCountAggregateOutputType = {
    session_key: number
    session_data: number
    expire_date: number
    _all: number
  }


  export type Django_sessionMinAggregateInputType = {
    session_key?: true
    session_data?: true
    expire_date?: true
  }

  export type Django_sessionMaxAggregateInputType = {
    session_key?: true
    session_data?: true
    expire_date?: true
  }

  export type Django_sessionCountAggregateInputType = {
    session_key?: true
    session_data?: true
    expire_date?: true
    _all?: true
  }

  export type Django_sessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which django_session to aggregate.
     */
    where?: django_sessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_sessions to fetch.
     */
    orderBy?: django_sessionOrderByWithRelationInput | django_sessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: django_sessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned django_sessions
    **/
    _count?: true | Django_sessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Django_sessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Django_sessionMaxAggregateInputType
  }

  export type GetDjango_sessionAggregateType<T extends Django_sessionAggregateArgs> = {
        [P in keyof T & keyof AggregateDjango_session]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDjango_session[P]>
      : GetScalarType<T[P], AggregateDjango_session[P]>
  }




  export type django_sessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: django_sessionWhereInput
    orderBy?: django_sessionOrderByWithAggregationInput | django_sessionOrderByWithAggregationInput[]
    by: Django_sessionScalarFieldEnum[] | Django_sessionScalarFieldEnum
    having?: django_sessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Django_sessionCountAggregateInputType | true
    _min?: Django_sessionMinAggregateInputType
    _max?: Django_sessionMaxAggregateInputType
  }

  export type Django_sessionGroupByOutputType = {
    session_key: string
    session_data: string
    expire_date: Date
    _count: Django_sessionCountAggregateOutputType | null
    _min: Django_sessionMinAggregateOutputType | null
    _max: Django_sessionMaxAggregateOutputType | null
  }

  type GetDjango_sessionGroupByPayload<T extends django_sessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Django_sessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Django_sessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Django_sessionGroupByOutputType[P]>
            : GetScalarType<T[P], Django_sessionGroupByOutputType[P]>
        }
      >
    >


  export type django_sessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    session_key?: boolean
    session_data?: boolean
    expire_date?: boolean
  }, ExtArgs["result"]["django_session"]>



  export type django_sessionSelectScalar = {
    session_key?: boolean
    session_data?: boolean
    expire_date?: boolean
  }

  export type django_sessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"session_key" | "session_data" | "expire_date", ExtArgs["result"]["django_session"]>

  export type $django_sessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "django_session"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      session_key: string
      session_data: string
      expire_date: Date
    }, ExtArgs["result"]["django_session"]>
    composites: {}
  }

  type django_sessionGetPayload<S extends boolean | null | undefined | django_sessionDefaultArgs> = $Result.GetResult<Prisma.$django_sessionPayload, S>

  type django_sessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<django_sessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Django_sessionCountAggregateInputType | true
    }

  export interface django_sessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['django_session'], meta: { name: 'django_session' } }
    /**
     * Find zero or one Django_session that matches the filter.
     * @param {django_sessionFindUniqueArgs} args - Arguments to find a Django_session
     * @example
     * // Get one Django_session
     * const django_session = await prisma.django_session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends django_sessionFindUniqueArgs>(args: SelectSubset<T, django_sessionFindUniqueArgs<ExtArgs>>): Prisma__django_sessionClient<$Result.GetResult<Prisma.$django_sessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Django_session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {django_sessionFindUniqueOrThrowArgs} args - Arguments to find a Django_session
     * @example
     * // Get one Django_session
     * const django_session = await prisma.django_session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends django_sessionFindUniqueOrThrowArgs>(args: SelectSubset<T, django_sessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__django_sessionClient<$Result.GetResult<Prisma.$django_sessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Django_session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_sessionFindFirstArgs} args - Arguments to find a Django_session
     * @example
     * // Get one Django_session
     * const django_session = await prisma.django_session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends django_sessionFindFirstArgs>(args?: SelectSubset<T, django_sessionFindFirstArgs<ExtArgs>>): Prisma__django_sessionClient<$Result.GetResult<Prisma.$django_sessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Django_session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_sessionFindFirstOrThrowArgs} args - Arguments to find a Django_session
     * @example
     * // Get one Django_session
     * const django_session = await prisma.django_session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends django_sessionFindFirstOrThrowArgs>(args?: SelectSubset<T, django_sessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__django_sessionClient<$Result.GetResult<Prisma.$django_sessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Django_sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_sessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Django_sessions
     * const django_sessions = await prisma.django_session.findMany()
     * 
     * // Get first 10 Django_sessions
     * const django_sessions = await prisma.django_session.findMany({ take: 10 })
     * 
     * // Only select the `session_key`
     * const django_sessionWithSession_keyOnly = await prisma.django_session.findMany({ select: { session_key: true } })
     * 
     */
    findMany<T extends django_sessionFindManyArgs>(args?: SelectSubset<T, django_sessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$django_sessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Django_session.
     * @param {django_sessionCreateArgs} args - Arguments to create a Django_session.
     * @example
     * // Create one Django_session
     * const Django_session = await prisma.django_session.create({
     *   data: {
     *     // ... data to create a Django_session
     *   }
     * })
     * 
     */
    create<T extends django_sessionCreateArgs>(args: SelectSubset<T, django_sessionCreateArgs<ExtArgs>>): Prisma__django_sessionClient<$Result.GetResult<Prisma.$django_sessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Django_sessions.
     * @param {django_sessionCreateManyArgs} args - Arguments to create many Django_sessions.
     * @example
     * // Create many Django_sessions
     * const django_session = await prisma.django_session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends django_sessionCreateManyArgs>(args?: SelectSubset<T, django_sessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Django_session.
     * @param {django_sessionDeleteArgs} args - Arguments to delete one Django_session.
     * @example
     * // Delete one Django_session
     * const Django_session = await prisma.django_session.delete({
     *   where: {
     *     // ... filter to delete one Django_session
     *   }
     * })
     * 
     */
    delete<T extends django_sessionDeleteArgs>(args: SelectSubset<T, django_sessionDeleteArgs<ExtArgs>>): Prisma__django_sessionClient<$Result.GetResult<Prisma.$django_sessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Django_session.
     * @param {django_sessionUpdateArgs} args - Arguments to update one Django_session.
     * @example
     * // Update one Django_session
     * const django_session = await prisma.django_session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends django_sessionUpdateArgs>(args: SelectSubset<T, django_sessionUpdateArgs<ExtArgs>>): Prisma__django_sessionClient<$Result.GetResult<Prisma.$django_sessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Django_sessions.
     * @param {django_sessionDeleteManyArgs} args - Arguments to filter Django_sessions to delete.
     * @example
     * // Delete a few Django_sessions
     * const { count } = await prisma.django_session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends django_sessionDeleteManyArgs>(args?: SelectSubset<T, django_sessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Django_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_sessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Django_sessions
     * const django_session = await prisma.django_session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends django_sessionUpdateManyArgs>(args: SelectSubset<T, django_sessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Django_session.
     * @param {django_sessionUpsertArgs} args - Arguments to update or create a Django_session.
     * @example
     * // Update or create a Django_session
     * const django_session = await prisma.django_session.upsert({
     *   create: {
     *     // ... data to create a Django_session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Django_session we want to update
     *   }
     * })
     */
    upsert<T extends django_sessionUpsertArgs>(args: SelectSubset<T, django_sessionUpsertArgs<ExtArgs>>): Prisma__django_sessionClient<$Result.GetResult<Prisma.$django_sessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Django_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_sessionCountArgs} args - Arguments to filter Django_sessions to count.
     * @example
     * // Count the number of Django_sessions
     * const count = await prisma.django_session.count({
     *   where: {
     *     // ... the filter for the Django_sessions we want to count
     *   }
     * })
    **/
    count<T extends django_sessionCountArgs>(
      args?: Subset<T, django_sessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Django_sessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Django_session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Django_sessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Django_sessionAggregateArgs>(args: Subset<T, Django_sessionAggregateArgs>): Prisma.PrismaPromise<GetDjango_sessionAggregateType<T>>

    /**
     * Group by Django_session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {django_sessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends django_sessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: django_sessionGroupByArgs['orderBy'] }
        : { orderBy?: django_sessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, django_sessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDjango_sessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the django_session model
   */
  readonly fields: django_sessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for django_session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__django_sessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the django_session model
   */
  interface django_sessionFieldRefs {
    readonly session_key: FieldRef<"django_session", 'String'>
    readonly session_data: FieldRef<"django_session", 'String'>
    readonly expire_date: FieldRef<"django_session", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * django_session findUnique
   */
  export type django_sessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_session
     */
    select?: django_sessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_session
     */
    omit?: django_sessionOmit<ExtArgs> | null
    /**
     * Filter, which django_session to fetch.
     */
    where: django_sessionWhereUniqueInput
  }

  /**
   * django_session findUniqueOrThrow
   */
  export type django_sessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_session
     */
    select?: django_sessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_session
     */
    omit?: django_sessionOmit<ExtArgs> | null
    /**
     * Filter, which django_session to fetch.
     */
    where: django_sessionWhereUniqueInput
  }

  /**
   * django_session findFirst
   */
  export type django_sessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_session
     */
    select?: django_sessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_session
     */
    omit?: django_sessionOmit<ExtArgs> | null
    /**
     * Filter, which django_session to fetch.
     */
    where?: django_sessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_sessions to fetch.
     */
    orderBy?: django_sessionOrderByWithRelationInput | django_sessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for django_sessions.
     */
    cursor?: django_sessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of django_sessions.
     */
    distinct?: Django_sessionScalarFieldEnum | Django_sessionScalarFieldEnum[]
  }

  /**
   * django_session findFirstOrThrow
   */
  export type django_sessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_session
     */
    select?: django_sessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_session
     */
    omit?: django_sessionOmit<ExtArgs> | null
    /**
     * Filter, which django_session to fetch.
     */
    where?: django_sessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_sessions to fetch.
     */
    orderBy?: django_sessionOrderByWithRelationInput | django_sessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for django_sessions.
     */
    cursor?: django_sessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of django_sessions.
     */
    distinct?: Django_sessionScalarFieldEnum | Django_sessionScalarFieldEnum[]
  }

  /**
   * django_session findMany
   */
  export type django_sessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_session
     */
    select?: django_sessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_session
     */
    omit?: django_sessionOmit<ExtArgs> | null
    /**
     * Filter, which django_sessions to fetch.
     */
    where?: django_sessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of django_sessions to fetch.
     */
    orderBy?: django_sessionOrderByWithRelationInput | django_sessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing django_sessions.
     */
    cursor?: django_sessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` django_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` django_sessions.
     */
    skip?: number
    distinct?: Django_sessionScalarFieldEnum | Django_sessionScalarFieldEnum[]
  }

  /**
   * django_session create
   */
  export type django_sessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_session
     */
    select?: django_sessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_session
     */
    omit?: django_sessionOmit<ExtArgs> | null
    /**
     * The data needed to create a django_session.
     */
    data: XOR<django_sessionCreateInput, django_sessionUncheckedCreateInput>
  }

  /**
   * django_session createMany
   */
  export type django_sessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many django_sessions.
     */
    data: django_sessionCreateManyInput | django_sessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * django_session update
   */
  export type django_sessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_session
     */
    select?: django_sessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_session
     */
    omit?: django_sessionOmit<ExtArgs> | null
    /**
     * The data needed to update a django_session.
     */
    data: XOR<django_sessionUpdateInput, django_sessionUncheckedUpdateInput>
    /**
     * Choose, which django_session to update.
     */
    where: django_sessionWhereUniqueInput
  }

  /**
   * django_session updateMany
   */
  export type django_sessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update django_sessions.
     */
    data: XOR<django_sessionUpdateManyMutationInput, django_sessionUncheckedUpdateManyInput>
    /**
     * Filter which django_sessions to update
     */
    where?: django_sessionWhereInput
    /**
     * Limit how many django_sessions to update.
     */
    limit?: number
  }

  /**
   * django_session upsert
   */
  export type django_sessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_session
     */
    select?: django_sessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_session
     */
    omit?: django_sessionOmit<ExtArgs> | null
    /**
     * The filter to search for the django_session to update in case it exists.
     */
    where: django_sessionWhereUniqueInput
    /**
     * In case the django_session found by the `where` argument doesn't exist, create a new django_session with this data.
     */
    create: XOR<django_sessionCreateInput, django_sessionUncheckedCreateInput>
    /**
     * In case the django_session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<django_sessionUpdateInput, django_sessionUncheckedUpdateInput>
  }

  /**
   * django_session delete
   */
  export type django_sessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_session
     */
    select?: django_sessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_session
     */
    omit?: django_sessionOmit<ExtArgs> | null
    /**
     * Filter which django_session to delete.
     */
    where: django_sessionWhereUniqueInput
  }

  /**
   * django_session deleteMany
   */
  export type django_sessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which django_sessions to delete
     */
    where?: django_sessionWhereInput
    /**
     * Limit how many django_sessions to delete.
     */
    limit?: number
  }

  /**
   * django_session without action
   */
  export type django_sessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the django_session
     */
    select?: django_sessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the django_session
     */
    omit?: django_sessionOmit<ExtArgs> | null
  }


  /**
   * Model post_app_post_images
   */

  export type AggregatePost_app_post_images = {
    _count: Post_app_post_imagesCountAggregateOutputType | null
    _avg: Post_app_post_imagesAvgAggregateOutputType | null
    _sum: Post_app_post_imagesSumAggregateOutputType | null
    _min: Post_app_post_imagesMinAggregateOutputType | null
    _max: Post_app_post_imagesMaxAggregateOutputType | null
  }

  export type Post_app_post_imagesAvgAggregateOutputType = {
    id: number | null
    post_id: number | null
    image_id: number | null
  }

  export type Post_app_post_imagesSumAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    image_id: bigint | null
  }

  export type Post_app_post_imagesMinAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    image_id: bigint | null
  }

  export type Post_app_post_imagesMaxAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    image_id: bigint | null
  }

  export type Post_app_post_imagesCountAggregateOutputType = {
    id: number
    post_id: number
    image_id: number
    _all: number
  }


  export type Post_app_post_imagesAvgAggregateInputType = {
    id?: true
    post_id?: true
    image_id?: true
  }

  export type Post_app_post_imagesSumAggregateInputType = {
    id?: true
    post_id?: true
    image_id?: true
  }

  export type Post_app_post_imagesMinAggregateInputType = {
    id?: true
    post_id?: true
    image_id?: true
  }

  export type Post_app_post_imagesMaxAggregateInputType = {
    id?: true
    post_id?: true
    image_id?: true
  }

  export type Post_app_post_imagesCountAggregateInputType = {
    id?: true
    post_id?: true
    image_id?: true
    _all?: true
  }

  export type Post_app_post_imagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_app_post_images to aggregate.
     */
    where?: post_app_post_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_images to fetch.
     */
    orderBy?: post_app_post_imagesOrderByWithRelationInput | post_app_post_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: post_app_post_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned post_app_post_images
    **/
    _count?: true | Post_app_post_imagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Post_app_post_imagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Post_app_post_imagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Post_app_post_imagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Post_app_post_imagesMaxAggregateInputType
  }

  export type GetPost_app_post_imagesAggregateType<T extends Post_app_post_imagesAggregateArgs> = {
        [P in keyof T & keyof AggregatePost_app_post_images]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost_app_post_images[P]>
      : GetScalarType<T[P], AggregatePost_app_post_images[P]>
  }




  export type post_app_post_imagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_app_post_imagesWhereInput
    orderBy?: post_app_post_imagesOrderByWithAggregationInput | post_app_post_imagesOrderByWithAggregationInput[]
    by: Post_app_post_imagesScalarFieldEnum[] | Post_app_post_imagesScalarFieldEnum
    having?: post_app_post_imagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Post_app_post_imagesCountAggregateInputType | true
    _avg?: Post_app_post_imagesAvgAggregateInputType
    _sum?: Post_app_post_imagesSumAggregateInputType
    _min?: Post_app_post_imagesMinAggregateInputType
    _max?: Post_app_post_imagesMaxAggregateInputType
  }

  export type Post_app_post_imagesGroupByOutputType = {
    id: bigint
    post_id: bigint
    image_id: bigint
    _count: Post_app_post_imagesCountAggregateOutputType | null
    _avg: Post_app_post_imagesAvgAggregateOutputType | null
    _sum: Post_app_post_imagesSumAggregateOutputType | null
    _min: Post_app_post_imagesMinAggregateOutputType | null
    _max: Post_app_post_imagesMaxAggregateOutputType | null
  }

  type GetPost_app_post_imagesGroupByPayload<T extends post_app_post_imagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Post_app_post_imagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Post_app_post_imagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Post_app_post_imagesGroupByOutputType[P]>
            : GetScalarType<T[P], Post_app_post_imagesGroupByOutputType[P]>
        }
      >
    >


  export type post_app_post_imagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    image_id?: boolean
    post_app_image?: boolean | ImageDefaultArgs<ExtArgs>
    post_app_post?: boolean | PostDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post_app_post_images"]>



  export type post_app_post_imagesSelectScalar = {
    id?: boolean
    post_id?: boolean
    image_id?: boolean
  }

  export type post_app_post_imagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "post_id" | "image_id", ExtArgs["result"]["post_app_post_images"]>
  export type post_app_post_imagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post_app_image?: boolean | ImageDefaultArgs<ExtArgs>
    post_app_post?: boolean | PostDefaultArgs<ExtArgs>
  }

  export type $post_app_post_imagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "post_app_post_images"
    objects: {
      post_app_image: Prisma.$ImagePayload<ExtArgs>
      post_app_post: Prisma.$PostPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      post_id: bigint
      image_id: bigint
    }, ExtArgs["result"]["post_app_post_images"]>
    composites: {}
  }

  type post_app_post_imagesGetPayload<S extends boolean | null | undefined | post_app_post_imagesDefaultArgs> = $Result.GetResult<Prisma.$post_app_post_imagesPayload, S>

  type post_app_post_imagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<post_app_post_imagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Post_app_post_imagesCountAggregateInputType | true
    }

  export interface post_app_post_imagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['post_app_post_images'], meta: { name: 'post_app_post_images' } }
    /**
     * Find zero or one Post_app_post_images that matches the filter.
     * @param {post_app_post_imagesFindUniqueArgs} args - Arguments to find a Post_app_post_images
     * @example
     * // Get one Post_app_post_images
     * const post_app_post_images = await prisma.post_app_post_images.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends post_app_post_imagesFindUniqueArgs>(args: SelectSubset<T, post_app_post_imagesFindUniqueArgs<ExtArgs>>): Prisma__post_app_post_imagesClient<$Result.GetResult<Prisma.$post_app_post_imagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Post_app_post_images that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {post_app_post_imagesFindUniqueOrThrowArgs} args - Arguments to find a Post_app_post_images
     * @example
     * // Get one Post_app_post_images
     * const post_app_post_images = await prisma.post_app_post_images.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends post_app_post_imagesFindUniqueOrThrowArgs>(args: SelectSubset<T, post_app_post_imagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__post_app_post_imagesClient<$Result.GetResult<Prisma.$post_app_post_imagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_app_post_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_imagesFindFirstArgs} args - Arguments to find a Post_app_post_images
     * @example
     * // Get one Post_app_post_images
     * const post_app_post_images = await prisma.post_app_post_images.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends post_app_post_imagesFindFirstArgs>(args?: SelectSubset<T, post_app_post_imagesFindFirstArgs<ExtArgs>>): Prisma__post_app_post_imagesClient<$Result.GetResult<Prisma.$post_app_post_imagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_app_post_images that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_imagesFindFirstOrThrowArgs} args - Arguments to find a Post_app_post_images
     * @example
     * // Get one Post_app_post_images
     * const post_app_post_images = await prisma.post_app_post_images.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends post_app_post_imagesFindFirstOrThrowArgs>(args?: SelectSubset<T, post_app_post_imagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__post_app_post_imagesClient<$Result.GetResult<Prisma.$post_app_post_imagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Post_app_post_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_imagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Post_app_post_images
     * const post_app_post_images = await prisma.post_app_post_images.findMany()
     * 
     * // Get first 10 Post_app_post_images
     * const post_app_post_images = await prisma.post_app_post_images.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const post_app_post_imagesWithIdOnly = await prisma.post_app_post_images.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends post_app_post_imagesFindManyArgs>(args?: SelectSubset<T, post_app_post_imagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_app_post_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Post_app_post_images.
     * @param {post_app_post_imagesCreateArgs} args - Arguments to create a Post_app_post_images.
     * @example
     * // Create one Post_app_post_images
     * const Post_app_post_images = await prisma.post_app_post_images.create({
     *   data: {
     *     // ... data to create a Post_app_post_images
     *   }
     * })
     * 
     */
    create<T extends post_app_post_imagesCreateArgs>(args: SelectSubset<T, post_app_post_imagesCreateArgs<ExtArgs>>): Prisma__post_app_post_imagesClient<$Result.GetResult<Prisma.$post_app_post_imagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Post_app_post_images.
     * @param {post_app_post_imagesCreateManyArgs} args - Arguments to create many Post_app_post_images.
     * @example
     * // Create many Post_app_post_images
     * const post_app_post_images = await prisma.post_app_post_images.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends post_app_post_imagesCreateManyArgs>(args?: SelectSubset<T, post_app_post_imagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Post_app_post_images.
     * @param {post_app_post_imagesDeleteArgs} args - Arguments to delete one Post_app_post_images.
     * @example
     * // Delete one Post_app_post_images
     * const Post_app_post_images = await prisma.post_app_post_images.delete({
     *   where: {
     *     // ... filter to delete one Post_app_post_images
     *   }
     * })
     * 
     */
    delete<T extends post_app_post_imagesDeleteArgs>(args: SelectSubset<T, post_app_post_imagesDeleteArgs<ExtArgs>>): Prisma__post_app_post_imagesClient<$Result.GetResult<Prisma.$post_app_post_imagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Post_app_post_images.
     * @param {post_app_post_imagesUpdateArgs} args - Arguments to update one Post_app_post_images.
     * @example
     * // Update one Post_app_post_images
     * const post_app_post_images = await prisma.post_app_post_images.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends post_app_post_imagesUpdateArgs>(args: SelectSubset<T, post_app_post_imagesUpdateArgs<ExtArgs>>): Prisma__post_app_post_imagesClient<$Result.GetResult<Prisma.$post_app_post_imagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Post_app_post_images.
     * @param {post_app_post_imagesDeleteManyArgs} args - Arguments to filter Post_app_post_images to delete.
     * @example
     * // Delete a few Post_app_post_images
     * const { count } = await prisma.post_app_post_images.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends post_app_post_imagesDeleteManyArgs>(args?: SelectSubset<T, post_app_post_imagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Post_app_post_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_imagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Post_app_post_images
     * const post_app_post_images = await prisma.post_app_post_images.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends post_app_post_imagesUpdateManyArgs>(args: SelectSubset<T, post_app_post_imagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Post_app_post_images.
     * @param {post_app_post_imagesUpsertArgs} args - Arguments to update or create a Post_app_post_images.
     * @example
     * // Update or create a Post_app_post_images
     * const post_app_post_images = await prisma.post_app_post_images.upsert({
     *   create: {
     *     // ... data to create a Post_app_post_images
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post_app_post_images we want to update
     *   }
     * })
     */
    upsert<T extends post_app_post_imagesUpsertArgs>(args: SelectSubset<T, post_app_post_imagesUpsertArgs<ExtArgs>>): Prisma__post_app_post_imagesClient<$Result.GetResult<Prisma.$post_app_post_imagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Post_app_post_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_imagesCountArgs} args - Arguments to filter Post_app_post_images to count.
     * @example
     * // Count the number of Post_app_post_images
     * const count = await prisma.post_app_post_images.count({
     *   where: {
     *     // ... the filter for the Post_app_post_images we want to count
     *   }
     * })
    **/
    count<T extends post_app_post_imagesCountArgs>(
      args?: Subset<T, post_app_post_imagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Post_app_post_imagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post_app_post_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Post_app_post_imagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Post_app_post_imagesAggregateArgs>(args: Subset<T, Post_app_post_imagesAggregateArgs>): Prisma.PrismaPromise<GetPost_app_post_imagesAggregateType<T>>

    /**
     * Group by Post_app_post_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_imagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends post_app_post_imagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: post_app_post_imagesGroupByArgs['orderBy'] }
        : { orderBy?: post_app_post_imagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, post_app_post_imagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPost_app_post_imagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the post_app_post_images model
   */
  readonly fields: post_app_post_imagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for post_app_post_images.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__post_app_post_imagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post_app_image<T extends ImageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ImageDefaultArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    post_app_post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the post_app_post_images model
   */
  interface post_app_post_imagesFieldRefs {
    readonly id: FieldRef<"post_app_post_images", 'BigInt'>
    readonly post_id: FieldRef<"post_app_post_images", 'BigInt'>
    readonly image_id: FieldRef<"post_app_post_images", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * post_app_post_images findUnique
   */
  export type post_app_post_imagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_images
     */
    select?: post_app_post_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_images
     */
    omit?: post_app_post_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_imagesInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_images to fetch.
     */
    where: post_app_post_imagesWhereUniqueInput
  }

  /**
   * post_app_post_images findUniqueOrThrow
   */
  export type post_app_post_imagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_images
     */
    select?: post_app_post_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_images
     */
    omit?: post_app_post_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_imagesInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_images to fetch.
     */
    where: post_app_post_imagesWhereUniqueInput
  }

  /**
   * post_app_post_images findFirst
   */
  export type post_app_post_imagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_images
     */
    select?: post_app_post_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_images
     */
    omit?: post_app_post_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_imagesInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_images to fetch.
     */
    where?: post_app_post_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_images to fetch.
     */
    orderBy?: post_app_post_imagesOrderByWithRelationInput | post_app_post_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_app_post_images.
     */
    cursor?: post_app_post_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_app_post_images.
     */
    distinct?: Post_app_post_imagesScalarFieldEnum | Post_app_post_imagesScalarFieldEnum[]
  }

  /**
   * post_app_post_images findFirstOrThrow
   */
  export type post_app_post_imagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_images
     */
    select?: post_app_post_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_images
     */
    omit?: post_app_post_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_imagesInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_images to fetch.
     */
    where?: post_app_post_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_images to fetch.
     */
    orderBy?: post_app_post_imagesOrderByWithRelationInput | post_app_post_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_app_post_images.
     */
    cursor?: post_app_post_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_app_post_images.
     */
    distinct?: Post_app_post_imagesScalarFieldEnum | Post_app_post_imagesScalarFieldEnum[]
  }

  /**
   * post_app_post_images findMany
   */
  export type post_app_post_imagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_images
     */
    select?: post_app_post_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_images
     */
    omit?: post_app_post_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_imagesInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_images to fetch.
     */
    where?: post_app_post_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_images to fetch.
     */
    orderBy?: post_app_post_imagesOrderByWithRelationInput | post_app_post_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing post_app_post_images.
     */
    cursor?: post_app_post_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_images.
     */
    skip?: number
    distinct?: Post_app_post_imagesScalarFieldEnum | Post_app_post_imagesScalarFieldEnum[]
  }

  /**
   * post_app_post_images create
   */
  export type post_app_post_imagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_images
     */
    select?: post_app_post_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_images
     */
    omit?: post_app_post_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_imagesInclude<ExtArgs> | null
    /**
     * The data needed to create a post_app_post_images.
     */
    data: XOR<post_app_post_imagesCreateInput, post_app_post_imagesUncheckedCreateInput>
  }

  /**
   * post_app_post_images createMany
   */
  export type post_app_post_imagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many post_app_post_images.
     */
    data: post_app_post_imagesCreateManyInput | post_app_post_imagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * post_app_post_images update
   */
  export type post_app_post_imagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_images
     */
    select?: post_app_post_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_images
     */
    omit?: post_app_post_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_imagesInclude<ExtArgs> | null
    /**
     * The data needed to update a post_app_post_images.
     */
    data: XOR<post_app_post_imagesUpdateInput, post_app_post_imagesUncheckedUpdateInput>
    /**
     * Choose, which post_app_post_images to update.
     */
    where: post_app_post_imagesWhereUniqueInput
  }

  /**
   * post_app_post_images updateMany
   */
  export type post_app_post_imagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update post_app_post_images.
     */
    data: XOR<post_app_post_imagesUpdateManyMutationInput, post_app_post_imagesUncheckedUpdateManyInput>
    /**
     * Filter which post_app_post_images to update
     */
    where?: post_app_post_imagesWhereInput
    /**
     * Limit how many post_app_post_images to update.
     */
    limit?: number
  }

  /**
   * post_app_post_images upsert
   */
  export type post_app_post_imagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_images
     */
    select?: post_app_post_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_images
     */
    omit?: post_app_post_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_imagesInclude<ExtArgs> | null
    /**
     * The filter to search for the post_app_post_images to update in case it exists.
     */
    where: post_app_post_imagesWhereUniqueInput
    /**
     * In case the post_app_post_images found by the `where` argument doesn't exist, create a new post_app_post_images with this data.
     */
    create: XOR<post_app_post_imagesCreateInput, post_app_post_imagesUncheckedCreateInput>
    /**
     * In case the post_app_post_images was found with the provided `where` argument, update it with this data.
     */
    update: XOR<post_app_post_imagesUpdateInput, post_app_post_imagesUncheckedUpdateInput>
  }

  /**
   * post_app_post_images delete
   */
  export type post_app_post_imagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_images
     */
    select?: post_app_post_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_images
     */
    omit?: post_app_post_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_imagesInclude<ExtArgs> | null
    /**
     * Filter which post_app_post_images to delete.
     */
    where: post_app_post_imagesWhereUniqueInput
  }

  /**
   * post_app_post_images deleteMany
   */
  export type post_app_post_imagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_app_post_images to delete
     */
    where?: post_app_post_imagesWhereInput
    /**
     * Limit how many post_app_post_images to delete.
     */
    limit?: number
  }

  /**
   * post_app_post_images without action
   */
  export type post_app_post_imagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_images
     */
    select?: post_app_post_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_images
     */
    omit?: post_app_post_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_imagesInclude<ExtArgs> | null
  }


  /**
   * Model post_app_post_tags
   */

  export type AggregatePost_app_post_tags = {
    _count: Post_app_post_tagsCountAggregateOutputType | null
    _avg: Post_app_post_tagsAvgAggregateOutputType | null
    _sum: Post_app_post_tagsSumAggregateOutputType | null
    _min: Post_app_post_tagsMinAggregateOutputType | null
    _max: Post_app_post_tagsMaxAggregateOutputType | null
  }

  export type Post_app_post_tagsAvgAggregateOutputType = {
    id: number | null
    post_id: number | null
    tag_id: number | null
  }

  export type Post_app_post_tagsSumAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    tag_id: bigint | null
  }

  export type Post_app_post_tagsMinAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    tag_id: bigint | null
  }

  export type Post_app_post_tagsMaxAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    tag_id: bigint | null
  }

  export type Post_app_post_tagsCountAggregateOutputType = {
    id: number
    post_id: number
    tag_id: number
    _all: number
  }


  export type Post_app_post_tagsAvgAggregateInputType = {
    id?: true
    post_id?: true
    tag_id?: true
  }

  export type Post_app_post_tagsSumAggregateInputType = {
    id?: true
    post_id?: true
    tag_id?: true
  }

  export type Post_app_post_tagsMinAggregateInputType = {
    id?: true
    post_id?: true
    tag_id?: true
  }

  export type Post_app_post_tagsMaxAggregateInputType = {
    id?: true
    post_id?: true
    tag_id?: true
  }

  export type Post_app_post_tagsCountAggregateInputType = {
    id?: true
    post_id?: true
    tag_id?: true
    _all?: true
  }

  export type Post_app_post_tagsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_app_post_tags to aggregate.
     */
    where?: post_app_post_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_tags to fetch.
     */
    orderBy?: post_app_post_tagsOrderByWithRelationInput | post_app_post_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: post_app_post_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned post_app_post_tags
    **/
    _count?: true | Post_app_post_tagsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Post_app_post_tagsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Post_app_post_tagsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Post_app_post_tagsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Post_app_post_tagsMaxAggregateInputType
  }

  export type GetPost_app_post_tagsAggregateType<T extends Post_app_post_tagsAggregateArgs> = {
        [P in keyof T & keyof AggregatePost_app_post_tags]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost_app_post_tags[P]>
      : GetScalarType<T[P], AggregatePost_app_post_tags[P]>
  }




  export type post_app_post_tagsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_app_post_tagsWhereInput
    orderBy?: post_app_post_tagsOrderByWithAggregationInput | post_app_post_tagsOrderByWithAggregationInput[]
    by: Post_app_post_tagsScalarFieldEnum[] | Post_app_post_tagsScalarFieldEnum
    having?: post_app_post_tagsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Post_app_post_tagsCountAggregateInputType | true
    _avg?: Post_app_post_tagsAvgAggregateInputType
    _sum?: Post_app_post_tagsSumAggregateInputType
    _min?: Post_app_post_tagsMinAggregateInputType
    _max?: Post_app_post_tagsMaxAggregateInputType
  }

  export type Post_app_post_tagsGroupByOutputType = {
    id: bigint
    post_id: bigint
    tag_id: bigint
    _count: Post_app_post_tagsCountAggregateOutputType | null
    _avg: Post_app_post_tagsAvgAggregateOutputType | null
    _sum: Post_app_post_tagsSumAggregateOutputType | null
    _min: Post_app_post_tagsMinAggregateOutputType | null
    _max: Post_app_post_tagsMaxAggregateOutputType | null
  }

  type GetPost_app_post_tagsGroupByPayload<T extends post_app_post_tagsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Post_app_post_tagsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Post_app_post_tagsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Post_app_post_tagsGroupByOutputType[P]>
            : GetScalarType<T[P], Post_app_post_tagsGroupByOutputType[P]>
        }
      >
    >


  export type post_app_post_tagsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    tag_id?: boolean
    post_app_post?: boolean | PostDefaultArgs<ExtArgs>
    post_app_tag?: boolean | TagsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post_app_post_tags"]>



  export type post_app_post_tagsSelectScalar = {
    id?: boolean
    post_id?: boolean
    tag_id?: boolean
  }

  export type post_app_post_tagsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "post_id" | "tag_id", ExtArgs["result"]["post_app_post_tags"]>
  export type post_app_post_tagsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post_app_post?: boolean | PostDefaultArgs<ExtArgs>
    post_app_tag?: boolean | TagsDefaultArgs<ExtArgs>
  }

  export type $post_app_post_tagsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "post_app_post_tags"
    objects: {
      post_app_post: Prisma.$PostPayload<ExtArgs>
      post_app_tag: Prisma.$TagsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      post_id: bigint
      tag_id: bigint
    }, ExtArgs["result"]["post_app_post_tags"]>
    composites: {}
  }

  type post_app_post_tagsGetPayload<S extends boolean | null | undefined | post_app_post_tagsDefaultArgs> = $Result.GetResult<Prisma.$post_app_post_tagsPayload, S>

  type post_app_post_tagsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<post_app_post_tagsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Post_app_post_tagsCountAggregateInputType | true
    }

  export interface post_app_post_tagsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['post_app_post_tags'], meta: { name: 'post_app_post_tags' } }
    /**
     * Find zero or one Post_app_post_tags that matches the filter.
     * @param {post_app_post_tagsFindUniqueArgs} args - Arguments to find a Post_app_post_tags
     * @example
     * // Get one Post_app_post_tags
     * const post_app_post_tags = await prisma.post_app_post_tags.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends post_app_post_tagsFindUniqueArgs>(args: SelectSubset<T, post_app_post_tagsFindUniqueArgs<ExtArgs>>): Prisma__post_app_post_tagsClient<$Result.GetResult<Prisma.$post_app_post_tagsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Post_app_post_tags that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {post_app_post_tagsFindUniqueOrThrowArgs} args - Arguments to find a Post_app_post_tags
     * @example
     * // Get one Post_app_post_tags
     * const post_app_post_tags = await prisma.post_app_post_tags.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends post_app_post_tagsFindUniqueOrThrowArgs>(args: SelectSubset<T, post_app_post_tagsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__post_app_post_tagsClient<$Result.GetResult<Prisma.$post_app_post_tagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_app_post_tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_tagsFindFirstArgs} args - Arguments to find a Post_app_post_tags
     * @example
     * // Get one Post_app_post_tags
     * const post_app_post_tags = await prisma.post_app_post_tags.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends post_app_post_tagsFindFirstArgs>(args?: SelectSubset<T, post_app_post_tagsFindFirstArgs<ExtArgs>>): Prisma__post_app_post_tagsClient<$Result.GetResult<Prisma.$post_app_post_tagsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_app_post_tags that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_tagsFindFirstOrThrowArgs} args - Arguments to find a Post_app_post_tags
     * @example
     * // Get one Post_app_post_tags
     * const post_app_post_tags = await prisma.post_app_post_tags.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends post_app_post_tagsFindFirstOrThrowArgs>(args?: SelectSubset<T, post_app_post_tagsFindFirstOrThrowArgs<ExtArgs>>): Prisma__post_app_post_tagsClient<$Result.GetResult<Prisma.$post_app_post_tagsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Post_app_post_tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_tagsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Post_app_post_tags
     * const post_app_post_tags = await prisma.post_app_post_tags.findMany()
     * 
     * // Get first 10 Post_app_post_tags
     * const post_app_post_tags = await prisma.post_app_post_tags.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const post_app_post_tagsWithIdOnly = await prisma.post_app_post_tags.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends post_app_post_tagsFindManyArgs>(args?: SelectSubset<T, post_app_post_tagsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_app_post_tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Post_app_post_tags.
     * @param {post_app_post_tagsCreateArgs} args - Arguments to create a Post_app_post_tags.
     * @example
     * // Create one Post_app_post_tags
     * const Post_app_post_tags = await prisma.post_app_post_tags.create({
     *   data: {
     *     // ... data to create a Post_app_post_tags
     *   }
     * })
     * 
     */
    create<T extends post_app_post_tagsCreateArgs>(args: SelectSubset<T, post_app_post_tagsCreateArgs<ExtArgs>>): Prisma__post_app_post_tagsClient<$Result.GetResult<Prisma.$post_app_post_tagsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Post_app_post_tags.
     * @param {post_app_post_tagsCreateManyArgs} args - Arguments to create many Post_app_post_tags.
     * @example
     * // Create many Post_app_post_tags
     * const post_app_post_tags = await prisma.post_app_post_tags.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends post_app_post_tagsCreateManyArgs>(args?: SelectSubset<T, post_app_post_tagsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Post_app_post_tags.
     * @param {post_app_post_tagsDeleteArgs} args - Arguments to delete one Post_app_post_tags.
     * @example
     * // Delete one Post_app_post_tags
     * const Post_app_post_tags = await prisma.post_app_post_tags.delete({
     *   where: {
     *     // ... filter to delete one Post_app_post_tags
     *   }
     * })
     * 
     */
    delete<T extends post_app_post_tagsDeleteArgs>(args: SelectSubset<T, post_app_post_tagsDeleteArgs<ExtArgs>>): Prisma__post_app_post_tagsClient<$Result.GetResult<Prisma.$post_app_post_tagsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Post_app_post_tags.
     * @param {post_app_post_tagsUpdateArgs} args - Arguments to update one Post_app_post_tags.
     * @example
     * // Update one Post_app_post_tags
     * const post_app_post_tags = await prisma.post_app_post_tags.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends post_app_post_tagsUpdateArgs>(args: SelectSubset<T, post_app_post_tagsUpdateArgs<ExtArgs>>): Prisma__post_app_post_tagsClient<$Result.GetResult<Prisma.$post_app_post_tagsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Post_app_post_tags.
     * @param {post_app_post_tagsDeleteManyArgs} args - Arguments to filter Post_app_post_tags to delete.
     * @example
     * // Delete a few Post_app_post_tags
     * const { count } = await prisma.post_app_post_tags.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends post_app_post_tagsDeleteManyArgs>(args?: SelectSubset<T, post_app_post_tagsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Post_app_post_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_tagsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Post_app_post_tags
     * const post_app_post_tags = await prisma.post_app_post_tags.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends post_app_post_tagsUpdateManyArgs>(args: SelectSubset<T, post_app_post_tagsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Post_app_post_tags.
     * @param {post_app_post_tagsUpsertArgs} args - Arguments to update or create a Post_app_post_tags.
     * @example
     * // Update or create a Post_app_post_tags
     * const post_app_post_tags = await prisma.post_app_post_tags.upsert({
     *   create: {
     *     // ... data to create a Post_app_post_tags
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post_app_post_tags we want to update
     *   }
     * })
     */
    upsert<T extends post_app_post_tagsUpsertArgs>(args: SelectSubset<T, post_app_post_tagsUpsertArgs<ExtArgs>>): Prisma__post_app_post_tagsClient<$Result.GetResult<Prisma.$post_app_post_tagsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Post_app_post_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_tagsCountArgs} args - Arguments to filter Post_app_post_tags to count.
     * @example
     * // Count the number of Post_app_post_tags
     * const count = await prisma.post_app_post_tags.count({
     *   where: {
     *     // ... the filter for the Post_app_post_tags we want to count
     *   }
     * })
    **/
    count<T extends post_app_post_tagsCountArgs>(
      args?: Subset<T, post_app_post_tagsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Post_app_post_tagsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post_app_post_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Post_app_post_tagsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Post_app_post_tagsAggregateArgs>(args: Subset<T, Post_app_post_tagsAggregateArgs>): Prisma.PrismaPromise<GetPost_app_post_tagsAggregateType<T>>

    /**
     * Group by Post_app_post_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_tagsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends post_app_post_tagsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: post_app_post_tagsGroupByArgs['orderBy'] }
        : { orderBy?: post_app_post_tagsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, post_app_post_tagsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPost_app_post_tagsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the post_app_post_tags model
   */
  readonly fields: post_app_post_tagsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for post_app_post_tags.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__post_app_post_tagsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post_app_post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    post_app_tag<T extends TagsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TagsDefaultArgs<ExtArgs>>): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the post_app_post_tags model
   */
  interface post_app_post_tagsFieldRefs {
    readonly id: FieldRef<"post_app_post_tags", 'BigInt'>
    readonly post_id: FieldRef<"post_app_post_tags", 'BigInt'>
    readonly tag_id: FieldRef<"post_app_post_tags", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * post_app_post_tags findUnique
   */
  export type post_app_post_tagsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_tags
     */
    select?: post_app_post_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_tags
     */
    omit?: post_app_post_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_tagsInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_tags to fetch.
     */
    where: post_app_post_tagsWhereUniqueInput
  }

  /**
   * post_app_post_tags findUniqueOrThrow
   */
  export type post_app_post_tagsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_tags
     */
    select?: post_app_post_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_tags
     */
    omit?: post_app_post_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_tagsInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_tags to fetch.
     */
    where: post_app_post_tagsWhereUniqueInput
  }

  /**
   * post_app_post_tags findFirst
   */
  export type post_app_post_tagsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_tags
     */
    select?: post_app_post_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_tags
     */
    omit?: post_app_post_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_tagsInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_tags to fetch.
     */
    where?: post_app_post_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_tags to fetch.
     */
    orderBy?: post_app_post_tagsOrderByWithRelationInput | post_app_post_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_app_post_tags.
     */
    cursor?: post_app_post_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_app_post_tags.
     */
    distinct?: Post_app_post_tagsScalarFieldEnum | Post_app_post_tagsScalarFieldEnum[]
  }

  /**
   * post_app_post_tags findFirstOrThrow
   */
  export type post_app_post_tagsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_tags
     */
    select?: post_app_post_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_tags
     */
    omit?: post_app_post_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_tagsInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_tags to fetch.
     */
    where?: post_app_post_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_tags to fetch.
     */
    orderBy?: post_app_post_tagsOrderByWithRelationInput | post_app_post_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_app_post_tags.
     */
    cursor?: post_app_post_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_app_post_tags.
     */
    distinct?: Post_app_post_tagsScalarFieldEnum | Post_app_post_tagsScalarFieldEnum[]
  }

  /**
   * post_app_post_tags findMany
   */
  export type post_app_post_tagsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_tags
     */
    select?: post_app_post_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_tags
     */
    omit?: post_app_post_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_tagsInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_tags to fetch.
     */
    where?: post_app_post_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_tags to fetch.
     */
    orderBy?: post_app_post_tagsOrderByWithRelationInput | post_app_post_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing post_app_post_tags.
     */
    cursor?: post_app_post_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_tags.
     */
    skip?: number
    distinct?: Post_app_post_tagsScalarFieldEnum | Post_app_post_tagsScalarFieldEnum[]
  }

  /**
   * post_app_post_tags create
   */
  export type post_app_post_tagsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_tags
     */
    select?: post_app_post_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_tags
     */
    omit?: post_app_post_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_tagsInclude<ExtArgs> | null
    /**
     * The data needed to create a post_app_post_tags.
     */
    data: XOR<post_app_post_tagsCreateInput, post_app_post_tagsUncheckedCreateInput>
  }

  /**
   * post_app_post_tags createMany
   */
  export type post_app_post_tagsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many post_app_post_tags.
     */
    data: post_app_post_tagsCreateManyInput | post_app_post_tagsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * post_app_post_tags update
   */
  export type post_app_post_tagsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_tags
     */
    select?: post_app_post_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_tags
     */
    omit?: post_app_post_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_tagsInclude<ExtArgs> | null
    /**
     * The data needed to update a post_app_post_tags.
     */
    data: XOR<post_app_post_tagsUpdateInput, post_app_post_tagsUncheckedUpdateInput>
    /**
     * Choose, which post_app_post_tags to update.
     */
    where: post_app_post_tagsWhereUniqueInput
  }

  /**
   * post_app_post_tags updateMany
   */
  export type post_app_post_tagsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update post_app_post_tags.
     */
    data: XOR<post_app_post_tagsUpdateManyMutationInput, post_app_post_tagsUncheckedUpdateManyInput>
    /**
     * Filter which post_app_post_tags to update
     */
    where?: post_app_post_tagsWhereInput
    /**
     * Limit how many post_app_post_tags to update.
     */
    limit?: number
  }

  /**
   * post_app_post_tags upsert
   */
  export type post_app_post_tagsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_tags
     */
    select?: post_app_post_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_tags
     */
    omit?: post_app_post_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_tagsInclude<ExtArgs> | null
    /**
     * The filter to search for the post_app_post_tags to update in case it exists.
     */
    where: post_app_post_tagsWhereUniqueInput
    /**
     * In case the post_app_post_tags found by the `where` argument doesn't exist, create a new post_app_post_tags with this data.
     */
    create: XOR<post_app_post_tagsCreateInput, post_app_post_tagsUncheckedCreateInput>
    /**
     * In case the post_app_post_tags was found with the provided `where` argument, update it with this data.
     */
    update: XOR<post_app_post_tagsUpdateInput, post_app_post_tagsUncheckedUpdateInput>
  }

  /**
   * post_app_post_tags delete
   */
  export type post_app_post_tagsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_tags
     */
    select?: post_app_post_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_tags
     */
    omit?: post_app_post_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_tagsInclude<ExtArgs> | null
    /**
     * Filter which post_app_post_tags to delete.
     */
    where: post_app_post_tagsWhereUniqueInput
  }

  /**
   * post_app_post_tags deleteMany
   */
  export type post_app_post_tagsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_app_post_tags to delete
     */
    where?: post_app_post_tagsWhereInput
    /**
     * Limit how many post_app_post_tags to delete.
     */
    limit?: number
  }

  /**
   * post_app_post_tags without action
   */
  export type post_app_post_tagsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_tags
     */
    select?: post_app_post_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_tags
     */
    omit?: post_app_post_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_tagsInclude<ExtArgs> | null
  }


  /**
   * Model user_app_verificationcode
   */

  export type AggregateUser_app_verificationcode = {
    _count: User_app_verificationcodeCountAggregateOutputType | null
    _avg: User_app_verificationcodeAvgAggregateOutputType | null
    _sum: User_app_verificationcodeSumAggregateOutputType | null
    _min: User_app_verificationcodeMinAggregateOutputType | null
    _max: User_app_verificationcodeMaxAggregateOutputType | null
  }

  export type User_app_verificationcodeAvgAggregateOutputType = {
    id: number | null
  }

  export type User_app_verificationcodeSumAggregateOutputType = {
    id: bigint | null
  }

  export type User_app_verificationcodeMinAggregateOutputType = {
    id: bigint | null
    username: string | null
    code: string | null
    created_at: Date | null
  }

  export type User_app_verificationcodeMaxAggregateOutputType = {
    id: bigint | null
    username: string | null
    code: string | null
    created_at: Date | null
  }

  export type User_app_verificationcodeCountAggregateOutputType = {
    id: number
    username: number
    code: number
    created_at: number
    _all: number
  }


  export type User_app_verificationcodeAvgAggregateInputType = {
    id?: true
  }

  export type User_app_verificationcodeSumAggregateInputType = {
    id?: true
  }

  export type User_app_verificationcodeMinAggregateInputType = {
    id?: true
    username?: true
    code?: true
    created_at?: true
  }

  export type User_app_verificationcodeMaxAggregateInputType = {
    id?: true
    username?: true
    code?: true
    created_at?: true
  }

  export type User_app_verificationcodeCountAggregateInputType = {
    id?: true
    username?: true
    code?: true
    created_at?: true
    _all?: true
  }

  export type User_app_verificationcodeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_app_verificationcode to aggregate.
     */
    where?: user_app_verificationcodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_app_verificationcodes to fetch.
     */
    orderBy?: user_app_verificationcodeOrderByWithRelationInput | user_app_verificationcodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_app_verificationcodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_app_verificationcodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_app_verificationcodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_app_verificationcodes
    **/
    _count?: true | User_app_verificationcodeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_app_verificationcodeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_app_verificationcodeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_app_verificationcodeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_app_verificationcodeMaxAggregateInputType
  }

  export type GetUser_app_verificationcodeAggregateType<T extends User_app_verificationcodeAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_app_verificationcode]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_app_verificationcode[P]>
      : GetScalarType<T[P], AggregateUser_app_verificationcode[P]>
  }




  export type user_app_verificationcodeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_app_verificationcodeWhereInput
    orderBy?: user_app_verificationcodeOrderByWithAggregationInput | user_app_verificationcodeOrderByWithAggregationInput[]
    by: User_app_verificationcodeScalarFieldEnum[] | User_app_verificationcodeScalarFieldEnum
    having?: user_app_verificationcodeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_app_verificationcodeCountAggregateInputType | true
    _avg?: User_app_verificationcodeAvgAggregateInputType
    _sum?: User_app_verificationcodeSumAggregateInputType
    _min?: User_app_verificationcodeMinAggregateInputType
    _max?: User_app_verificationcodeMaxAggregateInputType
  }

  export type User_app_verificationcodeGroupByOutputType = {
    id: bigint
    username: string
    code: string
    created_at: Date
    _count: User_app_verificationcodeCountAggregateOutputType | null
    _avg: User_app_verificationcodeAvgAggregateOutputType | null
    _sum: User_app_verificationcodeSumAggregateOutputType | null
    _min: User_app_verificationcodeMinAggregateOutputType | null
    _max: User_app_verificationcodeMaxAggregateOutputType | null
  }

  type GetUser_app_verificationcodeGroupByPayload<T extends user_app_verificationcodeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_app_verificationcodeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_app_verificationcodeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_app_verificationcodeGroupByOutputType[P]>
            : GetScalarType<T[P], User_app_verificationcodeGroupByOutputType[P]>
        }
      >
    >


  export type user_app_verificationcodeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    code?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["user_app_verificationcode"]>



  export type user_app_verificationcodeSelectScalar = {
    id?: boolean
    username?: boolean
    code?: boolean
    created_at?: boolean
  }

  export type user_app_verificationcodeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "code" | "created_at", ExtArgs["result"]["user_app_verificationcode"]>

  export type $user_app_verificationcodePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_app_verificationcode"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      username: string
      code: string
      created_at: Date
    }, ExtArgs["result"]["user_app_verificationcode"]>
    composites: {}
  }

  type user_app_verificationcodeGetPayload<S extends boolean | null | undefined | user_app_verificationcodeDefaultArgs> = $Result.GetResult<Prisma.$user_app_verificationcodePayload, S>

  type user_app_verificationcodeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_app_verificationcodeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_app_verificationcodeCountAggregateInputType | true
    }

  export interface user_app_verificationcodeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_app_verificationcode'], meta: { name: 'user_app_verificationcode' } }
    /**
     * Find zero or one User_app_verificationcode that matches the filter.
     * @param {user_app_verificationcodeFindUniqueArgs} args - Arguments to find a User_app_verificationcode
     * @example
     * // Get one User_app_verificationcode
     * const user_app_verificationcode = await prisma.user_app_verificationcode.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_app_verificationcodeFindUniqueArgs>(args: SelectSubset<T, user_app_verificationcodeFindUniqueArgs<ExtArgs>>): Prisma__user_app_verificationcodeClient<$Result.GetResult<Prisma.$user_app_verificationcodePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_app_verificationcode that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_app_verificationcodeFindUniqueOrThrowArgs} args - Arguments to find a User_app_verificationcode
     * @example
     * // Get one User_app_verificationcode
     * const user_app_verificationcode = await prisma.user_app_verificationcode.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_app_verificationcodeFindUniqueOrThrowArgs>(args: SelectSubset<T, user_app_verificationcodeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_app_verificationcodeClient<$Result.GetResult<Prisma.$user_app_verificationcodePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_app_verificationcode that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_app_verificationcodeFindFirstArgs} args - Arguments to find a User_app_verificationcode
     * @example
     * // Get one User_app_verificationcode
     * const user_app_verificationcode = await prisma.user_app_verificationcode.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_app_verificationcodeFindFirstArgs>(args?: SelectSubset<T, user_app_verificationcodeFindFirstArgs<ExtArgs>>): Prisma__user_app_verificationcodeClient<$Result.GetResult<Prisma.$user_app_verificationcodePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_app_verificationcode that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_app_verificationcodeFindFirstOrThrowArgs} args - Arguments to find a User_app_verificationcode
     * @example
     * // Get one User_app_verificationcode
     * const user_app_verificationcode = await prisma.user_app_verificationcode.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_app_verificationcodeFindFirstOrThrowArgs>(args?: SelectSubset<T, user_app_verificationcodeFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_app_verificationcodeClient<$Result.GetResult<Prisma.$user_app_verificationcodePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_app_verificationcodes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_app_verificationcodeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_app_verificationcodes
     * const user_app_verificationcodes = await prisma.user_app_verificationcode.findMany()
     * 
     * // Get first 10 User_app_verificationcodes
     * const user_app_verificationcodes = await prisma.user_app_verificationcode.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_app_verificationcodeWithIdOnly = await prisma.user_app_verificationcode.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_app_verificationcodeFindManyArgs>(args?: SelectSubset<T, user_app_verificationcodeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_app_verificationcodePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_app_verificationcode.
     * @param {user_app_verificationcodeCreateArgs} args - Arguments to create a User_app_verificationcode.
     * @example
     * // Create one User_app_verificationcode
     * const User_app_verificationcode = await prisma.user_app_verificationcode.create({
     *   data: {
     *     // ... data to create a User_app_verificationcode
     *   }
     * })
     * 
     */
    create<T extends user_app_verificationcodeCreateArgs>(args: SelectSubset<T, user_app_verificationcodeCreateArgs<ExtArgs>>): Prisma__user_app_verificationcodeClient<$Result.GetResult<Prisma.$user_app_verificationcodePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_app_verificationcodes.
     * @param {user_app_verificationcodeCreateManyArgs} args - Arguments to create many User_app_verificationcodes.
     * @example
     * // Create many User_app_verificationcodes
     * const user_app_verificationcode = await prisma.user_app_verificationcode.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_app_verificationcodeCreateManyArgs>(args?: SelectSubset<T, user_app_verificationcodeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User_app_verificationcode.
     * @param {user_app_verificationcodeDeleteArgs} args - Arguments to delete one User_app_verificationcode.
     * @example
     * // Delete one User_app_verificationcode
     * const User_app_verificationcode = await prisma.user_app_verificationcode.delete({
     *   where: {
     *     // ... filter to delete one User_app_verificationcode
     *   }
     * })
     * 
     */
    delete<T extends user_app_verificationcodeDeleteArgs>(args: SelectSubset<T, user_app_verificationcodeDeleteArgs<ExtArgs>>): Prisma__user_app_verificationcodeClient<$Result.GetResult<Prisma.$user_app_verificationcodePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_app_verificationcode.
     * @param {user_app_verificationcodeUpdateArgs} args - Arguments to update one User_app_verificationcode.
     * @example
     * // Update one User_app_verificationcode
     * const user_app_verificationcode = await prisma.user_app_verificationcode.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_app_verificationcodeUpdateArgs>(args: SelectSubset<T, user_app_verificationcodeUpdateArgs<ExtArgs>>): Prisma__user_app_verificationcodeClient<$Result.GetResult<Prisma.$user_app_verificationcodePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_app_verificationcodes.
     * @param {user_app_verificationcodeDeleteManyArgs} args - Arguments to filter User_app_verificationcodes to delete.
     * @example
     * // Delete a few User_app_verificationcodes
     * const { count } = await prisma.user_app_verificationcode.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_app_verificationcodeDeleteManyArgs>(args?: SelectSubset<T, user_app_verificationcodeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_app_verificationcodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_app_verificationcodeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_app_verificationcodes
     * const user_app_verificationcode = await prisma.user_app_verificationcode.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_app_verificationcodeUpdateManyArgs>(args: SelectSubset<T, user_app_verificationcodeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_app_verificationcode.
     * @param {user_app_verificationcodeUpsertArgs} args - Arguments to update or create a User_app_verificationcode.
     * @example
     * // Update or create a User_app_verificationcode
     * const user_app_verificationcode = await prisma.user_app_verificationcode.upsert({
     *   create: {
     *     // ... data to create a User_app_verificationcode
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_app_verificationcode we want to update
     *   }
     * })
     */
    upsert<T extends user_app_verificationcodeUpsertArgs>(args: SelectSubset<T, user_app_verificationcodeUpsertArgs<ExtArgs>>): Prisma__user_app_verificationcodeClient<$Result.GetResult<Prisma.$user_app_verificationcodePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_app_verificationcodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_app_verificationcodeCountArgs} args - Arguments to filter User_app_verificationcodes to count.
     * @example
     * // Count the number of User_app_verificationcodes
     * const count = await prisma.user_app_verificationcode.count({
     *   where: {
     *     // ... the filter for the User_app_verificationcodes we want to count
     *   }
     * })
    **/
    count<T extends user_app_verificationcodeCountArgs>(
      args?: Subset<T, user_app_verificationcodeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_app_verificationcodeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_app_verificationcode.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_app_verificationcodeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_app_verificationcodeAggregateArgs>(args: Subset<T, User_app_verificationcodeAggregateArgs>): Prisma.PrismaPromise<GetUser_app_verificationcodeAggregateType<T>>

    /**
     * Group by User_app_verificationcode.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_app_verificationcodeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_app_verificationcodeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_app_verificationcodeGroupByArgs['orderBy'] }
        : { orderBy?: user_app_verificationcodeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_app_verificationcodeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_app_verificationcodeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_app_verificationcode model
   */
  readonly fields: user_app_verificationcodeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_app_verificationcode.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_app_verificationcodeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_app_verificationcode model
   */
  interface user_app_verificationcodeFieldRefs {
    readonly id: FieldRef<"user_app_verificationcode", 'BigInt'>
    readonly username: FieldRef<"user_app_verificationcode", 'String'>
    readonly code: FieldRef<"user_app_verificationcode", 'String'>
    readonly created_at: FieldRef<"user_app_verificationcode", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_app_verificationcode findUnique
   */
  export type user_app_verificationcodeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_app_verificationcode
     */
    select?: user_app_verificationcodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_app_verificationcode
     */
    omit?: user_app_verificationcodeOmit<ExtArgs> | null
    /**
     * Filter, which user_app_verificationcode to fetch.
     */
    where: user_app_verificationcodeWhereUniqueInput
  }

  /**
   * user_app_verificationcode findUniqueOrThrow
   */
  export type user_app_verificationcodeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_app_verificationcode
     */
    select?: user_app_verificationcodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_app_verificationcode
     */
    omit?: user_app_verificationcodeOmit<ExtArgs> | null
    /**
     * Filter, which user_app_verificationcode to fetch.
     */
    where: user_app_verificationcodeWhereUniqueInput
  }

  /**
   * user_app_verificationcode findFirst
   */
  export type user_app_verificationcodeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_app_verificationcode
     */
    select?: user_app_verificationcodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_app_verificationcode
     */
    omit?: user_app_verificationcodeOmit<ExtArgs> | null
    /**
     * Filter, which user_app_verificationcode to fetch.
     */
    where?: user_app_verificationcodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_app_verificationcodes to fetch.
     */
    orderBy?: user_app_verificationcodeOrderByWithRelationInput | user_app_verificationcodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_app_verificationcodes.
     */
    cursor?: user_app_verificationcodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_app_verificationcodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_app_verificationcodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_app_verificationcodes.
     */
    distinct?: User_app_verificationcodeScalarFieldEnum | User_app_verificationcodeScalarFieldEnum[]
  }

  /**
   * user_app_verificationcode findFirstOrThrow
   */
  export type user_app_verificationcodeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_app_verificationcode
     */
    select?: user_app_verificationcodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_app_verificationcode
     */
    omit?: user_app_verificationcodeOmit<ExtArgs> | null
    /**
     * Filter, which user_app_verificationcode to fetch.
     */
    where?: user_app_verificationcodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_app_verificationcodes to fetch.
     */
    orderBy?: user_app_verificationcodeOrderByWithRelationInput | user_app_verificationcodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_app_verificationcodes.
     */
    cursor?: user_app_verificationcodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_app_verificationcodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_app_verificationcodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_app_verificationcodes.
     */
    distinct?: User_app_verificationcodeScalarFieldEnum | User_app_verificationcodeScalarFieldEnum[]
  }

  /**
   * user_app_verificationcode findMany
   */
  export type user_app_verificationcodeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_app_verificationcode
     */
    select?: user_app_verificationcodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_app_verificationcode
     */
    omit?: user_app_verificationcodeOmit<ExtArgs> | null
    /**
     * Filter, which user_app_verificationcodes to fetch.
     */
    where?: user_app_verificationcodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_app_verificationcodes to fetch.
     */
    orderBy?: user_app_verificationcodeOrderByWithRelationInput | user_app_verificationcodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_app_verificationcodes.
     */
    cursor?: user_app_verificationcodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_app_verificationcodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_app_verificationcodes.
     */
    skip?: number
    distinct?: User_app_verificationcodeScalarFieldEnum | User_app_verificationcodeScalarFieldEnum[]
  }

  /**
   * user_app_verificationcode create
   */
  export type user_app_verificationcodeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_app_verificationcode
     */
    select?: user_app_verificationcodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_app_verificationcode
     */
    omit?: user_app_verificationcodeOmit<ExtArgs> | null
    /**
     * The data needed to create a user_app_verificationcode.
     */
    data: XOR<user_app_verificationcodeCreateInput, user_app_verificationcodeUncheckedCreateInput>
  }

  /**
   * user_app_verificationcode createMany
   */
  export type user_app_verificationcodeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_app_verificationcodes.
     */
    data: user_app_verificationcodeCreateManyInput | user_app_verificationcodeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_app_verificationcode update
   */
  export type user_app_verificationcodeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_app_verificationcode
     */
    select?: user_app_verificationcodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_app_verificationcode
     */
    omit?: user_app_verificationcodeOmit<ExtArgs> | null
    /**
     * The data needed to update a user_app_verificationcode.
     */
    data: XOR<user_app_verificationcodeUpdateInput, user_app_verificationcodeUncheckedUpdateInput>
    /**
     * Choose, which user_app_verificationcode to update.
     */
    where: user_app_verificationcodeWhereUniqueInput
  }

  /**
   * user_app_verificationcode updateMany
   */
  export type user_app_verificationcodeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_app_verificationcodes.
     */
    data: XOR<user_app_verificationcodeUpdateManyMutationInput, user_app_verificationcodeUncheckedUpdateManyInput>
    /**
     * Filter which user_app_verificationcodes to update
     */
    where?: user_app_verificationcodeWhereInput
    /**
     * Limit how many user_app_verificationcodes to update.
     */
    limit?: number
  }

  /**
   * user_app_verificationcode upsert
   */
  export type user_app_verificationcodeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_app_verificationcode
     */
    select?: user_app_verificationcodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_app_verificationcode
     */
    omit?: user_app_verificationcodeOmit<ExtArgs> | null
    /**
     * The filter to search for the user_app_verificationcode to update in case it exists.
     */
    where: user_app_verificationcodeWhereUniqueInput
    /**
     * In case the user_app_verificationcode found by the `where` argument doesn't exist, create a new user_app_verificationcode with this data.
     */
    create: XOR<user_app_verificationcodeCreateInput, user_app_verificationcodeUncheckedCreateInput>
    /**
     * In case the user_app_verificationcode was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_app_verificationcodeUpdateInput, user_app_verificationcodeUncheckedUpdateInput>
  }

  /**
   * user_app_verificationcode delete
   */
  export type user_app_verificationcodeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_app_verificationcode
     */
    select?: user_app_verificationcodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_app_verificationcode
     */
    omit?: user_app_verificationcodeOmit<ExtArgs> | null
    /**
     * Filter which user_app_verificationcode to delete.
     */
    where: user_app_verificationcodeWhereUniqueInput
  }

  /**
   * user_app_verificationcode deleteMany
   */
  export type user_app_verificationcodeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_app_verificationcodes to delete
     */
    where?: user_app_verificationcodeWhereInput
    /**
     * Limit how many user_app_verificationcodes to delete.
     */
    limit?: number
  }

  /**
   * user_app_verificationcode without action
   */
  export type user_app_verificationcodeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_app_verificationcode
     */
    select?: user_app_verificationcodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_app_verificationcode
     */
    omit?: user_app_verificationcodeOmit<ExtArgs> | null
  }


  /**
   * Model Album
   */

  export type AggregateAlbum = {
    _count: AlbumCountAggregateOutputType | null
    _avg: AlbumAvgAggregateOutputType | null
    _sum: AlbumSumAggregateOutputType | null
    _min: AlbumMinAggregateOutputType | null
    _max: AlbumMaxAggregateOutputType | null
  }

  export type AlbumAvgAggregateOutputType = {
    id: number | null
    topic_id: number | null
    author_id: number | null
  }

  export type AlbumSumAggregateOutputType = {
    id: bigint | null
    topic_id: bigint | null
    author_id: bigint | null
  }

  export type AlbumMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    created_at: Date | null
    preview_image: string | null
    shown: boolean | null
    topic_id: bigint | null
    author_id: bigint | null
  }

  export type AlbumMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    created_at: Date | null
    preview_image: string | null
    shown: boolean | null
    topic_id: bigint | null
    author_id: bigint | null
  }

  export type AlbumCountAggregateOutputType = {
    id: number
    name: number
    created_at: number
    preview_image: number
    shown: number
    topic_id: number
    author_id: number
    _all: number
  }


  export type AlbumAvgAggregateInputType = {
    id?: true
    topic_id?: true
    author_id?: true
  }

  export type AlbumSumAggregateInputType = {
    id?: true
    topic_id?: true
    author_id?: true
  }

  export type AlbumMinAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    preview_image?: true
    shown?: true
    topic_id?: true
    author_id?: true
  }

  export type AlbumMaxAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    preview_image?: true
    shown?: true
    topic_id?: true
    author_id?: true
  }

  export type AlbumCountAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    preview_image?: true
    shown?: true
    topic_id?: true
    author_id?: true
    _all?: true
  }

  export type AlbumAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Album to aggregate.
     */
    where?: AlbumWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Albums to fetch.
     */
    orderBy?: AlbumOrderByWithRelationInput | AlbumOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AlbumWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Albums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Albums.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Albums
    **/
    _count?: true | AlbumCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AlbumAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AlbumSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlbumMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlbumMaxAggregateInputType
  }

  export type GetAlbumAggregateType<T extends AlbumAggregateArgs> = {
        [P in keyof T & keyof AggregateAlbum]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlbum[P]>
      : GetScalarType<T[P], AggregateAlbum[P]>
  }




  export type AlbumGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlbumWhereInput
    orderBy?: AlbumOrderByWithAggregationInput | AlbumOrderByWithAggregationInput[]
    by: AlbumScalarFieldEnum[] | AlbumScalarFieldEnum
    having?: AlbumScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlbumCountAggregateInputType | true
    _avg?: AlbumAvgAggregateInputType
    _sum?: AlbumSumAggregateInputType
    _min?: AlbumMinAggregateInputType
    _max?: AlbumMaxAggregateInputType
  }

  export type AlbumGroupByOutputType = {
    id: bigint
    name: string
    created_at: Date
    preview_image: string | null
    shown: boolean
    topic_id: bigint
    author_id: bigint
    _count: AlbumCountAggregateOutputType | null
    _avg: AlbumAvgAggregateOutputType | null
    _sum: AlbumSumAggregateOutputType | null
    _min: AlbumMinAggregateOutputType | null
    _max: AlbumMaxAggregateOutputType | null
  }

  type GetAlbumGroupByPayload<T extends AlbumGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlbumGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlbumGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlbumGroupByOutputType[P]>
            : GetScalarType<T[P], AlbumGroupByOutputType[P]>
        }
      >
    >


  export type AlbumSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    created_at?: boolean
    preview_image?: boolean
    shown?: boolean
    topic_id?: boolean
    author_id?: boolean
    author?: boolean | ProfileDefaultArgs<ExtArgs>
    post_app_tag?: boolean | TagsDefaultArgs<ExtArgs>
    images?: boolean | Album$imagesArgs<ExtArgs>
    _count?: boolean | AlbumCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["album"]>



  export type AlbumSelectScalar = {
    id?: boolean
    name?: boolean
    created_at?: boolean
    preview_image?: boolean
    shown?: boolean
    topic_id?: boolean
    author_id?: boolean
  }

  export type AlbumOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "created_at" | "preview_image" | "shown" | "topic_id" | "author_id", ExtArgs["result"]["album"]>
  export type AlbumInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | ProfileDefaultArgs<ExtArgs>
    post_app_tag?: boolean | TagsDefaultArgs<ExtArgs>
    images?: boolean | Album$imagesArgs<ExtArgs>
    _count?: boolean | AlbumCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $AlbumPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Album"
    objects: {
      author: Prisma.$ProfilePayload<ExtArgs>
      post_app_tag: Prisma.$TagsPayload<ExtArgs>
      images: Prisma.$post_app_album_imagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      created_at: Date
      preview_image: string | null
      shown: boolean
      topic_id: bigint
      author_id: bigint
    }, ExtArgs["result"]["album"]>
    composites: {}
  }

  type AlbumGetPayload<S extends boolean | null | undefined | AlbumDefaultArgs> = $Result.GetResult<Prisma.$AlbumPayload, S>

  type AlbumCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AlbumFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AlbumCountAggregateInputType | true
    }

  export interface AlbumDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Album'], meta: { name: 'Album' } }
    /**
     * Find zero or one Album that matches the filter.
     * @param {AlbumFindUniqueArgs} args - Arguments to find a Album
     * @example
     * // Get one Album
     * const album = await prisma.album.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AlbumFindUniqueArgs>(args: SelectSubset<T, AlbumFindUniqueArgs<ExtArgs>>): Prisma__AlbumClient<$Result.GetResult<Prisma.$AlbumPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Album that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AlbumFindUniqueOrThrowArgs} args - Arguments to find a Album
     * @example
     * // Get one Album
     * const album = await prisma.album.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AlbumFindUniqueOrThrowArgs>(args: SelectSubset<T, AlbumFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AlbumClient<$Result.GetResult<Prisma.$AlbumPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Album that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlbumFindFirstArgs} args - Arguments to find a Album
     * @example
     * // Get one Album
     * const album = await prisma.album.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AlbumFindFirstArgs>(args?: SelectSubset<T, AlbumFindFirstArgs<ExtArgs>>): Prisma__AlbumClient<$Result.GetResult<Prisma.$AlbumPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Album that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlbumFindFirstOrThrowArgs} args - Arguments to find a Album
     * @example
     * // Get one Album
     * const album = await prisma.album.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AlbumFindFirstOrThrowArgs>(args?: SelectSubset<T, AlbumFindFirstOrThrowArgs<ExtArgs>>): Prisma__AlbumClient<$Result.GetResult<Prisma.$AlbumPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Albums that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlbumFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Albums
     * const albums = await prisma.album.findMany()
     * 
     * // Get first 10 Albums
     * const albums = await prisma.album.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const albumWithIdOnly = await prisma.album.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AlbumFindManyArgs>(args?: SelectSubset<T, AlbumFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlbumPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Album.
     * @param {AlbumCreateArgs} args - Arguments to create a Album.
     * @example
     * // Create one Album
     * const Album = await prisma.album.create({
     *   data: {
     *     // ... data to create a Album
     *   }
     * })
     * 
     */
    create<T extends AlbumCreateArgs>(args: SelectSubset<T, AlbumCreateArgs<ExtArgs>>): Prisma__AlbumClient<$Result.GetResult<Prisma.$AlbumPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Albums.
     * @param {AlbumCreateManyArgs} args - Arguments to create many Albums.
     * @example
     * // Create many Albums
     * const album = await prisma.album.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AlbumCreateManyArgs>(args?: SelectSubset<T, AlbumCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Album.
     * @param {AlbumDeleteArgs} args - Arguments to delete one Album.
     * @example
     * // Delete one Album
     * const Album = await prisma.album.delete({
     *   where: {
     *     // ... filter to delete one Album
     *   }
     * })
     * 
     */
    delete<T extends AlbumDeleteArgs>(args: SelectSubset<T, AlbumDeleteArgs<ExtArgs>>): Prisma__AlbumClient<$Result.GetResult<Prisma.$AlbumPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Album.
     * @param {AlbumUpdateArgs} args - Arguments to update one Album.
     * @example
     * // Update one Album
     * const album = await prisma.album.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AlbumUpdateArgs>(args: SelectSubset<T, AlbumUpdateArgs<ExtArgs>>): Prisma__AlbumClient<$Result.GetResult<Prisma.$AlbumPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Albums.
     * @param {AlbumDeleteManyArgs} args - Arguments to filter Albums to delete.
     * @example
     * // Delete a few Albums
     * const { count } = await prisma.album.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AlbumDeleteManyArgs>(args?: SelectSubset<T, AlbumDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Albums.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlbumUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Albums
     * const album = await prisma.album.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AlbumUpdateManyArgs>(args: SelectSubset<T, AlbumUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Album.
     * @param {AlbumUpsertArgs} args - Arguments to update or create a Album.
     * @example
     * // Update or create a Album
     * const album = await prisma.album.upsert({
     *   create: {
     *     // ... data to create a Album
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Album we want to update
     *   }
     * })
     */
    upsert<T extends AlbumUpsertArgs>(args: SelectSubset<T, AlbumUpsertArgs<ExtArgs>>): Prisma__AlbumClient<$Result.GetResult<Prisma.$AlbumPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Albums.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlbumCountArgs} args - Arguments to filter Albums to count.
     * @example
     * // Count the number of Albums
     * const count = await prisma.album.count({
     *   where: {
     *     // ... the filter for the Albums we want to count
     *   }
     * })
    **/
    count<T extends AlbumCountArgs>(
      args?: Subset<T, AlbumCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlbumCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Album.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlbumAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlbumAggregateArgs>(args: Subset<T, AlbumAggregateArgs>): Prisma.PrismaPromise<GetAlbumAggregateType<T>>

    /**
     * Group by Album.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlbumGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AlbumGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AlbumGroupByArgs['orderBy'] }
        : { orderBy?: AlbumGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AlbumGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlbumGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Album model
   */
  readonly fields: AlbumFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Album.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AlbumClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    post_app_tag<T extends TagsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TagsDefaultArgs<ExtArgs>>): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    images<T extends Album$imagesArgs<ExtArgs> = {}>(args?: Subset<T, Album$imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_app_album_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Album model
   */
  interface AlbumFieldRefs {
    readonly id: FieldRef<"Album", 'BigInt'>
    readonly name: FieldRef<"Album", 'String'>
    readonly created_at: FieldRef<"Album", 'DateTime'>
    readonly preview_image: FieldRef<"Album", 'String'>
    readonly shown: FieldRef<"Album", 'Boolean'>
    readonly topic_id: FieldRef<"Album", 'BigInt'>
    readonly author_id: FieldRef<"Album", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * Album findUnique
   */
  export type AlbumFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Album
     */
    select?: AlbumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Album
     */
    omit?: AlbumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlbumInclude<ExtArgs> | null
    /**
     * Filter, which Album to fetch.
     */
    where: AlbumWhereUniqueInput
  }

  /**
   * Album findUniqueOrThrow
   */
  export type AlbumFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Album
     */
    select?: AlbumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Album
     */
    omit?: AlbumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlbumInclude<ExtArgs> | null
    /**
     * Filter, which Album to fetch.
     */
    where: AlbumWhereUniqueInput
  }

  /**
   * Album findFirst
   */
  export type AlbumFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Album
     */
    select?: AlbumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Album
     */
    omit?: AlbumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlbumInclude<ExtArgs> | null
    /**
     * Filter, which Album to fetch.
     */
    where?: AlbumWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Albums to fetch.
     */
    orderBy?: AlbumOrderByWithRelationInput | AlbumOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Albums.
     */
    cursor?: AlbumWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Albums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Albums.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Albums.
     */
    distinct?: AlbumScalarFieldEnum | AlbumScalarFieldEnum[]
  }

  /**
   * Album findFirstOrThrow
   */
  export type AlbumFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Album
     */
    select?: AlbumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Album
     */
    omit?: AlbumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlbumInclude<ExtArgs> | null
    /**
     * Filter, which Album to fetch.
     */
    where?: AlbumWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Albums to fetch.
     */
    orderBy?: AlbumOrderByWithRelationInput | AlbumOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Albums.
     */
    cursor?: AlbumWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Albums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Albums.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Albums.
     */
    distinct?: AlbumScalarFieldEnum | AlbumScalarFieldEnum[]
  }

  /**
   * Album findMany
   */
  export type AlbumFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Album
     */
    select?: AlbumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Album
     */
    omit?: AlbumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlbumInclude<ExtArgs> | null
    /**
     * Filter, which Albums to fetch.
     */
    where?: AlbumWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Albums to fetch.
     */
    orderBy?: AlbumOrderByWithRelationInput | AlbumOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Albums.
     */
    cursor?: AlbumWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Albums from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Albums.
     */
    skip?: number
    distinct?: AlbumScalarFieldEnum | AlbumScalarFieldEnum[]
  }

  /**
   * Album create
   */
  export type AlbumCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Album
     */
    select?: AlbumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Album
     */
    omit?: AlbumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlbumInclude<ExtArgs> | null
    /**
     * The data needed to create a Album.
     */
    data: XOR<AlbumCreateInput, AlbumUncheckedCreateInput>
  }

  /**
   * Album createMany
   */
  export type AlbumCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Albums.
     */
    data: AlbumCreateManyInput | AlbumCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Album update
   */
  export type AlbumUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Album
     */
    select?: AlbumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Album
     */
    omit?: AlbumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlbumInclude<ExtArgs> | null
    /**
     * The data needed to update a Album.
     */
    data: XOR<AlbumUpdateInput, AlbumUncheckedUpdateInput>
    /**
     * Choose, which Album to update.
     */
    where: AlbumWhereUniqueInput
  }

  /**
   * Album updateMany
   */
  export type AlbumUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Albums.
     */
    data: XOR<AlbumUpdateManyMutationInput, AlbumUncheckedUpdateManyInput>
    /**
     * Filter which Albums to update
     */
    where?: AlbumWhereInput
    /**
     * Limit how many Albums to update.
     */
    limit?: number
  }

  /**
   * Album upsert
   */
  export type AlbumUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Album
     */
    select?: AlbumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Album
     */
    omit?: AlbumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlbumInclude<ExtArgs> | null
    /**
     * The filter to search for the Album to update in case it exists.
     */
    where: AlbumWhereUniqueInput
    /**
     * In case the Album found by the `where` argument doesn't exist, create a new Album with this data.
     */
    create: XOR<AlbumCreateInput, AlbumUncheckedCreateInput>
    /**
     * In case the Album was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AlbumUpdateInput, AlbumUncheckedUpdateInput>
  }

  /**
   * Album delete
   */
  export type AlbumDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Album
     */
    select?: AlbumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Album
     */
    omit?: AlbumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlbumInclude<ExtArgs> | null
    /**
     * Filter which Album to delete.
     */
    where: AlbumWhereUniqueInput
  }

  /**
   * Album deleteMany
   */
  export type AlbumDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Albums to delete
     */
    where?: AlbumWhereInput
    /**
     * Limit how many Albums to delete.
     */
    limit?: number
  }

  /**
   * Album.images
   */
  export type Album$imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_album_images
     */
    select?: post_app_album_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_album_images
     */
    omit?: post_app_album_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_album_imagesInclude<ExtArgs> | null
    where?: post_app_album_imagesWhereInput
    orderBy?: post_app_album_imagesOrderByWithRelationInput | post_app_album_imagesOrderByWithRelationInput[]
    cursor?: post_app_album_imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_app_album_imagesScalarFieldEnum | Post_app_album_imagesScalarFieldEnum[]
  }

  /**
   * Album without action
   */
  export type AlbumDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Album
     */
    select?: AlbumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Album
     */
    omit?: AlbumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlbumInclude<ExtArgs> | null
  }


  /**
   * Model post_app_album_images
   */

  export type AggregatePost_app_album_images = {
    _count: Post_app_album_imagesCountAggregateOutputType | null
    _avg: Post_app_album_imagesAvgAggregateOutputType | null
    _sum: Post_app_album_imagesSumAggregateOutputType | null
    _min: Post_app_album_imagesMinAggregateOutputType | null
    _max: Post_app_album_imagesMaxAggregateOutputType | null
  }

  export type Post_app_album_imagesAvgAggregateOutputType = {
    id: number | null
    album_id: number | null
    image_id: number | null
  }

  export type Post_app_album_imagesSumAggregateOutputType = {
    id: bigint | null
    album_id: bigint | null
    image_id: bigint | null
  }

  export type Post_app_album_imagesMinAggregateOutputType = {
    id: bigint | null
    album_id: bigint | null
    image_id: bigint | null
  }

  export type Post_app_album_imagesMaxAggregateOutputType = {
    id: bigint | null
    album_id: bigint | null
    image_id: bigint | null
  }

  export type Post_app_album_imagesCountAggregateOutputType = {
    id: number
    album_id: number
    image_id: number
    _all: number
  }


  export type Post_app_album_imagesAvgAggregateInputType = {
    id?: true
    album_id?: true
    image_id?: true
  }

  export type Post_app_album_imagesSumAggregateInputType = {
    id?: true
    album_id?: true
    image_id?: true
  }

  export type Post_app_album_imagesMinAggregateInputType = {
    id?: true
    album_id?: true
    image_id?: true
  }

  export type Post_app_album_imagesMaxAggregateInputType = {
    id?: true
    album_id?: true
    image_id?: true
  }

  export type Post_app_album_imagesCountAggregateInputType = {
    id?: true
    album_id?: true
    image_id?: true
    _all?: true
  }

  export type Post_app_album_imagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_app_album_images to aggregate.
     */
    where?: post_app_album_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_album_images to fetch.
     */
    orderBy?: post_app_album_imagesOrderByWithRelationInput | post_app_album_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: post_app_album_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_album_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_album_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned post_app_album_images
    **/
    _count?: true | Post_app_album_imagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Post_app_album_imagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Post_app_album_imagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Post_app_album_imagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Post_app_album_imagesMaxAggregateInputType
  }

  export type GetPost_app_album_imagesAggregateType<T extends Post_app_album_imagesAggregateArgs> = {
        [P in keyof T & keyof AggregatePost_app_album_images]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost_app_album_images[P]>
      : GetScalarType<T[P], AggregatePost_app_album_images[P]>
  }




  export type post_app_album_imagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_app_album_imagesWhereInput
    orderBy?: post_app_album_imagesOrderByWithAggregationInput | post_app_album_imagesOrderByWithAggregationInput[]
    by: Post_app_album_imagesScalarFieldEnum[] | Post_app_album_imagesScalarFieldEnum
    having?: post_app_album_imagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Post_app_album_imagesCountAggregateInputType | true
    _avg?: Post_app_album_imagesAvgAggregateInputType
    _sum?: Post_app_album_imagesSumAggregateInputType
    _min?: Post_app_album_imagesMinAggregateInputType
    _max?: Post_app_album_imagesMaxAggregateInputType
  }

  export type Post_app_album_imagesGroupByOutputType = {
    id: bigint
    album_id: bigint
    image_id: bigint
    _count: Post_app_album_imagesCountAggregateOutputType | null
    _avg: Post_app_album_imagesAvgAggregateOutputType | null
    _sum: Post_app_album_imagesSumAggregateOutputType | null
    _min: Post_app_album_imagesMinAggregateOutputType | null
    _max: Post_app_album_imagesMaxAggregateOutputType | null
  }

  type GetPost_app_album_imagesGroupByPayload<T extends post_app_album_imagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Post_app_album_imagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Post_app_album_imagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Post_app_album_imagesGroupByOutputType[P]>
            : GetScalarType<T[P], Post_app_album_imagesGroupByOutputType[P]>
        }
      >
    >


  export type post_app_album_imagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    album_id?: boolean
    image_id?: boolean
    album?: boolean | AlbumDefaultArgs<ExtArgs>
    image?: boolean | ImageDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post_app_album_images"]>



  export type post_app_album_imagesSelectScalar = {
    id?: boolean
    album_id?: boolean
    image_id?: boolean
  }

  export type post_app_album_imagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "album_id" | "image_id", ExtArgs["result"]["post_app_album_images"]>
  export type post_app_album_imagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    album?: boolean | AlbumDefaultArgs<ExtArgs>
    image?: boolean | ImageDefaultArgs<ExtArgs>
  }

  export type $post_app_album_imagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "post_app_album_images"
    objects: {
      album: Prisma.$AlbumPayload<ExtArgs>
      image: Prisma.$ImagePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      album_id: bigint
      image_id: bigint
    }, ExtArgs["result"]["post_app_album_images"]>
    composites: {}
  }

  type post_app_album_imagesGetPayload<S extends boolean | null | undefined | post_app_album_imagesDefaultArgs> = $Result.GetResult<Prisma.$post_app_album_imagesPayload, S>

  type post_app_album_imagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<post_app_album_imagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Post_app_album_imagesCountAggregateInputType | true
    }

  export interface post_app_album_imagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['post_app_album_images'], meta: { name: 'post_app_album_images' } }
    /**
     * Find zero or one Post_app_album_images that matches the filter.
     * @param {post_app_album_imagesFindUniqueArgs} args - Arguments to find a Post_app_album_images
     * @example
     * // Get one Post_app_album_images
     * const post_app_album_images = await prisma.post_app_album_images.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends post_app_album_imagesFindUniqueArgs>(args: SelectSubset<T, post_app_album_imagesFindUniqueArgs<ExtArgs>>): Prisma__post_app_album_imagesClient<$Result.GetResult<Prisma.$post_app_album_imagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Post_app_album_images that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {post_app_album_imagesFindUniqueOrThrowArgs} args - Arguments to find a Post_app_album_images
     * @example
     * // Get one Post_app_album_images
     * const post_app_album_images = await prisma.post_app_album_images.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends post_app_album_imagesFindUniqueOrThrowArgs>(args: SelectSubset<T, post_app_album_imagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__post_app_album_imagesClient<$Result.GetResult<Prisma.$post_app_album_imagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_app_album_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_album_imagesFindFirstArgs} args - Arguments to find a Post_app_album_images
     * @example
     * // Get one Post_app_album_images
     * const post_app_album_images = await prisma.post_app_album_images.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends post_app_album_imagesFindFirstArgs>(args?: SelectSubset<T, post_app_album_imagesFindFirstArgs<ExtArgs>>): Prisma__post_app_album_imagesClient<$Result.GetResult<Prisma.$post_app_album_imagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_app_album_images that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_album_imagesFindFirstOrThrowArgs} args - Arguments to find a Post_app_album_images
     * @example
     * // Get one Post_app_album_images
     * const post_app_album_images = await prisma.post_app_album_images.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends post_app_album_imagesFindFirstOrThrowArgs>(args?: SelectSubset<T, post_app_album_imagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__post_app_album_imagesClient<$Result.GetResult<Prisma.$post_app_album_imagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Post_app_album_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_album_imagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Post_app_album_images
     * const post_app_album_images = await prisma.post_app_album_images.findMany()
     * 
     * // Get first 10 Post_app_album_images
     * const post_app_album_images = await prisma.post_app_album_images.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const post_app_album_imagesWithIdOnly = await prisma.post_app_album_images.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends post_app_album_imagesFindManyArgs>(args?: SelectSubset<T, post_app_album_imagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_app_album_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Post_app_album_images.
     * @param {post_app_album_imagesCreateArgs} args - Arguments to create a Post_app_album_images.
     * @example
     * // Create one Post_app_album_images
     * const Post_app_album_images = await prisma.post_app_album_images.create({
     *   data: {
     *     // ... data to create a Post_app_album_images
     *   }
     * })
     * 
     */
    create<T extends post_app_album_imagesCreateArgs>(args: SelectSubset<T, post_app_album_imagesCreateArgs<ExtArgs>>): Prisma__post_app_album_imagesClient<$Result.GetResult<Prisma.$post_app_album_imagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Post_app_album_images.
     * @param {post_app_album_imagesCreateManyArgs} args - Arguments to create many Post_app_album_images.
     * @example
     * // Create many Post_app_album_images
     * const post_app_album_images = await prisma.post_app_album_images.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends post_app_album_imagesCreateManyArgs>(args?: SelectSubset<T, post_app_album_imagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Post_app_album_images.
     * @param {post_app_album_imagesDeleteArgs} args - Arguments to delete one Post_app_album_images.
     * @example
     * // Delete one Post_app_album_images
     * const Post_app_album_images = await prisma.post_app_album_images.delete({
     *   where: {
     *     // ... filter to delete one Post_app_album_images
     *   }
     * })
     * 
     */
    delete<T extends post_app_album_imagesDeleteArgs>(args: SelectSubset<T, post_app_album_imagesDeleteArgs<ExtArgs>>): Prisma__post_app_album_imagesClient<$Result.GetResult<Prisma.$post_app_album_imagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Post_app_album_images.
     * @param {post_app_album_imagesUpdateArgs} args - Arguments to update one Post_app_album_images.
     * @example
     * // Update one Post_app_album_images
     * const post_app_album_images = await prisma.post_app_album_images.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends post_app_album_imagesUpdateArgs>(args: SelectSubset<T, post_app_album_imagesUpdateArgs<ExtArgs>>): Prisma__post_app_album_imagesClient<$Result.GetResult<Prisma.$post_app_album_imagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Post_app_album_images.
     * @param {post_app_album_imagesDeleteManyArgs} args - Arguments to filter Post_app_album_images to delete.
     * @example
     * // Delete a few Post_app_album_images
     * const { count } = await prisma.post_app_album_images.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends post_app_album_imagesDeleteManyArgs>(args?: SelectSubset<T, post_app_album_imagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Post_app_album_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_album_imagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Post_app_album_images
     * const post_app_album_images = await prisma.post_app_album_images.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends post_app_album_imagesUpdateManyArgs>(args: SelectSubset<T, post_app_album_imagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Post_app_album_images.
     * @param {post_app_album_imagesUpsertArgs} args - Arguments to update or create a Post_app_album_images.
     * @example
     * // Update or create a Post_app_album_images
     * const post_app_album_images = await prisma.post_app_album_images.upsert({
     *   create: {
     *     // ... data to create a Post_app_album_images
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post_app_album_images we want to update
     *   }
     * })
     */
    upsert<T extends post_app_album_imagesUpsertArgs>(args: SelectSubset<T, post_app_album_imagesUpsertArgs<ExtArgs>>): Prisma__post_app_album_imagesClient<$Result.GetResult<Prisma.$post_app_album_imagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Post_app_album_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_album_imagesCountArgs} args - Arguments to filter Post_app_album_images to count.
     * @example
     * // Count the number of Post_app_album_images
     * const count = await prisma.post_app_album_images.count({
     *   where: {
     *     // ... the filter for the Post_app_album_images we want to count
     *   }
     * })
    **/
    count<T extends post_app_album_imagesCountArgs>(
      args?: Subset<T, post_app_album_imagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Post_app_album_imagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post_app_album_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Post_app_album_imagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Post_app_album_imagesAggregateArgs>(args: Subset<T, Post_app_album_imagesAggregateArgs>): Prisma.PrismaPromise<GetPost_app_album_imagesAggregateType<T>>

    /**
     * Group by Post_app_album_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_album_imagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends post_app_album_imagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: post_app_album_imagesGroupByArgs['orderBy'] }
        : { orderBy?: post_app_album_imagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, post_app_album_imagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPost_app_album_imagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the post_app_album_images model
   */
  readonly fields: post_app_album_imagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for post_app_album_images.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__post_app_album_imagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    album<T extends AlbumDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AlbumDefaultArgs<ExtArgs>>): Prisma__AlbumClient<$Result.GetResult<Prisma.$AlbumPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    image<T extends ImageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ImageDefaultArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the post_app_album_images model
   */
  interface post_app_album_imagesFieldRefs {
    readonly id: FieldRef<"post_app_album_images", 'BigInt'>
    readonly album_id: FieldRef<"post_app_album_images", 'BigInt'>
    readonly image_id: FieldRef<"post_app_album_images", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * post_app_album_images findUnique
   */
  export type post_app_album_imagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_album_images
     */
    select?: post_app_album_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_album_images
     */
    omit?: post_app_album_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_album_imagesInclude<ExtArgs> | null
    /**
     * Filter, which post_app_album_images to fetch.
     */
    where: post_app_album_imagesWhereUniqueInput
  }

  /**
   * post_app_album_images findUniqueOrThrow
   */
  export type post_app_album_imagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_album_images
     */
    select?: post_app_album_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_album_images
     */
    omit?: post_app_album_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_album_imagesInclude<ExtArgs> | null
    /**
     * Filter, which post_app_album_images to fetch.
     */
    where: post_app_album_imagesWhereUniqueInput
  }

  /**
   * post_app_album_images findFirst
   */
  export type post_app_album_imagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_album_images
     */
    select?: post_app_album_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_album_images
     */
    omit?: post_app_album_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_album_imagesInclude<ExtArgs> | null
    /**
     * Filter, which post_app_album_images to fetch.
     */
    where?: post_app_album_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_album_images to fetch.
     */
    orderBy?: post_app_album_imagesOrderByWithRelationInput | post_app_album_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_app_album_images.
     */
    cursor?: post_app_album_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_album_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_album_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_app_album_images.
     */
    distinct?: Post_app_album_imagesScalarFieldEnum | Post_app_album_imagesScalarFieldEnum[]
  }

  /**
   * post_app_album_images findFirstOrThrow
   */
  export type post_app_album_imagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_album_images
     */
    select?: post_app_album_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_album_images
     */
    omit?: post_app_album_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_album_imagesInclude<ExtArgs> | null
    /**
     * Filter, which post_app_album_images to fetch.
     */
    where?: post_app_album_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_album_images to fetch.
     */
    orderBy?: post_app_album_imagesOrderByWithRelationInput | post_app_album_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_app_album_images.
     */
    cursor?: post_app_album_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_album_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_album_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_app_album_images.
     */
    distinct?: Post_app_album_imagesScalarFieldEnum | Post_app_album_imagesScalarFieldEnum[]
  }

  /**
   * post_app_album_images findMany
   */
  export type post_app_album_imagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_album_images
     */
    select?: post_app_album_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_album_images
     */
    omit?: post_app_album_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_album_imagesInclude<ExtArgs> | null
    /**
     * Filter, which post_app_album_images to fetch.
     */
    where?: post_app_album_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_album_images to fetch.
     */
    orderBy?: post_app_album_imagesOrderByWithRelationInput | post_app_album_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing post_app_album_images.
     */
    cursor?: post_app_album_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_album_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_album_images.
     */
    skip?: number
    distinct?: Post_app_album_imagesScalarFieldEnum | Post_app_album_imagesScalarFieldEnum[]
  }

  /**
   * post_app_album_images create
   */
  export type post_app_album_imagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_album_images
     */
    select?: post_app_album_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_album_images
     */
    omit?: post_app_album_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_album_imagesInclude<ExtArgs> | null
    /**
     * The data needed to create a post_app_album_images.
     */
    data: XOR<post_app_album_imagesCreateInput, post_app_album_imagesUncheckedCreateInput>
  }

  /**
   * post_app_album_images createMany
   */
  export type post_app_album_imagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many post_app_album_images.
     */
    data: post_app_album_imagesCreateManyInput | post_app_album_imagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * post_app_album_images update
   */
  export type post_app_album_imagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_album_images
     */
    select?: post_app_album_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_album_images
     */
    omit?: post_app_album_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_album_imagesInclude<ExtArgs> | null
    /**
     * The data needed to update a post_app_album_images.
     */
    data: XOR<post_app_album_imagesUpdateInput, post_app_album_imagesUncheckedUpdateInput>
    /**
     * Choose, which post_app_album_images to update.
     */
    where: post_app_album_imagesWhereUniqueInput
  }

  /**
   * post_app_album_images updateMany
   */
  export type post_app_album_imagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update post_app_album_images.
     */
    data: XOR<post_app_album_imagesUpdateManyMutationInput, post_app_album_imagesUncheckedUpdateManyInput>
    /**
     * Filter which post_app_album_images to update
     */
    where?: post_app_album_imagesWhereInput
    /**
     * Limit how many post_app_album_images to update.
     */
    limit?: number
  }

  /**
   * post_app_album_images upsert
   */
  export type post_app_album_imagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_album_images
     */
    select?: post_app_album_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_album_images
     */
    omit?: post_app_album_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_album_imagesInclude<ExtArgs> | null
    /**
     * The filter to search for the post_app_album_images to update in case it exists.
     */
    where: post_app_album_imagesWhereUniqueInput
    /**
     * In case the post_app_album_images found by the `where` argument doesn't exist, create a new post_app_album_images with this data.
     */
    create: XOR<post_app_album_imagesCreateInput, post_app_album_imagesUncheckedCreateInput>
    /**
     * In case the post_app_album_images was found with the provided `where` argument, update it with this data.
     */
    update: XOR<post_app_album_imagesUpdateInput, post_app_album_imagesUncheckedUpdateInput>
  }

  /**
   * post_app_album_images delete
   */
  export type post_app_album_imagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_album_images
     */
    select?: post_app_album_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_album_images
     */
    omit?: post_app_album_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_album_imagesInclude<ExtArgs> | null
    /**
     * Filter which post_app_album_images to delete.
     */
    where: post_app_album_imagesWhereUniqueInput
  }

  /**
   * post_app_album_images deleteMany
   */
  export type post_app_album_imagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_app_album_images to delete
     */
    where?: post_app_album_imagesWhereInput
    /**
     * Limit how many post_app_album_images to delete.
     */
    limit?: number
  }

  /**
   * post_app_album_images without action
   */
  export type post_app_album_imagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_album_images
     */
    select?: post_app_album_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_album_images
     */
    omit?: post_app_album_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_album_imagesInclude<ExtArgs> | null
  }


  /**
   * Model ChatGroup
   */

  export type AggregateChatGroup = {
    _count: ChatGroupCountAggregateOutputType | null
    _avg: ChatGroupAvgAggregateOutputType | null
    _sum: ChatGroupSumAggregateOutputType | null
    _min: ChatGroupMinAggregateOutputType | null
    _max: ChatGroupMaxAggregateOutputType | null
  }

  export type ChatGroupAvgAggregateOutputType = {
    id: number | null
    admin_id: number | null
  }

  export type ChatGroupSumAggregateOutputType = {
    id: bigint | null
    admin_id: bigint | null
  }

  export type ChatGroupMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    is_personal_chat: boolean | null
    admin_id: bigint | null
    avatar: string | null
  }

  export type ChatGroupMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    is_personal_chat: boolean | null
    admin_id: bigint | null
    avatar: string | null
  }

  export type ChatGroupCountAggregateOutputType = {
    id: number
    name: number
    is_personal_chat: number
    admin_id: number
    avatar: number
    _all: number
  }


  export type ChatGroupAvgAggregateInputType = {
    id?: true
    admin_id?: true
  }

  export type ChatGroupSumAggregateInputType = {
    id?: true
    admin_id?: true
  }

  export type ChatGroupMinAggregateInputType = {
    id?: true
    name?: true
    is_personal_chat?: true
    admin_id?: true
    avatar?: true
  }

  export type ChatGroupMaxAggregateInputType = {
    id?: true
    name?: true
    is_personal_chat?: true
    admin_id?: true
    avatar?: true
  }

  export type ChatGroupCountAggregateInputType = {
    id?: true
    name?: true
    is_personal_chat?: true
    admin_id?: true
    avatar?: true
    _all?: true
  }

  export type ChatGroupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChatGroup to aggregate.
     */
    where?: ChatGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatGroups to fetch.
     */
    orderBy?: ChatGroupOrderByWithRelationInput | ChatGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChatGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChatGroups
    **/
    _count?: true | ChatGroupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChatGroupAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChatGroupSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChatGroupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChatGroupMaxAggregateInputType
  }

  export type GetChatGroupAggregateType<T extends ChatGroupAggregateArgs> = {
        [P in keyof T & keyof AggregateChatGroup]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChatGroup[P]>
      : GetScalarType<T[P], AggregateChatGroup[P]>
  }




  export type ChatGroupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChatGroupWhereInput
    orderBy?: ChatGroupOrderByWithAggregationInput | ChatGroupOrderByWithAggregationInput[]
    by: ChatGroupScalarFieldEnum[] | ChatGroupScalarFieldEnum
    having?: ChatGroupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChatGroupCountAggregateInputType | true
    _avg?: ChatGroupAvgAggregateInputType
    _sum?: ChatGroupSumAggregateInputType
    _min?: ChatGroupMinAggregateInputType
    _max?: ChatGroupMaxAggregateInputType
  }

  export type ChatGroupGroupByOutputType = {
    id: bigint
    name: string
    is_personal_chat: boolean
    admin_id: bigint
    avatar: string | null
    _count: ChatGroupCountAggregateOutputType | null
    _avg: ChatGroupAvgAggregateOutputType | null
    _sum: ChatGroupSumAggregateOutputType | null
    _min: ChatGroupMinAggregateOutputType | null
    _max: ChatGroupMaxAggregateOutputType | null
  }

  type GetChatGroupGroupByPayload<T extends ChatGroupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChatGroupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChatGroupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChatGroupGroupByOutputType[P]>
            : GetScalarType<T[P], ChatGroupGroupByOutputType[P]>
        }
      >
    >


  export type ChatGroupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    is_personal_chat?: boolean
    admin_id?: boolean
    avatar?: boolean
    admin?: boolean | ProfileDefaultArgs<ExtArgs>
    chat_app_chatgroup_members?: boolean | ChatGroup$chat_app_chatgroup_membersArgs<ExtArgs>
    chat_app_chatmessage?: boolean | ChatGroup$chat_app_chatmessageArgs<ExtArgs>
    _count?: boolean | ChatGroupCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chatGroup"]>



  export type ChatGroupSelectScalar = {
    id?: boolean
    name?: boolean
    is_personal_chat?: boolean
    admin_id?: boolean
    avatar?: boolean
  }

  export type ChatGroupOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "is_personal_chat" | "admin_id" | "avatar", ExtArgs["result"]["chatGroup"]>
  export type ChatGroupInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin?: boolean | ProfileDefaultArgs<ExtArgs>
    chat_app_chatgroup_members?: boolean | ChatGroup$chat_app_chatgroup_membersArgs<ExtArgs>
    chat_app_chatmessage?: boolean | ChatGroup$chat_app_chatmessageArgs<ExtArgs>
    _count?: boolean | ChatGroupCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ChatGroupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChatGroup"
    objects: {
      admin: Prisma.$ProfilePayload<ExtArgs>
      chat_app_chatgroup_members: Prisma.$chat_app_chatgroup_membersPayload<ExtArgs>[]
      chat_app_chatmessage: Prisma.$ChatMessagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      is_personal_chat: boolean
      admin_id: bigint
      avatar: string | null
    }, ExtArgs["result"]["chatGroup"]>
    composites: {}
  }

  type ChatGroupGetPayload<S extends boolean | null | undefined | ChatGroupDefaultArgs> = $Result.GetResult<Prisma.$ChatGroupPayload, S>

  type ChatGroupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChatGroupFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChatGroupCountAggregateInputType | true
    }

  export interface ChatGroupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChatGroup'], meta: { name: 'ChatGroup' } }
    /**
     * Find zero or one ChatGroup that matches the filter.
     * @param {ChatGroupFindUniqueArgs} args - Arguments to find a ChatGroup
     * @example
     * // Get one ChatGroup
     * const chatGroup = await prisma.chatGroup.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChatGroupFindUniqueArgs>(args: SelectSubset<T, ChatGroupFindUniqueArgs<ExtArgs>>): Prisma__ChatGroupClient<$Result.GetResult<Prisma.$ChatGroupPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ChatGroup that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChatGroupFindUniqueOrThrowArgs} args - Arguments to find a ChatGroup
     * @example
     * // Get one ChatGroup
     * const chatGroup = await prisma.chatGroup.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChatGroupFindUniqueOrThrowArgs>(args: SelectSubset<T, ChatGroupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChatGroupClient<$Result.GetResult<Prisma.$ChatGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChatGroup that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatGroupFindFirstArgs} args - Arguments to find a ChatGroup
     * @example
     * // Get one ChatGroup
     * const chatGroup = await prisma.chatGroup.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChatGroupFindFirstArgs>(args?: SelectSubset<T, ChatGroupFindFirstArgs<ExtArgs>>): Prisma__ChatGroupClient<$Result.GetResult<Prisma.$ChatGroupPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChatGroup that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatGroupFindFirstOrThrowArgs} args - Arguments to find a ChatGroup
     * @example
     * // Get one ChatGroup
     * const chatGroup = await prisma.chatGroup.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChatGroupFindFirstOrThrowArgs>(args?: SelectSubset<T, ChatGroupFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChatGroupClient<$Result.GetResult<Prisma.$ChatGroupPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ChatGroups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatGroupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChatGroups
     * const chatGroups = await prisma.chatGroup.findMany()
     * 
     * // Get first 10 ChatGroups
     * const chatGroups = await prisma.chatGroup.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chatGroupWithIdOnly = await prisma.chatGroup.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChatGroupFindManyArgs>(args?: SelectSubset<T, ChatGroupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatGroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ChatGroup.
     * @param {ChatGroupCreateArgs} args - Arguments to create a ChatGroup.
     * @example
     * // Create one ChatGroup
     * const ChatGroup = await prisma.chatGroup.create({
     *   data: {
     *     // ... data to create a ChatGroup
     *   }
     * })
     * 
     */
    create<T extends ChatGroupCreateArgs>(args: SelectSubset<T, ChatGroupCreateArgs<ExtArgs>>): Prisma__ChatGroupClient<$Result.GetResult<Prisma.$ChatGroupPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ChatGroups.
     * @param {ChatGroupCreateManyArgs} args - Arguments to create many ChatGroups.
     * @example
     * // Create many ChatGroups
     * const chatGroup = await prisma.chatGroup.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChatGroupCreateManyArgs>(args?: SelectSubset<T, ChatGroupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ChatGroup.
     * @param {ChatGroupDeleteArgs} args - Arguments to delete one ChatGroup.
     * @example
     * // Delete one ChatGroup
     * const ChatGroup = await prisma.chatGroup.delete({
     *   where: {
     *     // ... filter to delete one ChatGroup
     *   }
     * })
     * 
     */
    delete<T extends ChatGroupDeleteArgs>(args: SelectSubset<T, ChatGroupDeleteArgs<ExtArgs>>): Prisma__ChatGroupClient<$Result.GetResult<Prisma.$ChatGroupPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ChatGroup.
     * @param {ChatGroupUpdateArgs} args - Arguments to update one ChatGroup.
     * @example
     * // Update one ChatGroup
     * const chatGroup = await prisma.chatGroup.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChatGroupUpdateArgs>(args: SelectSubset<T, ChatGroupUpdateArgs<ExtArgs>>): Prisma__ChatGroupClient<$Result.GetResult<Prisma.$ChatGroupPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ChatGroups.
     * @param {ChatGroupDeleteManyArgs} args - Arguments to filter ChatGroups to delete.
     * @example
     * // Delete a few ChatGroups
     * const { count } = await prisma.chatGroup.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChatGroupDeleteManyArgs>(args?: SelectSubset<T, ChatGroupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChatGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatGroupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChatGroups
     * const chatGroup = await prisma.chatGroup.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChatGroupUpdateManyArgs>(args: SelectSubset<T, ChatGroupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ChatGroup.
     * @param {ChatGroupUpsertArgs} args - Arguments to update or create a ChatGroup.
     * @example
     * // Update or create a ChatGroup
     * const chatGroup = await prisma.chatGroup.upsert({
     *   create: {
     *     // ... data to create a ChatGroup
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChatGroup we want to update
     *   }
     * })
     */
    upsert<T extends ChatGroupUpsertArgs>(args: SelectSubset<T, ChatGroupUpsertArgs<ExtArgs>>): Prisma__ChatGroupClient<$Result.GetResult<Prisma.$ChatGroupPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ChatGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatGroupCountArgs} args - Arguments to filter ChatGroups to count.
     * @example
     * // Count the number of ChatGroups
     * const count = await prisma.chatGroup.count({
     *   where: {
     *     // ... the filter for the ChatGroups we want to count
     *   }
     * })
    **/
    count<T extends ChatGroupCountArgs>(
      args?: Subset<T, ChatGroupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChatGroupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChatGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatGroupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChatGroupAggregateArgs>(args: Subset<T, ChatGroupAggregateArgs>): Prisma.PrismaPromise<GetChatGroupAggregateType<T>>

    /**
     * Group by ChatGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatGroupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChatGroupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChatGroupGroupByArgs['orderBy'] }
        : { orderBy?: ChatGroupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChatGroupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChatGroupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChatGroup model
   */
  readonly fields: ChatGroupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChatGroup.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChatGroupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    chat_app_chatgroup_members<T extends ChatGroup$chat_app_chatgroup_membersArgs<ExtArgs> = {}>(args?: Subset<T, ChatGroup$chat_app_chatgroup_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_app_chatgroup_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    chat_app_chatmessage<T extends ChatGroup$chat_app_chatmessageArgs<ExtArgs> = {}>(args?: Subset<T, ChatGroup$chat_app_chatmessageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChatGroup model
   */
  interface ChatGroupFieldRefs {
    readonly id: FieldRef<"ChatGroup", 'BigInt'>
    readonly name: FieldRef<"ChatGroup", 'String'>
    readonly is_personal_chat: FieldRef<"ChatGroup", 'Boolean'>
    readonly admin_id: FieldRef<"ChatGroup", 'BigInt'>
    readonly avatar: FieldRef<"ChatGroup", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ChatGroup findUnique
   */
  export type ChatGroupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatGroup
     */
    select?: ChatGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatGroup
     */
    omit?: ChatGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatGroupInclude<ExtArgs> | null
    /**
     * Filter, which ChatGroup to fetch.
     */
    where: ChatGroupWhereUniqueInput
  }

  /**
   * ChatGroup findUniqueOrThrow
   */
  export type ChatGroupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatGroup
     */
    select?: ChatGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatGroup
     */
    omit?: ChatGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatGroupInclude<ExtArgs> | null
    /**
     * Filter, which ChatGroup to fetch.
     */
    where: ChatGroupWhereUniqueInput
  }

  /**
   * ChatGroup findFirst
   */
  export type ChatGroupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatGroup
     */
    select?: ChatGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatGroup
     */
    omit?: ChatGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatGroupInclude<ExtArgs> | null
    /**
     * Filter, which ChatGroup to fetch.
     */
    where?: ChatGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatGroups to fetch.
     */
    orderBy?: ChatGroupOrderByWithRelationInput | ChatGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChatGroups.
     */
    cursor?: ChatGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChatGroups.
     */
    distinct?: ChatGroupScalarFieldEnum | ChatGroupScalarFieldEnum[]
  }

  /**
   * ChatGroup findFirstOrThrow
   */
  export type ChatGroupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatGroup
     */
    select?: ChatGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatGroup
     */
    omit?: ChatGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatGroupInclude<ExtArgs> | null
    /**
     * Filter, which ChatGroup to fetch.
     */
    where?: ChatGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatGroups to fetch.
     */
    orderBy?: ChatGroupOrderByWithRelationInput | ChatGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChatGroups.
     */
    cursor?: ChatGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChatGroups.
     */
    distinct?: ChatGroupScalarFieldEnum | ChatGroupScalarFieldEnum[]
  }

  /**
   * ChatGroup findMany
   */
  export type ChatGroupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatGroup
     */
    select?: ChatGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatGroup
     */
    omit?: ChatGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatGroupInclude<ExtArgs> | null
    /**
     * Filter, which ChatGroups to fetch.
     */
    where?: ChatGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatGroups to fetch.
     */
    orderBy?: ChatGroupOrderByWithRelationInput | ChatGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChatGroups.
     */
    cursor?: ChatGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatGroups.
     */
    skip?: number
    distinct?: ChatGroupScalarFieldEnum | ChatGroupScalarFieldEnum[]
  }

  /**
   * ChatGroup create
   */
  export type ChatGroupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatGroup
     */
    select?: ChatGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatGroup
     */
    omit?: ChatGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatGroupInclude<ExtArgs> | null
    /**
     * The data needed to create a ChatGroup.
     */
    data: XOR<ChatGroupCreateInput, ChatGroupUncheckedCreateInput>
  }

  /**
   * ChatGroup createMany
   */
  export type ChatGroupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChatGroups.
     */
    data: ChatGroupCreateManyInput | ChatGroupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChatGroup update
   */
  export type ChatGroupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatGroup
     */
    select?: ChatGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatGroup
     */
    omit?: ChatGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatGroupInclude<ExtArgs> | null
    /**
     * The data needed to update a ChatGroup.
     */
    data: XOR<ChatGroupUpdateInput, ChatGroupUncheckedUpdateInput>
    /**
     * Choose, which ChatGroup to update.
     */
    where: ChatGroupWhereUniqueInput
  }

  /**
   * ChatGroup updateMany
   */
  export type ChatGroupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChatGroups.
     */
    data: XOR<ChatGroupUpdateManyMutationInput, ChatGroupUncheckedUpdateManyInput>
    /**
     * Filter which ChatGroups to update
     */
    where?: ChatGroupWhereInput
    /**
     * Limit how many ChatGroups to update.
     */
    limit?: number
  }

  /**
   * ChatGroup upsert
   */
  export type ChatGroupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatGroup
     */
    select?: ChatGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatGroup
     */
    omit?: ChatGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatGroupInclude<ExtArgs> | null
    /**
     * The filter to search for the ChatGroup to update in case it exists.
     */
    where: ChatGroupWhereUniqueInput
    /**
     * In case the ChatGroup found by the `where` argument doesn't exist, create a new ChatGroup with this data.
     */
    create: XOR<ChatGroupCreateInput, ChatGroupUncheckedCreateInput>
    /**
     * In case the ChatGroup was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChatGroupUpdateInput, ChatGroupUncheckedUpdateInput>
  }

  /**
   * ChatGroup delete
   */
  export type ChatGroupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatGroup
     */
    select?: ChatGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatGroup
     */
    omit?: ChatGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatGroupInclude<ExtArgs> | null
    /**
     * Filter which ChatGroup to delete.
     */
    where: ChatGroupWhereUniqueInput
  }

  /**
   * ChatGroup deleteMany
   */
  export type ChatGroupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChatGroups to delete
     */
    where?: ChatGroupWhereInput
    /**
     * Limit how many ChatGroups to delete.
     */
    limit?: number
  }

  /**
   * ChatGroup.chat_app_chatgroup_members
   */
  export type ChatGroup$chat_app_chatgroup_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_app_chatgroup_members
     */
    select?: chat_app_chatgroup_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_app_chatgroup_members
     */
    omit?: chat_app_chatgroup_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_app_chatgroup_membersInclude<ExtArgs> | null
    where?: chat_app_chatgroup_membersWhereInput
    orderBy?: chat_app_chatgroup_membersOrderByWithRelationInput | chat_app_chatgroup_membersOrderByWithRelationInput[]
    cursor?: chat_app_chatgroup_membersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Chat_app_chatgroup_membersScalarFieldEnum | Chat_app_chatgroup_membersScalarFieldEnum[]
  }

  /**
   * ChatGroup.chat_app_chatmessage
   */
  export type ChatGroup$chat_app_chatmessageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    where?: ChatMessageWhereInput
    orderBy?: ChatMessageOrderByWithRelationInput | ChatMessageOrderByWithRelationInput[]
    cursor?: ChatMessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChatMessageScalarFieldEnum | ChatMessageScalarFieldEnum[]
  }

  /**
   * ChatGroup without action
   */
  export type ChatGroupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatGroup
     */
    select?: ChatGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatGroup
     */
    omit?: ChatGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatGroupInclude<ExtArgs> | null
  }


  /**
   * Model ChatMessage
   */

  export type AggregateChatMessage = {
    _count: ChatMessageCountAggregateOutputType | null
    _avg: ChatMessageAvgAggregateOutputType | null
    _sum: ChatMessageSumAggregateOutputType | null
    _min: ChatMessageMinAggregateOutputType | null
    _max: ChatMessageMaxAggregateOutputType | null
  }

  export type ChatMessageAvgAggregateOutputType = {
    id: number | null
    author_id: number | null
    chat_group_id: number | null
  }

  export type ChatMessageSumAggregateOutputType = {
    id: bigint | null
    author_id: bigint | null
    chat_group_id: bigint | null
  }

  export type ChatMessageMinAggregateOutputType = {
    id: bigint | null
    content: string | null
    sent_at: Date | null
    author_id: bigint | null
    chat_group_id: bigint | null
    attached_image: string | null
  }

  export type ChatMessageMaxAggregateOutputType = {
    id: bigint | null
    content: string | null
    sent_at: Date | null
    author_id: bigint | null
    chat_group_id: bigint | null
    attached_image: string | null
  }

  export type ChatMessageCountAggregateOutputType = {
    id: number
    content: number
    sent_at: number
    author_id: number
    chat_group_id: number
    attached_image: number
    _all: number
  }


  export type ChatMessageAvgAggregateInputType = {
    id?: true
    author_id?: true
    chat_group_id?: true
  }

  export type ChatMessageSumAggregateInputType = {
    id?: true
    author_id?: true
    chat_group_id?: true
  }

  export type ChatMessageMinAggregateInputType = {
    id?: true
    content?: true
    sent_at?: true
    author_id?: true
    chat_group_id?: true
    attached_image?: true
  }

  export type ChatMessageMaxAggregateInputType = {
    id?: true
    content?: true
    sent_at?: true
    author_id?: true
    chat_group_id?: true
    attached_image?: true
  }

  export type ChatMessageCountAggregateInputType = {
    id?: true
    content?: true
    sent_at?: true
    author_id?: true
    chat_group_id?: true
    attached_image?: true
    _all?: true
  }

  export type ChatMessageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChatMessage to aggregate.
     */
    where?: ChatMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatMessages to fetch.
     */
    orderBy?: ChatMessageOrderByWithRelationInput | ChatMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ChatMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatMessages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ChatMessages
    **/
    _count?: true | ChatMessageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ChatMessageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ChatMessageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ChatMessageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ChatMessageMaxAggregateInputType
  }

  export type GetChatMessageAggregateType<T extends ChatMessageAggregateArgs> = {
        [P in keyof T & keyof AggregateChatMessage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChatMessage[P]>
      : GetScalarType<T[P], AggregateChatMessage[P]>
  }




  export type ChatMessageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ChatMessageWhereInput
    orderBy?: ChatMessageOrderByWithAggregationInput | ChatMessageOrderByWithAggregationInput[]
    by: ChatMessageScalarFieldEnum[] | ChatMessageScalarFieldEnum
    having?: ChatMessageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ChatMessageCountAggregateInputType | true
    _avg?: ChatMessageAvgAggregateInputType
    _sum?: ChatMessageSumAggregateInputType
    _min?: ChatMessageMinAggregateInputType
    _max?: ChatMessageMaxAggregateInputType
  }

  export type ChatMessageGroupByOutputType = {
    id: bigint
    content: string
    sent_at: Date
    author_id: bigint
    chat_group_id: bigint
    attached_image: string | null
    _count: ChatMessageCountAggregateOutputType | null
    _avg: ChatMessageAvgAggregateOutputType | null
    _sum: ChatMessageSumAggregateOutputType | null
    _min: ChatMessageMinAggregateOutputType | null
    _max: ChatMessageMaxAggregateOutputType | null
  }

  type GetChatMessageGroupByPayload<T extends ChatMessageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ChatMessageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ChatMessageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ChatMessageGroupByOutputType[P]>
            : GetScalarType<T[P], ChatMessageGroupByOutputType[P]>
        }
      >
    >


  export type ChatMessageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    sent_at?: boolean
    author_id?: boolean
    chat_group_id?: boolean
    attached_image?: boolean
    author?: boolean | ProfileDefaultArgs<ExtArgs>
    chat_app_chatgroup?: boolean | ChatGroupDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chatMessage"]>



  export type ChatMessageSelectScalar = {
    id?: boolean
    content?: boolean
    sent_at?: boolean
    author_id?: boolean
    chat_group_id?: boolean
    attached_image?: boolean
  }

  export type ChatMessageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "sent_at" | "author_id" | "chat_group_id" | "attached_image", ExtArgs["result"]["chatMessage"]>
  export type ChatMessageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | ProfileDefaultArgs<ExtArgs>
    chat_app_chatgroup?: boolean | ChatGroupDefaultArgs<ExtArgs>
  }

  export type $ChatMessagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ChatMessage"
    objects: {
      author: Prisma.$ProfilePayload<ExtArgs>
      chat_app_chatgroup: Prisma.$ChatGroupPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      content: string
      sent_at: Date
      author_id: bigint
      chat_group_id: bigint
      attached_image: string | null
    }, ExtArgs["result"]["chatMessage"]>
    composites: {}
  }

  type ChatMessageGetPayload<S extends boolean | null | undefined | ChatMessageDefaultArgs> = $Result.GetResult<Prisma.$ChatMessagePayload, S>

  type ChatMessageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ChatMessageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ChatMessageCountAggregateInputType | true
    }

  export interface ChatMessageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ChatMessage'], meta: { name: 'ChatMessage' } }
    /**
     * Find zero or one ChatMessage that matches the filter.
     * @param {ChatMessageFindUniqueArgs} args - Arguments to find a ChatMessage
     * @example
     * // Get one ChatMessage
     * const chatMessage = await prisma.chatMessage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ChatMessageFindUniqueArgs>(args: SelectSubset<T, ChatMessageFindUniqueArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ChatMessage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ChatMessageFindUniqueOrThrowArgs} args - Arguments to find a ChatMessage
     * @example
     * // Get one ChatMessage
     * const chatMessage = await prisma.chatMessage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ChatMessageFindUniqueOrThrowArgs>(args: SelectSubset<T, ChatMessageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChatMessage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMessageFindFirstArgs} args - Arguments to find a ChatMessage
     * @example
     * // Get one ChatMessage
     * const chatMessage = await prisma.chatMessage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ChatMessageFindFirstArgs>(args?: SelectSubset<T, ChatMessageFindFirstArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ChatMessage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMessageFindFirstOrThrowArgs} args - Arguments to find a ChatMessage
     * @example
     * // Get one ChatMessage
     * const chatMessage = await prisma.chatMessage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ChatMessageFindFirstOrThrowArgs>(args?: SelectSubset<T, ChatMessageFindFirstOrThrowArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ChatMessages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMessageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ChatMessages
     * const chatMessages = await prisma.chatMessage.findMany()
     * 
     * // Get first 10 ChatMessages
     * const chatMessages = await prisma.chatMessage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chatMessageWithIdOnly = await prisma.chatMessage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ChatMessageFindManyArgs>(args?: SelectSubset<T, ChatMessageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ChatMessage.
     * @param {ChatMessageCreateArgs} args - Arguments to create a ChatMessage.
     * @example
     * // Create one ChatMessage
     * const ChatMessage = await prisma.chatMessage.create({
     *   data: {
     *     // ... data to create a ChatMessage
     *   }
     * })
     * 
     */
    create<T extends ChatMessageCreateArgs>(args: SelectSubset<T, ChatMessageCreateArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ChatMessages.
     * @param {ChatMessageCreateManyArgs} args - Arguments to create many ChatMessages.
     * @example
     * // Create many ChatMessages
     * const chatMessage = await prisma.chatMessage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ChatMessageCreateManyArgs>(args?: SelectSubset<T, ChatMessageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ChatMessage.
     * @param {ChatMessageDeleteArgs} args - Arguments to delete one ChatMessage.
     * @example
     * // Delete one ChatMessage
     * const ChatMessage = await prisma.chatMessage.delete({
     *   where: {
     *     // ... filter to delete one ChatMessage
     *   }
     * })
     * 
     */
    delete<T extends ChatMessageDeleteArgs>(args: SelectSubset<T, ChatMessageDeleteArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ChatMessage.
     * @param {ChatMessageUpdateArgs} args - Arguments to update one ChatMessage.
     * @example
     * // Update one ChatMessage
     * const chatMessage = await prisma.chatMessage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ChatMessageUpdateArgs>(args: SelectSubset<T, ChatMessageUpdateArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ChatMessages.
     * @param {ChatMessageDeleteManyArgs} args - Arguments to filter ChatMessages to delete.
     * @example
     * // Delete a few ChatMessages
     * const { count } = await prisma.chatMessage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ChatMessageDeleteManyArgs>(args?: SelectSubset<T, ChatMessageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ChatMessages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMessageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ChatMessages
     * const chatMessage = await prisma.chatMessage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ChatMessageUpdateManyArgs>(args: SelectSubset<T, ChatMessageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ChatMessage.
     * @param {ChatMessageUpsertArgs} args - Arguments to update or create a ChatMessage.
     * @example
     * // Update or create a ChatMessage
     * const chatMessage = await prisma.chatMessage.upsert({
     *   create: {
     *     // ... data to create a ChatMessage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ChatMessage we want to update
     *   }
     * })
     */
    upsert<T extends ChatMessageUpsertArgs>(args: SelectSubset<T, ChatMessageUpsertArgs<ExtArgs>>): Prisma__ChatMessageClient<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ChatMessages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMessageCountArgs} args - Arguments to filter ChatMessages to count.
     * @example
     * // Count the number of ChatMessages
     * const count = await prisma.chatMessage.count({
     *   where: {
     *     // ... the filter for the ChatMessages we want to count
     *   }
     * })
    **/
    count<T extends ChatMessageCountArgs>(
      args?: Subset<T, ChatMessageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ChatMessageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ChatMessage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ChatMessageAggregateArgs>(args: Subset<T, ChatMessageAggregateArgs>): Prisma.PrismaPromise<GetChatMessageAggregateType<T>>

    /**
     * Group by ChatMessage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ChatMessageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ChatMessageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ChatMessageGroupByArgs['orderBy'] }
        : { orderBy?: ChatMessageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ChatMessageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChatMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ChatMessage model
   */
  readonly fields: ChatMessageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ChatMessage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ChatMessageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    chat_app_chatgroup<T extends ChatGroupDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ChatGroupDefaultArgs<ExtArgs>>): Prisma__ChatGroupClient<$Result.GetResult<Prisma.$ChatGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ChatMessage model
   */
  interface ChatMessageFieldRefs {
    readonly id: FieldRef<"ChatMessage", 'BigInt'>
    readonly content: FieldRef<"ChatMessage", 'String'>
    readonly sent_at: FieldRef<"ChatMessage", 'DateTime'>
    readonly author_id: FieldRef<"ChatMessage", 'BigInt'>
    readonly chat_group_id: FieldRef<"ChatMessage", 'BigInt'>
    readonly attached_image: FieldRef<"ChatMessage", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ChatMessage findUnique
   */
  export type ChatMessageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * Filter, which ChatMessage to fetch.
     */
    where: ChatMessageWhereUniqueInput
  }

  /**
   * ChatMessage findUniqueOrThrow
   */
  export type ChatMessageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * Filter, which ChatMessage to fetch.
     */
    where: ChatMessageWhereUniqueInput
  }

  /**
   * ChatMessage findFirst
   */
  export type ChatMessageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * Filter, which ChatMessage to fetch.
     */
    where?: ChatMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatMessages to fetch.
     */
    orderBy?: ChatMessageOrderByWithRelationInput | ChatMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChatMessages.
     */
    cursor?: ChatMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatMessages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChatMessages.
     */
    distinct?: ChatMessageScalarFieldEnum | ChatMessageScalarFieldEnum[]
  }

  /**
   * ChatMessage findFirstOrThrow
   */
  export type ChatMessageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * Filter, which ChatMessage to fetch.
     */
    where?: ChatMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatMessages to fetch.
     */
    orderBy?: ChatMessageOrderByWithRelationInput | ChatMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ChatMessages.
     */
    cursor?: ChatMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatMessages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ChatMessages.
     */
    distinct?: ChatMessageScalarFieldEnum | ChatMessageScalarFieldEnum[]
  }

  /**
   * ChatMessage findMany
   */
  export type ChatMessageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * Filter, which ChatMessages to fetch.
     */
    where?: ChatMessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ChatMessages to fetch.
     */
    orderBy?: ChatMessageOrderByWithRelationInput | ChatMessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ChatMessages.
     */
    cursor?: ChatMessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ChatMessages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ChatMessages.
     */
    skip?: number
    distinct?: ChatMessageScalarFieldEnum | ChatMessageScalarFieldEnum[]
  }

  /**
   * ChatMessage create
   */
  export type ChatMessageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * The data needed to create a ChatMessage.
     */
    data: XOR<ChatMessageCreateInput, ChatMessageUncheckedCreateInput>
  }

  /**
   * ChatMessage createMany
   */
  export type ChatMessageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ChatMessages.
     */
    data: ChatMessageCreateManyInput | ChatMessageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ChatMessage update
   */
  export type ChatMessageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * The data needed to update a ChatMessage.
     */
    data: XOR<ChatMessageUpdateInput, ChatMessageUncheckedUpdateInput>
    /**
     * Choose, which ChatMessage to update.
     */
    where: ChatMessageWhereUniqueInput
  }

  /**
   * ChatMessage updateMany
   */
  export type ChatMessageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ChatMessages.
     */
    data: XOR<ChatMessageUpdateManyMutationInput, ChatMessageUncheckedUpdateManyInput>
    /**
     * Filter which ChatMessages to update
     */
    where?: ChatMessageWhereInput
    /**
     * Limit how many ChatMessages to update.
     */
    limit?: number
  }

  /**
   * ChatMessage upsert
   */
  export type ChatMessageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * The filter to search for the ChatMessage to update in case it exists.
     */
    where: ChatMessageWhereUniqueInput
    /**
     * In case the ChatMessage found by the `where` argument doesn't exist, create a new ChatMessage with this data.
     */
    create: XOR<ChatMessageCreateInput, ChatMessageUncheckedCreateInput>
    /**
     * In case the ChatMessage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ChatMessageUpdateInput, ChatMessageUncheckedUpdateInput>
  }

  /**
   * ChatMessage delete
   */
  export type ChatMessageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    /**
     * Filter which ChatMessage to delete.
     */
    where: ChatMessageWhereUniqueInput
  }

  /**
   * ChatMessage deleteMany
   */
  export type ChatMessageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ChatMessages to delete
     */
    where?: ChatMessageWhereInput
    /**
     * Limit how many ChatMessages to delete.
     */
    limit?: number
  }

  /**
   * ChatMessage without action
   */
  export type ChatMessageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
  }


  /**
   * Model chat_app_chatgroup_members
   */

  export type AggregateChat_app_chatgroup_members = {
    _count: Chat_app_chatgroup_membersCountAggregateOutputType | null
    _avg: Chat_app_chatgroup_membersAvgAggregateOutputType | null
    _sum: Chat_app_chatgroup_membersSumAggregateOutputType | null
    _min: Chat_app_chatgroup_membersMinAggregateOutputType | null
    _max: Chat_app_chatgroup_membersMaxAggregateOutputType | null
  }

  export type Chat_app_chatgroup_membersAvgAggregateOutputType = {
    id: number | null
    chatgroup_id: number | null
    profile_id: number | null
  }

  export type Chat_app_chatgroup_membersSumAggregateOutputType = {
    id: bigint | null
    chatgroup_id: bigint | null
    profile_id: bigint | null
  }

  export type Chat_app_chatgroup_membersMinAggregateOutputType = {
    id: bigint | null
    chatgroup_id: bigint | null
    profile_id: bigint | null
  }

  export type Chat_app_chatgroup_membersMaxAggregateOutputType = {
    id: bigint | null
    chatgroup_id: bigint | null
    profile_id: bigint | null
  }

  export type Chat_app_chatgroup_membersCountAggregateOutputType = {
    id: number
    chatgroup_id: number
    profile_id: number
    _all: number
  }


  export type Chat_app_chatgroup_membersAvgAggregateInputType = {
    id?: true
    chatgroup_id?: true
    profile_id?: true
  }

  export type Chat_app_chatgroup_membersSumAggregateInputType = {
    id?: true
    chatgroup_id?: true
    profile_id?: true
  }

  export type Chat_app_chatgroup_membersMinAggregateInputType = {
    id?: true
    chatgroup_id?: true
    profile_id?: true
  }

  export type Chat_app_chatgroup_membersMaxAggregateInputType = {
    id?: true
    chatgroup_id?: true
    profile_id?: true
  }

  export type Chat_app_chatgroup_membersCountAggregateInputType = {
    id?: true
    chatgroup_id?: true
    profile_id?: true
    _all?: true
  }

  export type Chat_app_chatgroup_membersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_app_chatgroup_members to aggregate.
     */
    where?: chat_app_chatgroup_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_app_chatgroup_members to fetch.
     */
    orderBy?: chat_app_chatgroup_membersOrderByWithRelationInput | chat_app_chatgroup_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: chat_app_chatgroup_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_app_chatgroup_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_app_chatgroup_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned chat_app_chatgroup_members
    **/
    _count?: true | Chat_app_chatgroup_membersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Chat_app_chatgroup_membersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Chat_app_chatgroup_membersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Chat_app_chatgroup_membersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Chat_app_chatgroup_membersMaxAggregateInputType
  }

  export type GetChat_app_chatgroup_membersAggregateType<T extends Chat_app_chatgroup_membersAggregateArgs> = {
        [P in keyof T & keyof AggregateChat_app_chatgroup_members]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChat_app_chatgroup_members[P]>
      : GetScalarType<T[P], AggregateChat_app_chatgroup_members[P]>
  }




  export type chat_app_chatgroup_membersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_app_chatgroup_membersWhereInput
    orderBy?: chat_app_chatgroup_membersOrderByWithAggregationInput | chat_app_chatgroup_membersOrderByWithAggregationInput[]
    by: Chat_app_chatgroup_membersScalarFieldEnum[] | Chat_app_chatgroup_membersScalarFieldEnum
    having?: chat_app_chatgroup_membersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Chat_app_chatgroup_membersCountAggregateInputType | true
    _avg?: Chat_app_chatgroup_membersAvgAggregateInputType
    _sum?: Chat_app_chatgroup_membersSumAggregateInputType
    _min?: Chat_app_chatgroup_membersMinAggregateInputType
    _max?: Chat_app_chatgroup_membersMaxAggregateInputType
  }

  export type Chat_app_chatgroup_membersGroupByOutputType = {
    id: bigint
    chatgroup_id: bigint
    profile_id: bigint
    _count: Chat_app_chatgroup_membersCountAggregateOutputType | null
    _avg: Chat_app_chatgroup_membersAvgAggregateOutputType | null
    _sum: Chat_app_chatgroup_membersSumAggregateOutputType | null
    _min: Chat_app_chatgroup_membersMinAggregateOutputType | null
    _max: Chat_app_chatgroup_membersMaxAggregateOutputType | null
  }

  type GetChat_app_chatgroup_membersGroupByPayload<T extends chat_app_chatgroup_membersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Chat_app_chatgroup_membersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Chat_app_chatgroup_membersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Chat_app_chatgroup_membersGroupByOutputType[P]>
            : GetScalarType<T[P], Chat_app_chatgroup_membersGroupByOutputType[P]>
        }
      >
    >


  export type chat_app_chatgroup_membersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chatgroup_id?: boolean
    profile_id?: boolean
    chat_app_chatgroup?: boolean | ChatGroupDefaultArgs<ExtArgs>
    profile?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chat_app_chatgroup_members"]>



  export type chat_app_chatgroup_membersSelectScalar = {
    id?: boolean
    chatgroup_id?: boolean
    profile_id?: boolean
  }

  export type chat_app_chatgroup_membersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "chatgroup_id" | "profile_id", ExtArgs["result"]["chat_app_chatgroup_members"]>
  export type chat_app_chatgroup_membersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_app_chatgroup?: boolean | ChatGroupDefaultArgs<ExtArgs>
    profile?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $chat_app_chatgroup_membersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "chat_app_chatgroup_members"
    objects: {
      chat_app_chatgroup: Prisma.$ChatGroupPayload<ExtArgs>
      profile: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      chatgroup_id: bigint
      profile_id: bigint
    }, ExtArgs["result"]["chat_app_chatgroup_members"]>
    composites: {}
  }

  type chat_app_chatgroup_membersGetPayload<S extends boolean | null | undefined | chat_app_chatgroup_membersDefaultArgs> = $Result.GetResult<Prisma.$chat_app_chatgroup_membersPayload, S>

  type chat_app_chatgroup_membersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<chat_app_chatgroup_membersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Chat_app_chatgroup_membersCountAggregateInputType | true
    }

  export interface chat_app_chatgroup_membersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['chat_app_chatgroup_members'], meta: { name: 'chat_app_chatgroup_members' } }
    /**
     * Find zero or one Chat_app_chatgroup_members that matches the filter.
     * @param {chat_app_chatgroup_membersFindUniqueArgs} args - Arguments to find a Chat_app_chatgroup_members
     * @example
     * // Get one Chat_app_chatgroup_members
     * const chat_app_chatgroup_members = await prisma.chat_app_chatgroup_members.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends chat_app_chatgroup_membersFindUniqueArgs>(args: SelectSubset<T, chat_app_chatgroup_membersFindUniqueArgs<ExtArgs>>): Prisma__chat_app_chatgroup_membersClient<$Result.GetResult<Prisma.$chat_app_chatgroup_membersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Chat_app_chatgroup_members that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {chat_app_chatgroup_membersFindUniqueOrThrowArgs} args - Arguments to find a Chat_app_chatgroup_members
     * @example
     * // Get one Chat_app_chatgroup_members
     * const chat_app_chatgroup_members = await prisma.chat_app_chatgroup_members.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends chat_app_chatgroup_membersFindUniqueOrThrowArgs>(args: SelectSubset<T, chat_app_chatgroup_membersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__chat_app_chatgroup_membersClient<$Result.GetResult<Prisma.$chat_app_chatgroup_membersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_app_chatgroup_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_app_chatgroup_membersFindFirstArgs} args - Arguments to find a Chat_app_chatgroup_members
     * @example
     * // Get one Chat_app_chatgroup_members
     * const chat_app_chatgroup_members = await prisma.chat_app_chatgroup_members.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends chat_app_chatgroup_membersFindFirstArgs>(args?: SelectSubset<T, chat_app_chatgroup_membersFindFirstArgs<ExtArgs>>): Prisma__chat_app_chatgroup_membersClient<$Result.GetResult<Prisma.$chat_app_chatgroup_membersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_app_chatgroup_members that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_app_chatgroup_membersFindFirstOrThrowArgs} args - Arguments to find a Chat_app_chatgroup_members
     * @example
     * // Get one Chat_app_chatgroup_members
     * const chat_app_chatgroup_members = await prisma.chat_app_chatgroup_members.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends chat_app_chatgroup_membersFindFirstOrThrowArgs>(args?: SelectSubset<T, chat_app_chatgroup_membersFindFirstOrThrowArgs<ExtArgs>>): Prisma__chat_app_chatgroup_membersClient<$Result.GetResult<Prisma.$chat_app_chatgroup_membersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Chat_app_chatgroup_members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_app_chatgroup_membersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Chat_app_chatgroup_members
     * const chat_app_chatgroup_members = await prisma.chat_app_chatgroup_members.findMany()
     * 
     * // Get first 10 Chat_app_chatgroup_members
     * const chat_app_chatgroup_members = await prisma.chat_app_chatgroup_members.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chat_app_chatgroup_membersWithIdOnly = await prisma.chat_app_chatgroup_members.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends chat_app_chatgroup_membersFindManyArgs>(args?: SelectSubset<T, chat_app_chatgroup_membersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_app_chatgroup_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Chat_app_chatgroup_members.
     * @param {chat_app_chatgroup_membersCreateArgs} args - Arguments to create a Chat_app_chatgroup_members.
     * @example
     * // Create one Chat_app_chatgroup_members
     * const Chat_app_chatgroup_members = await prisma.chat_app_chatgroup_members.create({
     *   data: {
     *     // ... data to create a Chat_app_chatgroup_members
     *   }
     * })
     * 
     */
    create<T extends chat_app_chatgroup_membersCreateArgs>(args: SelectSubset<T, chat_app_chatgroup_membersCreateArgs<ExtArgs>>): Prisma__chat_app_chatgroup_membersClient<$Result.GetResult<Prisma.$chat_app_chatgroup_membersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Chat_app_chatgroup_members.
     * @param {chat_app_chatgroup_membersCreateManyArgs} args - Arguments to create many Chat_app_chatgroup_members.
     * @example
     * // Create many Chat_app_chatgroup_members
     * const chat_app_chatgroup_members = await prisma.chat_app_chatgroup_members.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends chat_app_chatgroup_membersCreateManyArgs>(args?: SelectSubset<T, chat_app_chatgroup_membersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Chat_app_chatgroup_members.
     * @param {chat_app_chatgroup_membersDeleteArgs} args - Arguments to delete one Chat_app_chatgroup_members.
     * @example
     * // Delete one Chat_app_chatgroup_members
     * const Chat_app_chatgroup_members = await prisma.chat_app_chatgroup_members.delete({
     *   where: {
     *     // ... filter to delete one Chat_app_chatgroup_members
     *   }
     * })
     * 
     */
    delete<T extends chat_app_chatgroup_membersDeleteArgs>(args: SelectSubset<T, chat_app_chatgroup_membersDeleteArgs<ExtArgs>>): Prisma__chat_app_chatgroup_membersClient<$Result.GetResult<Prisma.$chat_app_chatgroup_membersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Chat_app_chatgroup_members.
     * @param {chat_app_chatgroup_membersUpdateArgs} args - Arguments to update one Chat_app_chatgroup_members.
     * @example
     * // Update one Chat_app_chatgroup_members
     * const chat_app_chatgroup_members = await prisma.chat_app_chatgroup_members.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends chat_app_chatgroup_membersUpdateArgs>(args: SelectSubset<T, chat_app_chatgroup_membersUpdateArgs<ExtArgs>>): Prisma__chat_app_chatgroup_membersClient<$Result.GetResult<Prisma.$chat_app_chatgroup_membersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Chat_app_chatgroup_members.
     * @param {chat_app_chatgroup_membersDeleteManyArgs} args - Arguments to filter Chat_app_chatgroup_members to delete.
     * @example
     * // Delete a few Chat_app_chatgroup_members
     * const { count } = await prisma.chat_app_chatgroup_members.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends chat_app_chatgroup_membersDeleteManyArgs>(args?: SelectSubset<T, chat_app_chatgroup_membersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chat_app_chatgroup_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_app_chatgroup_membersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Chat_app_chatgroup_members
     * const chat_app_chatgroup_members = await prisma.chat_app_chatgroup_members.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends chat_app_chatgroup_membersUpdateManyArgs>(args: SelectSubset<T, chat_app_chatgroup_membersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Chat_app_chatgroup_members.
     * @param {chat_app_chatgroup_membersUpsertArgs} args - Arguments to update or create a Chat_app_chatgroup_members.
     * @example
     * // Update or create a Chat_app_chatgroup_members
     * const chat_app_chatgroup_members = await prisma.chat_app_chatgroup_members.upsert({
     *   create: {
     *     // ... data to create a Chat_app_chatgroup_members
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Chat_app_chatgroup_members we want to update
     *   }
     * })
     */
    upsert<T extends chat_app_chatgroup_membersUpsertArgs>(args: SelectSubset<T, chat_app_chatgroup_membersUpsertArgs<ExtArgs>>): Prisma__chat_app_chatgroup_membersClient<$Result.GetResult<Prisma.$chat_app_chatgroup_membersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Chat_app_chatgroup_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_app_chatgroup_membersCountArgs} args - Arguments to filter Chat_app_chatgroup_members to count.
     * @example
     * // Count the number of Chat_app_chatgroup_members
     * const count = await prisma.chat_app_chatgroup_members.count({
     *   where: {
     *     // ... the filter for the Chat_app_chatgroup_members we want to count
     *   }
     * })
    **/
    count<T extends chat_app_chatgroup_membersCountArgs>(
      args?: Subset<T, chat_app_chatgroup_membersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Chat_app_chatgroup_membersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Chat_app_chatgroup_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Chat_app_chatgroup_membersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Chat_app_chatgroup_membersAggregateArgs>(args: Subset<T, Chat_app_chatgroup_membersAggregateArgs>): Prisma.PrismaPromise<GetChat_app_chatgroup_membersAggregateType<T>>

    /**
     * Group by Chat_app_chatgroup_members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_app_chatgroup_membersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends chat_app_chatgroup_membersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: chat_app_chatgroup_membersGroupByArgs['orderBy'] }
        : { orderBy?: chat_app_chatgroup_membersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, chat_app_chatgroup_membersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChat_app_chatgroup_membersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the chat_app_chatgroup_members model
   */
  readonly fields: chat_app_chatgroup_membersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for chat_app_chatgroup_members.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__chat_app_chatgroup_membersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    chat_app_chatgroup<T extends ChatGroupDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ChatGroupDefaultArgs<ExtArgs>>): Prisma__ChatGroupClient<$Result.GetResult<Prisma.$ChatGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    profile<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the chat_app_chatgroup_members model
   */
  interface chat_app_chatgroup_membersFieldRefs {
    readonly id: FieldRef<"chat_app_chatgroup_members", 'BigInt'>
    readonly chatgroup_id: FieldRef<"chat_app_chatgroup_members", 'BigInt'>
    readonly profile_id: FieldRef<"chat_app_chatgroup_members", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * chat_app_chatgroup_members findUnique
   */
  export type chat_app_chatgroup_membersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_app_chatgroup_members
     */
    select?: chat_app_chatgroup_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_app_chatgroup_members
     */
    omit?: chat_app_chatgroup_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_app_chatgroup_membersInclude<ExtArgs> | null
    /**
     * Filter, which chat_app_chatgroup_members to fetch.
     */
    where: chat_app_chatgroup_membersWhereUniqueInput
  }

  /**
   * chat_app_chatgroup_members findUniqueOrThrow
   */
  export type chat_app_chatgroup_membersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_app_chatgroup_members
     */
    select?: chat_app_chatgroup_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_app_chatgroup_members
     */
    omit?: chat_app_chatgroup_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_app_chatgroup_membersInclude<ExtArgs> | null
    /**
     * Filter, which chat_app_chatgroup_members to fetch.
     */
    where: chat_app_chatgroup_membersWhereUniqueInput
  }

  /**
   * chat_app_chatgroup_members findFirst
   */
  export type chat_app_chatgroup_membersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_app_chatgroup_members
     */
    select?: chat_app_chatgroup_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_app_chatgroup_members
     */
    omit?: chat_app_chatgroup_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_app_chatgroup_membersInclude<ExtArgs> | null
    /**
     * Filter, which chat_app_chatgroup_members to fetch.
     */
    where?: chat_app_chatgroup_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_app_chatgroup_members to fetch.
     */
    orderBy?: chat_app_chatgroup_membersOrderByWithRelationInput | chat_app_chatgroup_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_app_chatgroup_members.
     */
    cursor?: chat_app_chatgroup_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_app_chatgroup_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_app_chatgroup_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_app_chatgroup_members.
     */
    distinct?: Chat_app_chatgroup_membersScalarFieldEnum | Chat_app_chatgroup_membersScalarFieldEnum[]
  }

  /**
   * chat_app_chatgroup_members findFirstOrThrow
   */
  export type chat_app_chatgroup_membersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_app_chatgroup_members
     */
    select?: chat_app_chatgroup_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_app_chatgroup_members
     */
    omit?: chat_app_chatgroup_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_app_chatgroup_membersInclude<ExtArgs> | null
    /**
     * Filter, which chat_app_chatgroup_members to fetch.
     */
    where?: chat_app_chatgroup_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_app_chatgroup_members to fetch.
     */
    orderBy?: chat_app_chatgroup_membersOrderByWithRelationInput | chat_app_chatgroup_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_app_chatgroup_members.
     */
    cursor?: chat_app_chatgroup_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_app_chatgroup_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_app_chatgroup_members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_app_chatgroup_members.
     */
    distinct?: Chat_app_chatgroup_membersScalarFieldEnum | Chat_app_chatgroup_membersScalarFieldEnum[]
  }

  /**
   * chat_app_chatgroup_members findMany
   */
  export type chat_app_chatgroup_membersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_app_chatgroup_members
     */
    select?: chat_app_chatgroup_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_app_chatgroup_members
     */
    omit?: chat_app_chatgroup_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_app_chatgroup_membersInclude<ExtArgs> | null
    /**
     * Filter, which chat_app_chatgroup_members to fetch.
     */
    where?: chat_app_chatgroup_membersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_app_chatgroup_members to fetch.
     */
    orderBy?: chat_app_chatgroup_membersOrderByWithRelationInput | chat_app_chatgroup_membersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing chat_app_chatgroup_members.
     */
    cursor?: chat_app_chatgroup_membersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_app_chatgroup_members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_app_chatgroup_members.
     */
    skip?: number
    distinct?: Chat_app_chatgroup_membersScalarFieldEnum | Chat_app_chatgroup_membersScalarFieldEnum[]
  }

  /**
   * chat_app_chatgroup_members create
   */
  export type chat_app_chatgroup_membersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_app_chatgroup_members
     */
    select?: chat_app_chatgroup_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_app_chatgroup_members
     */
    omit?: chat_app_chatgroup_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_app_chatgroup_membersInclude<ExtArgs> | null
    /**
     * The data needed to create a chat_app_chatgroup_members.
     */
    data: XOR<chat_app_chatgroup_membersCreateInput, chat_app_chatgroup_membersUncheckedCreateInput>
  }

  /**
   * chat_app_chatgroup_members createMany
   */
  export type chat_app_chatgroup_membersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many chat_app_chatgroup_members.
     */
    data: chat_app_chatgroup_membersCreateManyInput | chat_app_chatgroup_membersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * chat_app_chatgroup_members update
   */
  export type chat_app_chatgroup_membersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_app_chatgroup_members
     */
    select?: chat_app_chatgroup_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_app_chatgroup_members
     */
    omit?: chat_app_chatgroup_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_app_chatgroup_membersInclude<ExtArgs> | null
    /**
     * The data needed to update a chat_app_chatgroup_members.
     */
    data: XOR<chat_app_chatgroup_membersUpdateInput, chat_app_chatgroup_membersUncheckedUpdateInput>
    /**
     * Choose, which chat_app_chatgroup_members to update.
     */
    where: chat_app_chatgroup_membersWhereUniqueInput
  }

  /**
   * chat_app_chatgroup_members updateMany
   */
  export type chat_app_chatgroup_membersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update chat_app_chatgroup_members.
     */
    data: XOR<chat_app_chatgroup_membersUpdateManyMutationInput, chat_app_chatgroup_membersUncheckedUpdateManyInput>
    /**
     * Filter which chat_app_chatgroup_members to update
     */
    where?: chat_app_chatgroup_membersWhereInput
    /**
     * Limit how many chat_app_chatgroup_members to update.
     */
    limit?: number
  }

  /**
   * chat_app_chatgroup_members upsert
   */
  export type chat_app_chatgroup_membersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_app_chatgroup_members
     */
    select?: chat_app_chatgroup_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_app_chatgroup_members
     */
    omit?: chat_app_chatgroup_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_app_chatgroup_membersInclude<ExtArgs> | null
    /**
     * The filter to search for the chat_app_chatgroup_members to update in case it exists.
     */
    where: chat_app_chatgroup_membersWhereUniqueInput
    /**
     * In case the chat_app_chatgroup_members found by the `where` argument doesn't exist, create a new chat_app_chatgroup_members with this data.
     */
    create: XOR<chat_app_chatgroup_membersCreateInput, chat_app_chatgroup_membersUncheckedCreateInput>
    /**
     * In case the chat_app_chatgroup_members was found with the provided `where` argument, update it with this data.
     */
    update: XOR<chat_app_chatgroup_membersUpdateInput, chat_app_chatgroup_membersUncheckedUpdateInput>
  }

  /**
   * chat_app_chatgroup_members delete
   */
  export type chat_app_chatgroup_membersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_app_chatgroup_members
     */
    select?: chat_app_chatgroup_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_app_chatgroup_members
     */
    omit?: chat_app_chatgroup_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_app_chatgroup_membersInclude<ExtArgs> | null
    /**
     * Filter which chat_app_chatgroup_members to delete.
     */
    where: chat_app_chatgroup_membersWhereUniqueInput
  }

  /**
   * chat_app_chatgroup_members deleteMany
   */
  export type chat_app_chatgroup_membersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_app_chatgroup_members to delete
     */
    where?: chat_app_chatgroup_membersWhereInput
    /**
     * Limit how many chat_app_chatgroup_members to delete.
     */
    limit?: number
  }

  /**
   * chat_app_chatgroup_members without action
   */
  export type chat_app_chatgroup_membersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_app_chatgroup_members
     */
    select?: chat_app_chatgroup_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_app_chatgroup_members
     */
    omit?: chat_app_chatgroup_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_app_chatgroup_membersInclude<ExtArgs> | null
  }


  /**
   * Model Friendship
   */

  export type AggregateFriendship = {
    _count: FriendshipCountAggregateOutputType | null
    _avg: FriendshipAvgAggregateOutputType | null
    _sum: FriendshipSumAggregateOutputType | null
    _min: FriendshipMinAggregateOutputType | null
    _max: FriendshipMaxAggregateOutputType | null
  }

  export type FriendshipAvgAggregateOutputType = {
    id: number | null
    profile1_id: number | null
    profile2_id: number | null
  }

  export type FriendshipSumAggregateOutputType = {
    id: bigint | null
    profile1_id: bigint | null
    profile2_id: bigint | null
  }

  export type FriendshipMinAggregateOutputType = {
    id: bigint | null
    accepted: boolean | null
    profile1_id: bigint | null
    profile2_id: bigint | null
  }

  export type FriendshipMaxAggregateOutputType = {
    id: bigint | null
    accepted: boolean | null
    profile1_id: bigint | null
    profile2_id: bigint | null
  }

  export type FriendshipCountAggregateOutputType = {
    id: number
    accepted: number
    profile1_id: number
    profile2_id: number
    _all: number
  }


  export type FriendshipAvgAggregateInputType = {
    id?: true
    profile1_id?: true
    profile2_id?: true
  }

  export type FriendshipSumAggregateInputType = {
    id?: true
    profile1_id?: true
    profile2_id?: true
  }

  export type FriendshipMinAggregateInputType = {
    id?: true
    accepted?: true
    profile1_id?: true
    profile2_id?: true
  }

  export type FriendshipMaxAggregateInputType = {
    id?: true
    accepted?: true
    profile1_id?: true
    profile2_id?: true
  }

  export type FriendshipCountAggregateInputType = {
    id?: true
    accepted?: true
    profile1_id?: true
    profile2_id?: true
    _all?: true
  }

  export type FriendshipAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Friendship to aggregate.
     */
    where?: FriendshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Friendships to fetch.
     */
    orderBy?: FriendshipOrderByWithRelationInput | FriendshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FriendshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Friendships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Friendships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Friendships
    **/
    _count?: true | FriendshipCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FriendshipAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FriendshipSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FriendshipMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FriendshipMaxAggregateInputType
  }

  export type GetFriendshipAggregateType<T extends FriendshipAggregateArgs> = {
        [P in keyof T & keyof AggregateFriendship]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFriendship[P]>
      : GetScalarType<T[P], AggregateFriendship[P]>
  }




  export type FriendshipGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FriendshipWhereInput
    orderBy?: FriendshipOrderByWithAggregationInput | FriendshipOrderByWithAggregationInput[]
    by: FriendshipScalarFieldEnum[] | FriendshipScalarFieldEnum
    having?: FriendshipScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FriendshipCountAggregateInputType | true
    _avg?: FriendshipAvgAggregateInputType
    _sum?: FriendshipSumAggregateInputType
    _min?: FriendshipMinAggregateInputType
    _max?: FriendshipMaxAggregateInputType
  }

  export type FriendshipGroupByOutputType = {
    id: bigint
    accepted: boolean
    profile1_id: bigint
    profile2_id: bigint
    _count: FriendshipCountAggregateOutputType | null
    _avg: FriendshipAvgAggregateOutputType | null
    _sum: FriendshipSumAggregateOutputType | null
    _min: FriendshipMinAggregateOutputType | null
    _max: FriendshipMaxAggregateOutputType | null
  }

  type GetFriendshipGroupByPayload<T extends FriendshipGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FriendshipGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FriendshipGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FriendshipGroupByOutputType[P]>
            : GetScalarType<T[P], FriendshipGroupByOutputType[P]>
        }
      >
    >


  export type FriendshipSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accepted?: boolean
    profile1_id?: boolean
    profile2_id?: boolean
    profile1?: boolean | ProfileDefaultArgs<ExtArgs>
    profile2?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["friendship"]>



  export type FriendshipSelectScalar = {
    id?: boolean
    accepted?: boolean
    profile1_id?: boolean
    profile2_id?: boolean
  }

  export type FriendshipOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "accepted" | "profile1_id" | "profile2_id", ExtArgs["result"]["friendship"]>
  export type FriendshipInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    profile1?: boolean | ProfileDefaultArgs<ExtArgs>
    profile2?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $FriendshipPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Friendship"
    objects: {
      profile1: Prisma.$ProfilePayload<ExtArgs>
      profile2: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      accepted: boolean
      profile1_id: bigint
      profile2_id: bigint
    }, ExtArgs["result"]["friendship"]>
    composites: {}
  }

  type FriendshipGetPayload<S extends boolean | null | undefined | FriendshipDefaultArgs> = $Result.GetResult<Prisma.$FriendshipPayload, S>

  type FriendshipCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FriendshipFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FriendshipCountAggregateInputType | true
    }

  export interface FriendshipDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Friendship'], meta: { name: 'Friendship' } }
    /**
     * Find zero or one Friendship that matches the filter.
     * @param {FriendshipFindUniqueArgs} args - Arguments to find a Friendship
     * @example
     * // Get one Friendship
     * const friendship = await prisma.friendship.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FriendshipFindUniqueArgs>(args: SelectSubset<T, FriendshipFindUniqueArgs<ExtArgs>>): Prisma__FriendshipClient<$Result.GetResult<Prisma.$FriendshipPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Friendship that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FriendshipFindUniqueOrThrowArgs} args - Arguments to find a Friendship
     * @example
     * // Get one Friendship
     * const friendship = await prisma.friendship.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FriendshipFindUniqueOrThrowArgs>(args: SelectSubset<T, FriendshipFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FriendshipClient<$Result.GetResult<Prisma.$FriendshipPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Friendship that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FriendshipFindFirstArgs} args - Arguments to find a Friendship
     * @example
     * // Get one Friendship
     * const friendship = await prisma.friendship.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FriendshipFindFirstArgs>(args?: SelectSubset<T, FriendshipFindFirstArgs<ExtArgs>>): Prisma__FriendshipClient<$Result.GetResult<Prisma.$FriendshipPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Friendship that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FriendshipFindFirstOrThrowArgs} args - Arguments to find a Friendship
     * @example
     * // Get one Friendship
     * const friendship = await prisma.friendship.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FriendshipFindFirstOrThrowArgs>(args?: SelectSubset<T, FriendshipFindFirstOrThrowArgs<ExtArgs>>): Prisma__FriendshipClient<$Result.GetResult<Prisma.$FriendshipPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Friendships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FriendshipFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Friendships
     * const friendships = await prisma.friendship.findMany()
     * 
     * // Get first 10 Friendships
     * const friendships = await prisma.friendship.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const friendshipWithIdOnly = await prisma.friendship.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FriendshipFindManyArgs>(args?: SelectSubset<T, FriendshipFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FriendshipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Friendship.
     * @param {FriendshipCreateArgs} args - Arguments to create a Friendship.
     * @example
     * // Create one Friendship
     * const Friendship = await prisma.friendship.create({
     *   data: {
     *     // ... data to create a Friendship
     *   }
     * })
     * 
     */
    create<T extends FriendshipCreateArgs>(args: SelectSubset<T, FriendshipCreateArgs<ExtArgs>>): Prisma__FriendshipClient<$Result.GetResult<Prisma.$FriendshipPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Friendships.
     * @param {FriendshipCreateManyArgs} args - Arguments to create many Friendships.
     * @example
     * // Create many Friendships
     * const friendship = await prisma.friendship.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FriendshipCreateManyArgs>(args?: SelectSubset<T, FriendshipCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Friendship.
     * @param {FriendshipDeleteArgs} args - Arguments to delete one Friendship.
     * @example
     * // Delete one Friendship
     * const Friendship = await prisma.friendship.delete({
     *   where: {
     *     // ... filter to delete one Friendship
     *   }
     * })
     * 
     */
    delete<T extends FriendshipDeleteArgs>(args: SelectSubset<T, FriendshipDeleteArgs<ExtArgs>>): Prisma__FriendshipClient<$Result.GetResult<Prisma.$FriendshipPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Friendship.
     * @param {FriendshipUpdateArgs} args - Arguments to update one Friendship.
     * @example
     * // Update one Friendship
     * const friendship = await prisma.friendship.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FriendshipUpdateArgs>(args: SelectSubset<T, FriendshipUpdateArgs<ExtArgs>>): Prisma__FriendshipClient<$Result.GetResult<Prisma.$FriendshipPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Friendships.
     * @param {FriendshipDeleteManyArgs} args - Arguments to filter Friendships to delete.
     * @example
     * // Delete a few Friendships
     * const { count } = await prisma.friendship.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FriendshipDeleteManyArgs>(args?: SelectSubset<T, FriendshipDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Friendships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FriendshipUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Friendships
     * const friendship = await prisma.friendship.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FriendshipUpdateManyArgs>(args: SelectSubset<T, FriendshipUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Friendship.
     * @param {FriendshipUpsertArgs} args - Arguments to update or create a Friendship.
     * @example
     * // Update or create a Friendship
     * const friendship = await prisma.friendship.upsert({
     *   create: {
     *     // ... data to create a Friendship
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Friendship we want to update
     *   }
     * })
     */
    upsert<T extends FriendshipUpsertArgs>(args: SelectSubset<T, FriendshipUpsertArgs<ExtArgs>>): Prisma__FriendshipClient<$Result.GetResult<Prisma.$FriendshipPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Friendships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FriendshipCountArgs} args - Arguments to filter Friendships to count.
     * @example
     * // Count the number of Friendships
     * const count = await prisma.friendship.count({
     *   where: {
     *     // ... the filter for the Friendships we want to count
     *   }
     * })
    **/
    count<T extends FriendshipCountArgs>(
      args?: Subset<T, FriendshipCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FriendshipCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Friendship.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FriendshipAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FriendshipAggregateArgs>(args: Subset<T, FriendshipAggregateArgs>): Prisma.PrismaPromise<GetFriendshipAggregateType<T>>

    /**
     * Group by Friendship.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FriendshipGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FriendshipGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FriendshipGroupByArgs['orderBy'] }
        : { orderBy?: FriendshipGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FriendshipGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFriendshipGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Friendship model
   */
  readonly fields: FriendshipFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Friendship.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FriendshipClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    profile1<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    profile2<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Friendship model
   */
  interface FriendshipFieldRefs {
    readonly id: FieldRef<"Friendship", 'BigInt'>
    readonly accepted: FieldRef<"Friendship", 'Boolean'>
    readonly profile1_id: FieldRef<"Friendship", 'BigInt'>
    readonly profile2_id: FieldRef<"Friendship", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * Friendship findUnique
   */
  export type FriendshipFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Friendship
     */
    select?: FriendshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Friendship
     */
    omit?: FriendshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FriendshipInclude<ExtArgs> | null
    /**
     * Filter, which Friendship to fetch.
     */
    where: FriendshipWhereUniqueInput
  }

  /**
   * Friendship findUniqueOrThrow
   */
  export type FriendshipFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Friendship
     */
    select?: FriendshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Friendship
     */
    omit?: FriendshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FriendshipInclude<ExtArgs> | null
    /**
     * Filter, which Friendship to fetch.
     */
    where: FriendshipWhereUniqueInput
  }

  /**
   * Friendship findFirst
   */
  export type FriendshipFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Friendship
     */
    select?: FriendshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Friendship
     */
    omit?: FriendshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FriendshipInclude<ExtArgs> | null
    /**
     * Filter, which Friendship to fetch.
     */
    where?: FriendshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Friendships to fetch.
     */
    orderBy?: FriendshipOrderByWithRelationInput | FriendshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Friendships.
     */
    cursor?: FriendshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Friendships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Friendships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Friendships.
     */
    distinct?: FriendshipScalarFieldEnum | FriendshipScalarFieldEnum[]
  }

  /**
   * Friendship findFirstOrThrow
   */
  export type FriendshipFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Friendship
     */
    select?: FriendshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Friendship
     */
    omit?: FriendshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FriendshipInclude<ExtArgs> | null
    /**
     * Filter, which Friendship to fetch.
     */
    where?: FriendshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Friendships to fetch.
     */
    orderBy?: FriendshipOrderByWithRelationInput | FriendshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Friendships.
     */
    cursor?: FriendshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Friendships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Friendships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Friendships.
     */
    distinct?: FriendshipScalarFieldEnum | FriendshipScalarFieldEnum[]
  }

  /**
   * Friendship findMany
   */
  export type FriendshipFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Friendship
     */
    select?: FriendshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Friendship
     */
    omit?: FriendshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FriendshipInclude<ExtArgs> | null
    /**
     * Filter, which Friendships to fetch.
     */
    where?: FriendshipWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Friendships to fetch.
     */
    orderBy?: FriendshipOrderByWithRelationInput | FriendshipOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Friendships.
     */
    cursor?: FriendshipWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Friendships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Friendships.
     */
    skip?: number
    distinct?: FriendshipScalarFieldEnum | FriendshipScalarFieldEnum[]
  }

  /**
   * Friendship create
   */
  export type FriendshipCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Friendship
     */
    select?: FriendshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Friendship
     */
    omit?: FriendshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FriendshipInclude<ExtArgs> | null
    /**
     * The data needed to create a Friendship.
     */
    data: XOR<FriendshipCreateInput, FriendshipUncheckedCreateInput>
  }

  /**
   * Friendship createMany
   */
  export type FriendshipCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Friendships.
     */
    data: FriendshipCreateManyInput | FriendshipCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Friendship update
   */
  export type FriendshipUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Friendship
     */
    select?: FriendshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Friendship
     */
    omit?: FriendshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FriendshipInclude<ExtArgs> | null
    /**
     * The data needed to update a Friendship.
     */
    data: XOR<FriendshipUpdateInput, FriendshipUncheckedUpdateInput>
    /**
     * Choose, which Friendship to update.
     */
    where: FriendshipWhereUniqueInput
  }

  /**
   * Friendship updateMany
   */
  export type FriendshipUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Friendships.
     */
    data: XOR<FriendshipUpdateManyMutationInput, FriendshipUncheckedUpdateManyInput>
    /**
     * Filter which Friendships to update
     */
    where?: FriendshipWhereInput
    /**
     * Limit how many Friendships to update.
     */
    limit?: number
  }

  /**
   * Friendship upsert
   */
  export type FriendshipUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Friendship
     */
    select?: FriendshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Friendship
     */
    omit?: FriendshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FriendshipInclude<ExtArgs> | null
    /**
     * The filter to search for the Friendship to update in case it exists.
     */
    where: FriendshipWhereUniqueInput
    /**
     * In case the Friendship found by the `where` argument doesn't exist, create a new Friendship with this data.
     */
    create: XOR<FriendshipCreateInput, FriendshipUncheckedCreateInput>
    /**
     * In case the Friendship was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FriendshipUpdateInput, FriendshipUncheckedUpdateInput>
  }

  /**
   * Friendship delete
   */
  export type FriendshipDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Friendship
     */
    select?: FriendshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Friendship
     */
    omit?: FriendshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FriendshipInclude<ExtArgs> | null
    /**
     * Filter which Friendship to delete.
     */
    where: FriendshipWhereUniqueInput
  }

  /**
   * Friendship deleteMany
   */
  export type FriendshipDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Friendships to delete
     */
    where?: FriendshipWhereInput
    /**
     * Limit how many Friendships to delete.
     */
    limit?: number
  }

  /**
   * Friendship without action
   */
  export type FriendshipDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Friendship
     */
    select?: FriendshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Friendship
     */
    omit?: FriendshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FriendshipInclude<ExtArgs> | null
  }


  /**
   * Model Image
   */

  export type AggregateImage = {
    _count: ImageCountAggregateOutputType | null
    _avg: ImageAvgAggregateOutputType | null
    _sum: ImageSumAggregateOutputType | null
    _min: ImageMinAggregateOutputType | null
    _max: ImageMaxAggregateOutputType | null
  }

  export type ImageAvgAggregateOutputType = {
    id: number | null
  }

  export type ImageSumAggregateOutputType = {
    id: bigint | null
  }

  export type ImageMinAggregateOutputType = {
    id: bigint | null
    filename: string | null
    file: string | null
    uploaded_at: Date | null
  }

  export type ImageMaxAggregateOutputType = {
    id: bigint | null
    filename: string | null
    file: string | null
    uploaded_at: Date | null
  }

  export type ImageCountAggregateOutputType = {
    id: number
    filename: number
    file: number
    uploaded_at: number
    _all: number
  }


  export type ImageAvgAggregateInputType = {
    id?: true
  }

  export type ImageSumAggregateInputType = {
    id?: true
  }

  export type ImageMinAggregateInputType = {
    id?: true
    filename?: true
    file?: true
    uploaded_at?: true
  }

  export type ImageMaxAggregateInputType = {
    id?: true
    filename?: true
    file?: true
    uploaded_at?: true
  }

  export type ImageCountAggregateInputType = {
    id?: true
    filename?: true
    file?: true
    uploaded_at?: true
    _all?: true
  }

  export type ImageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Image to aggregate.
     */
    where?: ImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Images to fetch.
     */
    orderBy?: ImageOrderByWithRelationInput | ImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Images
    **/
    _count?: true | ImageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ImageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ImageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImageMaxAggregateInputType
  }

  export type GetImageAggregateType<T extends ImageAggregateArgs> = {
        [P in keyof T & keyof AggregateImage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImage[P]>
      : GetScalarType<T[P], AggregateImage[P]>
  }




  export type ImageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ImageWhereInput
    orderBy?: ImageOrderByWithAggregationInput | ImageOrderByWithAggregationInput[]
    by: ImageScalarFieldEnum[] | ImageScalarFieldEnum
    having?: ImageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImageCountAggregateInputType | true
    _avg?: ImageAvgAggregateInputType
    _sum?: ImageSumAggregateInputType
    _min?: ImageMinAggregateInputType
    _max?: ImageMaxAggregateInputType
  }

  export type ImageGroupByOutputType = {
    id: bigint
    filename: string
    file: string
    uploaded_at: Date
    _count: ImageCountAggregateOutputType | null
    _avg: ImageAvgAggregateOutputType | null
    _sum: ImageSumAggregateOutputType | null
    _min: ImageMinAggregateOutputType | null
    _max: ImageMaxAggregateOutputType | null
  }

  type GetImageGroupByPayload<T extends ImageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImageGroupByOutputType[P]>
            : GetScalarType<T[P], ImageGroupByOutputType[P]>
        }
      >
    >


  export type ImageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    filename?: boolean
    file?: boolean
    uploaded_at?: boolean
    album_images?: boolean | Image$album_imagesArgs<ExtArgs>
    post_app_post_images?: boolean | Image$post_app_post_imagesArgs<ExtArgs>
    _count?: boolean | ImageCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["image"]>



  export type ImageSelectScalar = {
    id?: boolean
    filename?: boolean
    file?: boolean
    uploaded_at?: boolean
  }

  export type ImageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "filename" | "file" | "uploaded_at", ExtArgs["result"]["image"]>
  export type ImageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    album_images?: boolean | Image$album_imagesArgs<ExtArgs>
    post_app_post_images?: boolean | Image$post_app_post_imagesArgs<ExtArgs>
    _count?: boolean | ImageCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ImagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Image"
    objects: {
      album_images: Prisma.$post_app_album_imagesPayload<ExtArgs>[]
      post_app_post_images: Prisma.$post_app_post_imagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      filename: string
      file: string
      uploaded_at: Date
    }, ExtArgs["result"]["image"]>
    composites: {}
  }

  type ImageGetPayload<S extends boolean | null | undefined | ImageDefaultArgs> = $Result.GetResult<Prisma.$ImagePayload, S>

  type ImageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ImageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ImageCountAggregateInputType | true
    }

  export interface ImageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Image'], meta: { name: 'Image' } }
    /**
     * Find zero or one Image that matches the filter.
     * @param {ImageFindUniqueArgs} args - Arguments to find a Image
     * @example
     * // Get one Image
     * const image = await prisma.image.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ImageFindUniqueArgs>(args: SelectSubset<T, ImageFindUniqueArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Image that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ImageFindUniqueOrThrowArgs} args - Arguments to find a Image
     * @example
     * // Get one Image
     * const image = await prisma.image.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ImageFindUniqueOrThrowArgs>(args: SelectSubset<T, ImageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Image that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageFindFirstArgs} args - Arguments to find a Image
     * @example
     * // Get one Image
     * const image = await prisma.image.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ImageFindFirstArgs>(args?: SelectSubset<T, ImageFindFirstArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Image that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageFindFirstOrThrowArgs} args - Arguments to find a Image
     * @example
     * // Get one Image
     * const image = await prisma.image.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ImageFindFirstOrThrowArgs>(args?: SelectSubset<T, ImageFindFirstOrThrowArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Images
     * const images = await prisma.image.findMany()
     * 
     * // Get first 10 Images
     * const images = await prisma.image.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const imageWithIdOnly = await prisma.image.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ImageFindManyArgs>(args?: SelectSubset<T, ImageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Image.
     * @param {ImageCreateArgs} args - Arguments to create a Image.
     * @example
     * // Create one Image
     * const Image = await prisma.image.create({
     *   data: {
     *     // ... data to create a Image
     *   }
     * })
     * 
     */
    create<T extends ImageCreateArgs>(args: SelectSubset<T, ImageCreateArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Images.
     * @param {ImageCreateManyArgs} args - Arguments to create many Images.
     * @example
     * // Create many Images
     * const image = await prisma.image.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ImageCreateManyArgs>(args?: SelectSubset<T, ImageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Image.
     * @param {ImageDeleteArgs} args - Arguments to delete one Image.
     * @example
     * // Delete one Image
     * const Image = await prisma.image.delete({
     *   where: {
     *     // ... filter to delete one Image
     *   }
     * })
     * 
     */
    delete<T extends ImageDeleteArgs>(args: SelectSubset<T, ImageDeleteArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Image.
     * @param {ImageUpdateArgs} args - Arguments to update one Image.
     * @example
     * // Update one Image
     * const image = await prisma.image.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ImageUpdateArgs>(args: SelectSubset<T, ImageUpdateArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Images.
     * @param {ImageDeleteManyArgs} args - Arguments to filter Images to delete.
     * @example
     * // Delete a few Images
     * const { count } = await prisma.image.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ImageDeleteManyArgs>(args?: SelectSubset<T, ImageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Images
     * const image = await prisma.image.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ImageUpdateManyArgs>(args: SelectSubset<T, ImageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Image.
     * @param {ImageUpsertArgs} args - Arguments to update or create a Image.
     * @example
     * // Update or create a Image
     * const image = await prisma.image.upsert({
     *   create: {
     *     // ... data to create a Image
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Image we want to update
     *   }
     * })
     */
    upsert<T extends ImageUpsertArgs>(args: SelectSubset<T, ImageUpsertArgs<ExtArgs>>): Prisma__ImageClient<$Result.GetResult<Prisma.$ImagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageCountArgs} args - Arguments to filter Images to count.
     * @example
     * // Count the number of Images
     * const count = await prisma.image.count({
     *   where: {
     *     // ... the filter for the Images we want to count
     *   }
     * })
    **/
    count<T extends ImageCountArgs>(
      args?: Subset<T, ImageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Image.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImageAggregateArgs>(args: Subset<T, ImageAggregateArgs>): Prisma.PrismaPromise<GetImageAggregateType<T>>

    /**
     * Group by Image.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ImageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ImageGroupByArgs['orderBy'] }
        : { orderBy?: ImageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ImageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Image model
   */
  readonly fields: ImageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Image.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ImageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    album_images<T extends Image$album_imagesArgs<ExtArgs> = {}>(args?: Subset<T, Image$album_imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_app_album_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    post_app_post_images<T extends Image$post_app_post_imagesArgs<ExtArgs> = {}>(args?: Subset<T, Image$post_app_post_imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_app_post_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Image model
   */
  interface ImageFieldRefs {
    readonly id: FieldRef<"Image", 'BigInt'>
    readonly filename: FieldRef<"Image", 'String'>
    readonly file: FieldRef<"Image", 'String'>
    readonly uploaded_at: FieldRef<"Image", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Image findUnique
   */
  export type ImageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Image
     */
    omit?: ImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * Filter, which Image to fetch.
     */
    where: ImageWhereUniqueInput
  }

  /**
   * Image findUniqueOrThrow
   */
  export type ImageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Image
     */
    omit?: ImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * Filter, which Image to fetch.
     */
    where: ImageWhereUniqueInput
  }

  /**
   * Image findFirst
   */
  export type ImageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Image
     */
    omit?: ImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * Filter, which Image to fetch.
     */
    where?: ImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Images to fetch.
     */
    orderBy?: ImageOrderByWithRelationInput | ImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Images.
     */
    cursor?: ImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Images.
     */
    distinct?: ImageScalarFieldEnum | ImageScalarFieldEnum[]
  }

  /**
   * Image findFirstOrThrow
   */
  export type ImageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Image
     */
    omit?: ImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * Filter, which Image to fetch.
     */
    where?: ImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Images to fetch.
     */
    orderBy?: ImageOrderByWithRelationInput | ImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Images.
     */
    cursor?: ImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Images.
     */
    distinct?: ImageScalarFieldEnum | ImageScalarFieldEnum[]
  }

  /**
   * Image findMany
   */
  export type ImageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Image
     */
    omit?: ImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * Filter, which Images to fetch.
     */
    where?: ImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Images to fetch.
     */
    orderBy?: ImageOrderByWithRelationInput | ImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Images.
     */
    cursor?: ImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Images.
     */
    skip?: number
    distinct?: ImageScalarFieldEnum | ImageScalarFieldEnum[]
  }

  /**
   * Image create
   */
  export type ImageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Image
     */
    omit?: ImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * The data needed to create a Image.
     */
    data: XOR<ImageCreateInput, ImageUncheckedCreateInput>
  }

  /**
   * Image createMany
   */
  export type ImageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Images.
     */
    data: ImageCreateManyInput | ImageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Image update
   */
  export type ImageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Image
     */
    omit?: ImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * The data needed to update a Image.
     */
    data: XOR<ImageUpdateInput, ImageUncheckedUpdateInput>
    /**
     * Choose, which Image to update.
     */
    where: ImageWhereUniqueInput
  }

  /**
   * Image updateMany
   */
  export type ImageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Images.
     */
    data: XOR<ImageUpdateManyMutationInput, ImageUncheckedUpdateManyInput>
    /**
     * Filter which Images to update
     */
    where?: ImageWhereInput
    /**
     * Limit how many Images to update.
     */
    limit?: number
  }

  /**
   * Image upsert
   */
  export type ImageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Image
     */
    omit?: ImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * The filter to search for the Image to update in case it exists.
     */
    where: ImageWhereUniqueInput
    /**
     * In case the Image found by the `where` argument doesn't exist, create a new Image with this data.
     */
    create: XOR<ImageCreateInput, ImageUncheckedCreateInput>
    /**
     * In case the Image was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ImageUpdateInput, ImageUncheckedUpdateInput>
  }

  /**
   * Image delete
   */
  export type ImageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Image
     */
    omit?: ImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
    /**
     * Filter which Image to delete.
     */
    where: ImageWhereUniqueInput
  }

  /**
   * Image deleteMany
   */
  export type ImageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Images to delete
     */
    where?: ImageWhereInput
    /**
     * Limit how many Images to delete.
     */
    limit?: number
  }

  /**
   * Image.album_images
   */
  export type Image$album_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_album_images
     */
    select?: post_app_album_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_album_images
     */
    omit?: post_app_album_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_album_imagesInclude<ExtArgs> | null
    where?: post_app_album_imagesWhereInput
    orderBy?: post_app_album_imagesOrderByWithRelationInput | post_app_album_imagesOrderByWithRelationInput[]
    cursor?: post_app_album_imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_app_album_imagesScalarFieldEnum | Post_app_album_imagesScalarFieldEnum[]
  }

  /**
   * Image.post_app_post_images
   */
  export type Image$post_app_post_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_images
     */
    select?: post_app_post_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_images
     */
    omit?: post_app_post_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_imagesInclude<ExtArgs> | null
    where?: post_app_post_imagesWhereInput
    orderBy?: post_app_post_imagesOrderByWithRelationInput | post_app_post_imagesOrderByWithRelationInput[]
    cursor?: post_app_post_imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_app_post_imagesScalarFieldEnum | Post_app_post_imagesScalarFieldEnum[]
  }

  /**
   * Image without action
   */
  export type ImageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Image
     */
    select?: ImageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Image
     */
    omit?: ImageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ImageInclude<ExtArgs> | null
  }


  /**
   * Model Post
   */

  export type AggregatePost = {
    _count: PostCountAggregateOutputType | null
    _avg: PostAvgAggregateOutputType | null
    _sum: PostSumAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  export type PostAvgAggregateOutputType = {
    id: number | null
    author_id: number | null
  }

  export type PostSumAggregateOutputType = {
    id: bigint | null
    author_id: bigint | null
  }

  export type PostMinAggregateOutputType = {
    id: bigint | null
    title: string | null
    content: string | null
    author_id: bigint | null
    topic: string | null
  }

  export type PostMaxAggregateOutputType = {
    id: bigint | null
    title: string | null
    content: string | null
    author_id: bigint | null
    topic: string | null
  }

  export type PostCountAggregateOutputType = {
    id: number
    title: number
    content: number
    author_id: number
    topic: number
    _all: number
  }


  export type PostAvgAggregateInputType = {
    id?: true
    author_id?: true
  }

  export type PostSumAggregateInputType = {
    id?: true
    author_id?: true
  }

  export type PostMinAggregateInputType = {
    id?: true
    title?: true
    content?: true
    author_id?: true
    topic?: true
  }

  export type PostMaxAggregateInputType = {
    id?: true
    title?: true
    content?: true
    author_id?: true
    topic?: true
  }

  export type PostCountAggregateInputType = {
    id?: true
    title?: true
    content?: true
    author_id?: true
    topic?: true
    _all?: true
  }

  export type PostAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Post to aggregate.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Posts
    **/
    _count?: true | PostCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PostAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PostSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PostMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PostMaxAggregateInputType
  }

  export type GetPostAggregateType<T extends PostAggregateArgs> = {
        [P in keyof T & keyof AggregatePost]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost[P]>
      : GetScalarType<T[P], AggregatePost[P]>
  }




  export type PostGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PostWhereInput
    orderBy?: PostOrderByWithAggregationInput | PostOrderByWithAggregationInput[]
    by: PostScalarFieldEnum[] | PostScalarFieldEnum
    having?: PostScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PostCountAggregateInputType | true
    _avg?: PostAvgAggregateInputType
    _sum?: PostSumAggregateInputType
    _min?: PostMinAggregateInputType
    _max?: PostMaxAggregateInputType
  }

  export type PostGroupByOutputType = {
    id: bigint
    title: string
    content: string
    author_id: bigint
    topic: string
    _count: PostCountAggregateOutputType | null
    _avg: PostAvgAggregateOutputType | null
    _sum: PostSumAggregateOutputType | null
    _min: PostMinAggregateOutputType | null
    _max: PostMaxAggregateOutputType | null
  }

  type GetPostGroupByPayload<T extends PostGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PostGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PostGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PostGroupByOutputType[P]>
            : GetScalarType<T[P], PostGroupByOutputType[P]>
        }
      >
    >


  export type PostSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    content?: boolean
    author_id?: boolean
    topic?: boolean
    post_app_link?: boolean | Post$post_app_linkArgs<ExtArgs>
    author?: boolean | ProfileDefaultArgs<ExtArgs>
    post_app_post_images?: boolean | Post$post_app_post_imagesArgs<ExtArgs>
    likes?: boolean | Post$likesArgs<ExtArgs>
    post_app_post_tags?: boolean | Post$post_app_post_tagsArgs<ExtArgs>
    views?: boolean | Post$viewsArgs<ExtArgs>
    _count?: boolean | PostCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post"]>



  export type PostSelectScalar = {
    id?: boolean
    title?: boolean
    content?: boolean
    author_id?: boolean
    topic?: boolean
  }

  export type PostOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "content" | "author_id" | "topic", ExtArgs["result"]["post"]>
  export type PostInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post_app_link?: boolean | Post$post_app_linkArgs<ExtArgs>
    author?: boolean | ProfileDefaultArgs<ExtArgs>
    post_app_post_images?: boolean | Post$post_app_post_imagesArgs<ExtArgs>
    likes?: boolean | Post$likesArgs<ExtArgs>
    post_app_post_tags?: boolean | Post$post_app_post_tagsArgs<ExtArgs>
    views?: boolean | Post$viewsArgs<ExtArgs>
    _count?: boolean | PostCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $PostPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Post"
    objects: {
      post_app_link: Prisma.$LinkPayload<ExtArgs>[]
      author: Prisma.$ProfilePayload<ExtArgs>
      post_app_post_images: Prisma.$post_app_post_imagesPayload<ExtArgs>[]
      likes: Prisma.$post_app_post_likesPayload<ExtArgs>[]
      post_app_post_tags: Prisma.$post_app_post_tagsPayload<ExtArgs>[]
      views: Prisma.$post_app_post_viewsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      title: string
      content: string
      author_id: bigint
      topic: string
    }, ExtArgs["result"]["post"]>
    composites: {}
  }

  type PostGetPayload<S extends boolean | null | undefined | PostDefaultArgs> = $Result.GetResult<Prisma.$PostPayload, S>

  type PostCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PostFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PostCountAggregateInputType | true
    }

  export interface PostDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Post'], meta: { name: 'Post' } }
    /**
     * Find zero or one Post that matches the filter.
     * @param {PostFindUniqueArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PostFindUniqueArgs>(args: SelectSubset<T, PostFindUniqueArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Post that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PostFindUniqueOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PostFindUniqueOrThrowArgs>(args: SelectSubset<T, PostFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindFirstArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PostFindFirstArgs>(args?: SelectSubset<T, PostFindFirstArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindFirstOrThrowArgs} args - Arguments to find a Post
     * @example
     * // Get one Post
     * const post = await prisma.post.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PostFindFirstOrThrowArgs>(args?: SelectSubset<T, PostFindFirstOrThrowArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Posts
     * const posts = await prisma.post.findMany()
     * 
     * // Get first 10 Posts
     * const posts = await prisma.post.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const postWithIdOnly = await prisma.post.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PostFindManyArgs>(args?: SelectSubset<T, PostFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Post.
     * @param {PostCreateArgs} args - Arguments to create a Post.
     * @example
     * // Create one Post
     * const Post = await prisma.post.create({
     *   data: {
     *     // ... data to create a Post
     *   }
     * })
     * 
     */
    create<T extends PostCreateArgs>(args: SelectSubset<T, PostCreateArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Posts.
     * @param {PostCreateManyArgs} args - Arguments to create many Posts.
     * @example
     * // Create many Posts
     * const post = await prisma.post.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PostCreateManyArgs>(args?: SelectSubset<T, PostCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Post.
     * @param {PostDeleteArgs} args - Arguments to delete one Post.
     * @example
     * // Delete one Post
     * const Post = await prisma.post.delete({
     *   where: {
     *     // ... filter to delete one Post
     *   }
     * })
     * 
     */
    delete<T extends PostDeleteArgs>(args: SelectSubset<T, PostDeleteArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Post.
     * @param {PostUpdateArgs} args - Arguments to update one Post.
     * @example
     * // Update one Post
     * const post = await prisma.post.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PostUpdateArgs>(args: SelectSubset<T, PostUpdateArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Posts.
     * @param {PostDeleteManyArgs} args - Arguments to filter Posts to delete.
     * @example
     * // Delete a few Posts
     * const { count } = await prisma.post.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PostDeleteManyArgs>(args?: SelectSubset<T, PostDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Posts
     * const post = await prisma.post.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PostUpdateManyArgs>(args: SelectSubset<T, PostUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Post.
     * @param {PostUpsertArgs} args - Arguments to update or create a Post.
     * @example
     * // Update or create a Post
     * const post = await prisma.post.upsert({
     *   create: {
     *     // ... data to create a Post
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post we want to update
     *   }
     * })
     */
    upsert<T extends PostUpsertArgs>(args: SelectSubset<T, PostUpsertArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostCountArgs} args - Arguments to filter Posts to count.
     * @example
     * // Count the number of Posts
     * const count = await prisma.post.count({
     *   where: {
     *     // ... the filter for the Posts we want to count
     *   }
     * })
    **/
    count<T extends PostCountArgs>(
      args?: Subset<T, PostCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PostCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PostAggregateArgs>(args: Subset<T, PostAggregateArgs>): Prisma.PrismaPromise<GetPostAggregateType<T>>

    /**
     * Group by Post.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PostGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PostGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PostGroupByArgs['orderBy'] }
        : { orderBy?: PostGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PostGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Post model
   */
  readonly fields: PostFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Post.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PostClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post_app_link<T extends Post$post_app_linkArgs<ExtArgs> = {}>(args?: Subset<T, Post$post_app_linkArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LinkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    author<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    post_app_post_images<T extends Post$post_app_post_imagesArgs<ExtArgs> = {}>(args?: Subset<T, Post$post_app_post_imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_app_post_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    likes<T extends Post$likesArgs<ExtArgs> = {}>(args?: Subset<T, Post$likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_app_post_likesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    post_app_post_tags<T extends Post$post_app_post_tagsArgs<ExtArgs> = {}>(args?: Subset<T, Post$post_app_post_tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_app_post_tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    views<T extends Post$viewsArgs<ExtArgs> = {}>(args?: Subset<T, Post$viewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_app_post_viewsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Post model
   */
  interface PostFieldRefs {
    readonly id: FieldRef<"Post", 'BigInt'>
    readonly title: FieldRef<"Post", 'String'>
    readonly content: FieldRef<"Post", 'String'>
    readonly author_id: FieldRef<"Post", 'BigInt'>
    readonly topic: FieldRef<"Post", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Post findUnique
   */
  export type PostFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post findUniqueOrThrow
   */
  export type PostFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post findFirst
   */
  export type PostFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post findFirstOrThrow
   */
  export type PostFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Post to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Posts.
     */
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post findMany
   */
  export type PostFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter, which Posts to fetch.
     */
    where?: PostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Posts to fetch.
     */
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Posts.
     */
    cursor?: PostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Posts.
     */
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Post create
   */
  export type PostCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * The data needed to create a Post.
     */
    data: XOR<PostCreateInput, PostUncheckedCreateInput>
  }

  /**
   * Post createMany
   */
  export type PostCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Posts.
     */
    data: PostCreateManyInput | PostCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Post update
   */
  export type PostUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * The data needed to update a Post.
     */
    data: XOR<PostUpdateInput, PostUncheckedUpdateInput>
    /**
     * Choose, which Post to update.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post updateMany
   */
  export type PostUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Posts.
     */
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyInput>
    /**
     * Filter which Posts to update
     */
    where?: PostWhereInput
    /**
     * Limit how many Posts to update.
     */
    limit?: number
  }

  /**
   * Post upsert
   */
  export type PostUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * The filter to search for the Post to update in case it exists.
     */
    where: PostWhereUniqueInput
    /**
     * In case the Post found by the `where` argument doesn't exist, create a new Post with this data.
     */
    create: XOR<PostCreateInput, PostUncheckedCreateInput>
    /**
     * In case the Post was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PostUpdateInput, PostUncheckedUpdateInput>
  }

  /**
   * Post delete
   */
  export type PostDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    /**
     * Filter which Post to delete.
     */
    where: PostWhereUniqueInput
  }

  /**
   * Post deleteMany
   */
  export type PostDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Posts to delete
     */
    where?: PostWhereInput
    /**
     * Limit how many Posts to delete.
     */
    limit?: number
  }

  /**
   * Post.post_app_link
   */
  export type Post$post_app_linkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Link
     */
    select?: LinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Link
     */
    omit?: LinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkInclude<ExtArgs> | null
    where?: LinkWhereInput
    orderBy?: LinkOrderByWithRelationInput | LinkOrderByWithRelationInput[]
    cursor?: LinkWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LinkScalarFieldEnum | LinkScalarFieldEnum[]
  }

  /**
   * Post.post_app_post_images
   */
  export type Post$post_app_post_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_images
     */
    select?: post_app_post_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_images
     */
    omit?: post_app_post_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_imagesInclude<ExtArgs> | null
    where?: post_app_post_imagesWhereInput
    orderBy?: post_app_post_imagesOrderByWithRelationInput | post_app_post_imagesOrderByWithRelationInput[]
    cursor?: post_app_post_imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_app_post_imagesScalarFieldEnum | Post_app_post_imagesScalarFieldEnum[]
  }

  /**
   * Post.likes
   */
  export type Post$likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_likes
     */
    select?: post_app_post_likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_likes
     */
    omit?: post_app_post_likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_likesInclude<ExtArgs> | null
    where?: post_app_post_likesWhereInput
    orderBy?: post_app_post_likesOrderByWithRelationInput | post_app_post_likesOrderByWithRelationInput[]
    cursor?: post_app_post_likesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_app_post_likesScalarFieldEnum | Post_app_post_likesScalarFieldEnum[]
  }

  /**
   * Post.post_app_post_tags
   */
  export type Post$post_app_post_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_tags
     */
    select?: post_app_post_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_tags
     */
    omit?: post_app_post_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_tagsInclude<ExtArgs> | null
    where?: post_app_post_tagsWhereInput
    orderBy?: post_app_post_tagsOrderByWithRelationInput | post_app_post_tagsOrderByWithRelationInput[]
    cursor?: post_app_post_tagsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_app_post_tagsScalarFieldEnum | Post_app_post_tagsScalarFieldEnum[]
  }

  /**
   * Post.views
   */
  export type Post$viewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_views
     */
    select?: post_app_post_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_views
     */
    omit?: post_app_post_viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_viewsInclude<ExtArgs> | null
    where?: post_app_post_viewsWhereInput
    orderBy?: post_app_post_viewsOrderByWithRelationInput | post_app_post_viewsOrderByWithRelationInput[]
    cursor?: post_app_post_viewsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_app_post_viewsScalarFieldEnum | Post_app_post_viewsScalarFieldEnum[]
  }

  /**
   * Post without action
   */
  export type PostDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
  }


  /**
   * Model Tags
   */

  export type AggregateTags = {
    _count: TagsCountAggregateOutputType | null
    _avg: TagsAvgAggregateOutputType | null
    _sum: TagsSumAggregateOutputType | null
    _min: TagsMinAggregateOutputType | null
    _max: TagsMaxAggregateOutputType | null
  }

  export type TagsAvgAggregateOutputType = {
    id: number | null
  }

  export type TagsSumAggregateOutputType = {
    id: bigint | null
  }

  export type TagsMinAggregateOutputType = {
    id: bigint | null
    name: string | null
  }

  export type TagsMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
  }

  export type TagsCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type TagsAvgAggregateInputType = {
    id?: true
  }

  export type TagsSumAggregateInputType = {
    id?: true
  }

  export type TagsMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type TagsMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type TagsCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type TagsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tags to aggregate.
     */
    where?: TagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagsOrderByWithRelationInput | TagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tags
    **/
    _count?: true | TagsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TagsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TagsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TagsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TagsMaxAggregateInputType
  }

  export type GetTagsAggregateType<T extends TagsAggregateArgs> = {
        [P in keyof T & keyof AggregateTags]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTags[P]>
      : GetScalarType<T[P], AggregateTags[P]>
  }




  export type TagsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TagsWhereInput
    orderBy?: TagsOrderByWithAggregationInput | TagsOrderByWithAggregationInput[]
    by: TagsScalarFieldEnum[] | TagsScalarFieldEnum
    having?: TagsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TagsCountAggregateInputType | true
    _avg?: TagsAvgAggregateInputType
    _sum?: TagsSumAggregateInputType
    _min?: TagsMinAggregateInputType
    _max?: TagsMaxAggregateInputType
  }

  export type TagsGroupByOutputType = {
    id: bigint
    name: string
    _count: TagsCountAggregateOutputType | null
    _avg: TagsAvgAggregateOutputType | null
    _sum: TagsSumAggregateOutputType | null
    _min: TagsMinAggregateOutputType | null
    _max: TagsMaxAggregateOutputType | null
  }

  type GetTagsGroupByPayload<T extends TagsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TagsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TagsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TagsGroupByOutputType[P]>
            : GetScalarType<T[P], TagsGroupByOutputType[P]>
        }
      >
    >


  export type TagsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    post_app_album?: boolean | Tags$post_app_albumArgs<ExtArgs>
    post_app_post_tags?: boolean | Tags$post_app_post_tagsArgs<ExtArgs>
    _count?: boolean | TagsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tags"]>



  export type TagsSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type TagsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["tags"]>
  export type TagsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post_app_album?: boolean | Tags$post_app_albumArgs<ExtArgs>
    post_app_post_tags?: boolean | Tags$post_app_post_tagsArgs<ExtArgs>
    _count?: boolean | TagsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $TagsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tags"
    objects: {
      post_app_album: Prisma.$AlbumPayload<ExtArgs>[]
      post_app_post_tags: Prisma.$post_app_post_tagsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
    }, ExtArgs["result"]["tags"]>
    composites: {}
  }

  type TagsGetPayload<S extends boolean | null | undefined | TagsDefaultArgs> = $Result.GetResult<Prisma.$TagsPayload, S>

  type TagsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TagsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TagsCountAggregateInputType | true
    }

  export interface TagsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tags'], meta: { name: 'Tags' } }
    /**
     * Find zero or one Tags that matches the filter.
     * @param {TagsFindUniqueArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TagsFindUniqueArgs>(args: SelectSubset<T, TagsFindUniqueArgs<ExtArgs>>): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tags that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TagsFindUniqueOrThrowArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TagsFindUniqueOrThrowArgs>(args: SelectSubset<T, TagsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsFindFirstArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TagsFindFirstArgs>(args?: SelectSubset<T, TagsFindFirstArgs<ExtArgs>>): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tags that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsFindFirstOrThrowArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TagsFindFirstOrThrowArgs>(args?: SelectSubset<T, TagsFindFirstOrThrowArgs<ExtArgs>>): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tags
     * const tags = await prisma.tags.findMany()
     * 
     * // Get first 10 Tags
     * const tags = await prisma.tags.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tagsWithIdOnly = await prisma.tags.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TagsFindManyArgs>(args?: SelectSubset<T, TagsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tags.
     * @param {TagsCreateArgs} args - Arguments to create a Tags.
     * @example
     * // Create one Tags
     * const Tags = await prisma.tags.create({
     *   data: {
     *     // ... data to create a Tags
     *   }
     * })
     * 
     */
    create<T extends TagsCreateArgs>(args: SelectSubset<T, TagsCreateArgs<ExtArgs>>): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tags.
     * @param {TagsCreateManyArgs} args - Arguments to create many Tags.
     * @example
     * // Create many Tags
     * const tags = await prisma.tags.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TagsCreateManyArgs>(args?: SelectSubset<T, TagsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tags.
     * @param {TagsDeleteArgs} args - Arguments to delete one Tags.
     * @example
     * // Delete one Tags
     * const Tags = await prisma.tags.delete({
     *   where: {
     *     // ... filter to delete one Tags
     *   }
     * })
     * 
     */
    delete<T extends TagsDeleteArgs>(args: SelectSubset<T, TagsDeleteArgs<ExtArgs>>): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tags.
     * @param {TagsUpdateArgs} args - Arguments to update one Tags.
     * @example
     * // Update one Tags
     * const tags = await prisma.tags.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TagsUpdateArgs>(args: SelectSubset<T, TagsUpdateArgs<ExtArgs>>): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tags.
     * @param {TagsDeleteManyArgs} args - Arguments to filter Tags to delete.
     * @example
     * // Delete a few Tags
     * const { count } = await prisma.tags.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TagsDeleteManyArgs>(args?: SelectSubset<T, TagsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tags
     * const tags = await prisma.tags.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TagsUpdateManyArgs>(args: SelectSubset<T, TagsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tags.
     * @param {TagsUpsertArgs} args - Arguments to update or create a Tags.
     * @example
     * // Update or create a Tags
     * const tags = await prisma.tags.upsert({
     *   create: {
     *     // ... data to create a Tags
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tags we want to update
     *   }
     * })
     */
    upsert<T extends TagsUpsertArgs>(args: SelectSubset<T, TagsUpsertArgs<ExtArgs>>): Prisma__TagsClient<$Result.GetResult<Prisma.$TagsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsCountArgs} args - Arguments to filter Tags to count.
     * @example
     * // Count the number of Tags
     * const count = await prisma.tags.count({
     *   where: {
     *     // ... the filter for the Tags we want to count
     *   }
     * })
    **/
    count<T extends TagsCountArgs>(
      args?: Subset<T, TagsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TagsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TagsAggregateArgs>(args: Subset<T, TagsAggregateArgs>): Prisma.PrismaPromise<GetTagsAggregateType<T>>

    /**
     * Group by Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TagsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TagsGroupByArgs['orderBy'] }
        : { orderBy?: TagsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TagsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTagsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tags model
   */
  readonly fields: TagsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tags.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TagsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post_app_album<T extends Tags$post_app_albumArgs<ExtArgs> = {}>(args?: Subset<T, Tags$post_app_albumArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlbumPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    post_app_post_tags<T extends Tags$post_app_post_tagsArgs<ExtArgs> = {}>(args?: Subset<T, Tags$post_app_post_tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_app_post_tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Tags model
   */
  interface TagsFieldRefs {
    readonly id: FieldRef<"Tags", 'BigInt'>
    readonly name: FieldRef<"Tags", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Tags findUnique
   */
  export type TagsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tags
     */
    omit?: TagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * Filter, which Tags to fetch.
     */
    where: TagsWhereUniqueInput
  }

  /**
   * Tags findUniqueOrThrow
   */
  export type TagsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tags
     */
    omit?: TagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * Filter, which Tags to fetch.
     */
    where: TagsWhereUniqueInput
  }

  /**
   * Tags findFirst
   */
  export type TagsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tags
     */
    omit?: TagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * Filter, which Tags to fetch.
     */
    where?: TagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagsOrderByWithRelationInput | TagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tags.
     */
    cursor?: TagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tags.
     */
    distinct?: TagsScalarFieldEnum | TagsScalarFieldEnum[]
  }

  /**
   * Tags findFirstOrThrow
   */
  export type TagsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tags
     */
    omit?: TagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * Filter, which Tags to fetch.
     */
    where?: TagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagsOrderByWithRelationInput | TagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tags.
     */
    cursor?: TagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tags.
     */
    distinct?: TagsScalarFieldEnum | TagsScalarFieldEnum[]
  }

  /**
   * Tags findMany
   */
  export type TagsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tags
     */
    omit?: TagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * Filter, which Tags to fetch.
     */
    where?: TagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tags to fetch.
     */
    orderBy?: TagsOrderByWithRelationInput | TagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tags.
     */
    cursor?: TagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tags.
     */
    skip?: number
    distinct?: TagsScalarFieldEnum | TagsScalarFieldEnum[]
  }

  /**
   * Tags create
   */
  export type TagsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tags
     */
    omit?: TagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * The data needed to create a Tags.
     */
    data: XOR<TagsCreateInput, TagsUncheckedCreateInput>
  }

  /**
   * Tags createMany
   */
  export type TagsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tags.
     */
    data: TagsCreateManyInput | TagsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tags update
   */
  export type TagsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tags
     */
    omit?: TagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * The data needed to update a Tags.
     */
    data: XOR<TagsUpdateInput, TagsUncheckedUpdateInput>
    /**
     * Choose, which Tags to update.
     */
    where: TagsWhereUniqueInput
  }

  /**
   * Tags updateMany
   */
  export type TagsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tags.
     */
    data: XOR<TagsUpdateManyMutationInput, TagsUncheckedUpdateManyInput>
    /**
     * Filter which Tags to update
     */
    where?: TagsWhereInput
    /**
     * Limit how many Tags to update.
     */
    limit?: number
  }

  /**
   * Tags upsert
   */
  export type TagsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tags
     */
    omit?: TagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * The filter to search for the Tags to update in case it exists.
     */
    where: TagsWhereUniqueInput
    /**
     * In case the Tags found by the `where` argument doesn't exist, create a new Tags with this data.
     */
    create: XOR<TagsCreateInput, TagsUncheckedCreateInput>
    /**
     * In case the Tags was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TagsUpdateInput, TagsUncheckedUpdateInput>
  }

  /**
   * Tags delete
   */
  export type TagsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tags
     */
    omit?: TagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagsInclude<ExtArgs> | null
    /**
     * Filter which Tags to delete.
     */
    where: TagsWhereUniqueInput
  }

  /**
   * Tags deleteMany
   */
  export type TagsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tags to delete
     */
    where?: TagsWhereInput
    /**
     * Limit how many Tags to delete.
     */
    limit?: number
  }

  /**
   * Tags.post_app_album
   */
  export type Tags$post_app_albumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Album
     */
    select?: AlbumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Album
     */
    omit?: AlbumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlbumInclude<ExtArgs> | null
    where?: AlbumWhereInput
    orderBy?: AlbumOrderByWithRelationInput | AlbumOrderByWithRelationInput[]
    cursor?: AlbumWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlbumScalarFieldEnum | AlbumScalarFieldEnum[]
  }

  /**
   * Tags.post_app_post_tags
   */
  export type Tags$post_app_post_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_tags
     */
    select?: post_app_post_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_tags
     */
    omit?: post_app_post_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_tagsInclude<ExtArgs> | null
    where?: post_app_post_tagsWhereInput
    orderBy?: post_app_post_tagsOrderByWithRelationInput | post_app_post_tagsOrderByWithRelationInput[]
    cursor?: post_app_post_tagsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_app_post_tagsScalarFieldEnum | Post_app_post_tagsScalarFieldEnum[]
  }

  /**
   * Tags without action
   */
  export type TagsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tags
     */
    select?: TagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Tags
     */
    omit?: TagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TagsInclude<ExtArgs> | null
  }


  /**
   * Model Link
   */

  export type AggregateLink = {
    _count: LinkCountAggregateOutputType | null
    _avg: LinkAvgAggregateOutputType | null
    _sum: LinkSumAggregateOutputType | null
    _min: LinkMinAggregateOutputType | null
    _max: LinkMaxAggregateOutputType | null
  }

  export type LinkAvgAggregateOutputType = {
    id: number | null
    post_id: number | null
  }

  export type LinkSumAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
  }

  export type LinkMinAggregateOutputType = {
    id: bigint | null
    url: string | null
    post_id: bigint | null
  }

  export type LinkMaxAggregateOutputType = {
    id: bigint | null
    url: string | null
    post_id: bigint | null
  }

  export type LinkCountAggregateOutputType = {
    id: number
    url: number
    post_id: number
    _all: number
  }


  export type LinkAvgAggregateInputType = {
    id?: true
    post_id?: true
  }

  export type LinkSumAggregateInputType = {
    id?: true
    post_id?: true
  }

  export type LinkMinAggregateInputType = {
    id?: true
    url?: true
    post_id?: true
  }

  export type LinkMaxAggregateInputType = {
    id?: true
    url?: true
    post_id?: true
  }

  export type LinkCountAggregateInputType = {
    id?: true
    url?: true
    post_id?: true
    _all?: true
  }

  export type LinkAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Link to aggregate.
     */
    where?: LinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Links to fetch.
     */
    orderBy?: LinkOrderByWithRelationInput | LinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Links.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Links
    **/
    _count?: true | LinkCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LinkAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LinkSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LinkMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LinkMaxAggregateInputType
  }

  export type GetLinkAggregateType<T extends LinkAggregateArgs> = {
        [P in keyof T & keyof AggregateLink]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLink[P]>
      : GetScalarType<T[P], AggregateLink[P]>
  }




  export type LinkGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LinkWhereInput
    orderBy?: LinkOrderByWithAggregationInput | LinkOrderByWithAggregationInput[]
    by: LinkScalarFieldEnum[] | LinkScalarFieldEnum
    having?: LinkScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LinkCountAggregateInputType | true
    _avg?: LinkAvgAggregateInputType
    _sum?: LinkSumAggregateInputType
    _min?: LinkMinAggregateInputType
    _max?: LinkMaxAggregateInputType
  }

  export type LinkGroupByOutputType = {
    id: bigint
    url: string
    post_id: bigint
    _count: LinkCountAggregateOutputType | null
    _avg: LinkAvgAggregateOutputType | null
    _sum: LinkSumAggregateOutputType | null
    _min: LinkMinAggregateOutputType | null
    _max: LinkMaxAggregateOutputType | null
  }

  type GetLinkGroupByPayload<T extends LinkGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LinkGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LinkGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LinkGroupByOutputType[P]>
            : GetScalarType<T[P], LinkGroupByOutputType[P]>
        }
      >
    >


  export type LinkSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    post_id?: boolean
    post_app_post?: boolean | PostDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["link"]>



  export type LinkSelectScalar = {
    id?: boolean
    url?: boolean
    post_id?: boolean
  }

  export type LinkOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "post_id", ExtArgs["result"]["link"]>
  export type LinkInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post_app_post?: boolean | PostDefaultArgs<ExtArgs>
  }

  export type $LinkPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Link"
    objects: {
      post_app_post: Prisma.$PostPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      url: string
      post_id: bigint
    }, ExtArgs["result"]["link"]>
    composites: {}
  }

  type LinkGetPayload<S extends boolean | null | undefined | LinkDefaultArgs> = $Result.GetResult<Prisma.$LinkPayload, S>

  type LinkCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LinkFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LinkCountAggregateInputType | true
    }

  export interface LinkDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Link'], meta: { name: 'Link' } }
    /**
     * Find zero or one Link that matches the filter.
     * @param {LinkFindUniqueArgs} args - Arguments to find a Link
     * @example
     * // Get one Link
     * const link = await prisma.link.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LinkFindUniqueArgs>(args: SelectSubset<T, LinkFindUniqueArgs<ExtArgs>>): Prisma__LinkClient<$Result.GetResult<Prisma.$LinkPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Link that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LinkFindUniqueOrThrowArgs} args - Arguments to find a Link
     * @example
     * // Get one Link
     * const link = await prisma.link.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LinkFindUniqueOrThrowArgs>(args: SelectSubset<T, LinkFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LinkClient<$Result.GetResult<Prisma.$LinkPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Link that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LinkFindFirstArgs} args - Arguments to find a Link
     * @example
     * // Get one Link
     * const link = await prisma.link.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LinkFindFirstArgs>(args?: SelectSubset<T, LinkFindFirstArgs<ExtArgs>>): Prisma__LinkClient<$Result.GetResult<Prisma.$LinkPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Link that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LinkFindFirstOrThrowArgs} args - Arguments to find a Link
     * @example
     * // Get one Link
     * const link = await prisma.link.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LinkFindFirstOrThrowArgs>(args?: SelectSubset<T, LinkFindFirstOrThrowArgs<ExtArgs>>): Prisma__LinkClient<$Result.GetResult<Prisma.$LinkPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Links that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LinkFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Links
     * const links = await prisma.link.findMany()
     * 
     * // Get first 10 Links
     * const links = await prisma.link.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const linkWithIdOnly = await prisma.link.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LinkFindManyArgs>(args?: SelectSubset<T, LinkFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LinkPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Link.
     * @param {LinkCreateArgs} args - Arguments to create a Link.
     * @example
     * // Create one Link
     * const Link = await prisma.link.create({
     *   data: {
     *     // ... data to create a Link
     *   }
     * })
     * 
     */
    create<T extends LinkCreateArgs>(args: SelectSubset<T, LinkCreateArgs<ExtArgs>>): Prisma__LinkClient<$Result.GetResult<Prisma.$LinkPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Links.
     * @param {LinkCreateManyArgs} args - Arguments to create many Links.
     * @example
     * // Create many Links
     * const link = await prisma.link.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LinkCreateManyArgs>(args?: SelectSubset<T, LinkCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Link.
     * @param {LinkDeleteArgs} args - Arguments to delete one Link.
     * @example
     * // Delete one Link
     * const Link = await prisma.link.delete({
     *   where: {
     *     // ... filter to delete one Link
     *   }
     * })
     * 
     */
    delete<T extends LinkDeleteArgs>(args: SelectSubset<T, LinkDeleteArgs<ExtArgs>>): Prisma__LinkClient<$Result.GetResult<Prisma.$LinkPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Link.
     * @param {LinkUpdateArgs} args - Arguments to update one Link.
     * @example
     * // Update one Link
     * const link = await prisma.link.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LinkUpdateArgs>(args: SelectSubset<T, LinkUpdateArgs<ExtArgs>>): Prisma__LinkClient<$Result.GetResult<Prisma.$LinkPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Links.
     * @param {LinkDeleteManyArgs} args - Arguments to filter Links to delete.
     * @example
     * // Delete a few Links
     * const { count } = await prisma.link.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LinkDeleteManyArgs>(args?: SelectSubset<T, LinkDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Links.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LinkUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Links
     * const link = await prisma.link.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LinkUpdateManyArgs>(args: SelectSubset<T, LinkUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Link.
     * @param {LinkUpsertArgs} args - Arguments to update or create a Link.
     * @example
     * // Update or create a Link
     * const link = await prisma.link.upsert({
     *   create: {
     *     // ... data to create a Link
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Link we want to update
     *   }
     * })
     */
    upsert<T extends LinkUpsertArgs>(args: SelectSubset<T, LinkUpsertArgs<ExtArgs>>): Prisma__LinkClient<$Result.GetResult<Prisma.$LinkPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Links.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LinkCountArgs} args - Arguments to filter Links to count.
     * @example
     * // Count the number of Links
     * const count = await prisma.link.count({
     *   where: {
     *     // ... the filter for the Links we want to count
     *   }
     * })
    **/
    count<T extends LinkCountArgs>(
      args?: Subset<T, LinkCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LinkCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Link.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LinkAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LinkAggregateArgs>(args: Subset<T, LinkAggregateArgs>): Prisma.PrismaPromise<GetLinkAggregateType<T>>

    /**
     * Group by Link.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LinkGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LinkGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LinkGroupByArgs['orderBy'] }
        : { orderBy?: LinkGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LinkGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLinkGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Link model
   */
  readonly fields: LinkFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Link.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LinkClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post_app_post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Link model
   */
  interface LinkFieldRefs {
    readonly id: FieldRef<"Link", 'BigInt'>
    readonly url: FieldRef<"Link", 'String'>
    readonly post_id: FieldRef<"Link", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * Link findUnique
   */
  export type LinkFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Link
     */
    select?: LinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Link
     */
    omit?: LinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkInclude<ExtArgs> | null
    /**
     * Filter, which Link to fetch.
     */
    where: LinkWhereUniqueInput
  }

  /**
   * Link findUniqueOrThrow
   */
  export type LinkFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Link
     */
    select?: LinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Link
     */
    omit?: LinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkInclude<ExtArgs> | null
    /**
     * Filter, which Link to fetch.
     */
    where: LinkWhereUniqueInput
  }

  /**
   * Link findFirst
   */
  export type LinkFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Link
     */
    select?: LinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Link
     */
    omit?: LinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkInclude<ExtArgs> | null
    /**
     * Filter, which Link to fetch.
     */
    where?: LinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Links to fetch.
     */
    orderBy?: LinkOrderByWithRelationInput | LinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Links.
     */
    cursor?: LinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Links.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Links.
     */
    distinct?: LinkScalarFieldEnum | LinkScalarFieldEnum[]
  }

  /**
   * Link findFirstOrThrow
   */
  export type LinkFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Link
     */
    select?: LinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Link
     */
    omit?: LinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkInclude<ExtArgs> | null
    /**
     * Filter, which Link to fetch.
     */
    where?: LinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Links to fetch.
     */
    orderBy?: LinkOrderByWithRelationInput | LinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Links.
     */
    cursor?: LinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Links.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Links.
     */
    distinct?: LinkScalarFieldEnum | LinkScalarFieldEnum[]
  }

  /**
   * Link findMany
   */
  export type LinkFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Link
     */
    select?: LinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Link
     */
    omit?: LinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkInclude<ExtArgs> | null
    /**
     * Filter, which Links to fetch.
     */
    where?: LinkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Links to fetch.
     */
    orderBy?: LinkOrderByWithRelationInput | LinkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Links.
     */
    cursor?: LinkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Links.
     */
    skip?: number
    distinct?: LinkScalarFieldEnum | LinkScalarFieldEnum[]
  }

  /**
   * Link create
   */
  export type LinkCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Link
     */
    select?: LinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Link
     */
    omit?: LinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkInclude<ExtArgs> | null
    /**
     * The data needed to create a Link.
     */
    data: XOR<LinkCreateInput, LinkUncheckedCreateInput>
  }

  /**
   * Link createMany
   */
  export type LinkCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Links.
     */
    data: LinkCreateManyInput | LinkCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Link update
   */
  export type LinkUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Link
     */
    select?: LinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Link
     */
    omit?: LinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkInclude<ExtArgs> | null
    /**
     * The data needed to update a Link.
     */
    data: XOR<LinkUpdateInput, LinkUncheckedUpdateInput>
    /**
     * Choose, which Link to update.
     */
    where: LinkWhereUniqueInput
  }

  /**
   * Link updateMany
   */
  export type LinkUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Links.
     */
    data: XOR<LinkUpdateManyMutationInput, LinkUncheckedUpdateManyInput>
    /**
     * Filter which Links to update
     */
    where?: LinkWhereInput
    /**
     * Limit how many Links to update.
     */
    limit?: number
  }

  /**
   * Link upsert
   */
  export type LinkUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Link
     */
    select?: LinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Link
     */
    omit?: LinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkInclude<ExtArgs> | null
    /**
     * The filter to search for the Link to update in case it exists.
     */
    where: LinkWhereUniqueInput
    /**
     * In case the Link found by the `where` argument doesn't exist, create a new Link with this data.
     */
    create: XOR<LinkCreateInput, LinkUncheckedCreateInput>
    /**
     * In case the Link was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LinkUpdateInput, LinkUncheckedUpdateInput>
  }

  /**
   * Link delete
   */
  export type LinkDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Link
     */
    select?: LinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Link
     */
    omit?: LinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkInclude<ExtArgs> | null
    /**
     * Filter which Link to delete.
     */
    where: LinkWhereUniqueInput
  }

  /**
   * Link deleteMany
   */
  export type LinkDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Links to delete
     */
    where?: LinkWhereInput
    /**
     * Limit how many Links to delete.
     */
    limit?: number
  }

  /**
   * Link without action
   */
  export type LinkDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Link
     */
    select?: LinkSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Link
     */
    omit?: LinkOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LinkInclude<ExtArgs> | null
  }


  /**
   * Model post_app_post_likes
   */

  export type AggregatePost_app_post_likes = {
    _count: Post_app_post_likesCountAggregateOutputType | null
    _avg: Post_app_post_likesAvgAggregateOutputType | null
    _sum: Post_app_post_likesSumAggregateOutputType | null
    _min: Post_app_post_likesMinAggregateOutputType | null
    _max: Post_app_post_likesMaxAggregateOutputType | null
  }

  export type Post_app_post_likesAvgAggregateOutputType = {
    id: number | null
    post_id: number | null
    profile_id: number | null
  }

  export type Post_app_post_likesSumAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    profile_id: bigint | null
  }

  export type Post_app_post_likesMinAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    profile_id: bigint | null
  }

  export type Post_app_post_likesMaxAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    profile_id: bigint | null
  }

  export type Post_app_post_likesCountAggregateOutputType = {
    id: number
    post_id: number
    profile_id: number
    _all: number
  }


  export type Post_app_post_likesAvgAggregateInputType = {
    id?: true
    post_id?: true
    profile_id?: true
  }

  export type Post_app_post_likesSumAggregateInputType = {
    id?: true
    post_id?: true
    profile_id?: true
  }

  export type Post_app_post_likesMinAggregateInputType = {
    id?: true
    post_id?: true
    profile_id?: true
  }

  export type Post_app_post_likesMaxAggregateInputType = {
    id?: true
    post_id?: true
    profile_id?: true
  }

  export type Post_app_post_likesCountAggregateInputType = {
    id?: true
    post_id?: true
    profile_id?: true
    _all?: true
  }

  export type Post_app_post_likesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_app_post_likes to aggregate.
     */
    where?: post_app_post_likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_likes to fetch.
     */
    orderBy?: post_app_post_likesOrderByWithRelationInput | post_app_post_likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: post_app_post_likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned post_app_post_likes
    **/
    _count?: true | Post_app_post_likesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Post_app_post_likesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Post_app_post_likesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Post_app_post_likesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Post_app_post_likesMaxAggregateInputType
  }

  export type GetPost_app_post_likesAggregateType<T extends Post_app_post_likesAggregateArgs> = {
        [P in keyof T & keyof AggregatePost_app_post_likes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost_app_post_likes[P]>
      : GetScalarType<T[P], AggregatePost_app_post_likes[P]>
  }




  export type post_app_post_likesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_app_post_likesWhereInput
    orderBy?: post_app_post_likesOrderByWithAggregationInput | post_app_post_likesOrderByWithAggregationInput[]
    by: Post_app_post_likesScalarFieldEnum[] | Post_app_post_likesScalarFieldEnum
    having?: post_app_post_likesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Post_app_post_likesCountAggregateInputType | true
    _avg?: Post_app_post_likesAvgAggregateInputType
    _sum?: Post_app_post_likesSumAggregateInputType
    _min?: Post_app_post_likesMinAggregateInputType
    _max?: Post_app_post_likesMaxAggregateInputType
  }

  export type Post_app_post_likesGroupByOutputType = {
    id: bigint
    post_id: bigint
    profile_id: bigint
    _count: Post_app_post_likesCountAggregateOutputType | null
    _avg: Post_app_post_likesAvgAggregateOutputType | null
    _sum: Post_app_post_likesSumAggregateOutputType | null
    _min: Post_app_post_likesMinAggregateOutputType | null
    _max: Post_app_post_likesMaxAggregateOutputType | null
  }

  type GetPost_app_post_likesGroupByPayload<T extends post_app_post_likesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Post_app_post_likesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Post_app_post_likesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Post_app_post_likesGroupByOutputType[P]>
            : GetScalarType<T[P], Post_app_post_likesGroupByOutputType[P]>
        }
      >
    >


  export type post_app_post_likesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    profile_id?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    user_app_profile?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post_app_post_likes"]>



  export type post_app_post_likesSelectScalar = {
    id?: boolean
    post_id?: boolean
    profile_id?: boolean
  }

  export type post_app_post_likesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "post_id" | "profile_id", ExtArgs["result"]["post_app_post_likes"]>
  export type post_app_post_likesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    user_app_profile?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $post_app_post_likesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "post_app_post_likes"
    objects: {
      post: Prisma.$PostPayload<ExtArgs>
      user_app_profile: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      post_id: bigint
      profile_id: bigint
    }, ExtArgs["result"]["post_app_post_likes"]>
    composites: {}
  }

  type post_app_post_likesGetPayload<S extends boolean | null | undefined | post_app_post_likesDefaultArgs> = $Result.GetResult<Prisma.$post_app_post_likesPayload, S>

  type post_app_post_likesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<post_app_post_likesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Post_app_post_likesCountAggregateInputType | true
    }

  export interface post_app_post_likesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['post_app_post_likes'], meta: { name: 'post_app_post_likes' } }
    /**
     * Find zero or one Post_app_post_likes that matches the filter.
     * @param {post_app_post_likesFindUniqueArgs} args - Arguments to find a Post_app_post_likes
     * @example
     * // Get one Post_app_post_likes
     * const post_app_post_likes = await prisma.post_app_post_likes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends post_app_post_likesFindUniqueArgs>(args: SelectSubset<T, post_app_post_likesFindUniqueArgs<ExtArgs>>): Prisma__post_app_post_likesClient<$Result.GetResult<Prisma.$post_app_post_likesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Post_app_post_likes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {post_app_post_likesFindUniqueOrThrowArgs} args - Arguments to find a Post_app_post_likes
     * @example
     * // Get one Post_app_post_likes
     * const post_app_post_likes = await prisma.post_app_post_likes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends post_app_post_likesFindUniqueOrThrowArgs>(args: SelectSubset<T, post_app_post_likesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__post_app_post_likesClient<$Result.GetResult<Prisma.$post_app_post_likesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_app_post_likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_likesFindFirstArgs} args - Arguments to find a Post_app_post_likes
     * @example
     * // Get one Post_app_post_likes
     * const post_app_post_likes = await prisma.post_app_post_likes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends post_app_post_likesFindFirstArgs>(args?: SelectSubset<T, post_app_post_likesFindFirstArgs<ExtArgs>>): Prisma__post_app_post_likesClient<$Result.GetResult<Prisma.$post_app_post_likesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_app_post_likes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_likesFindFirstOrThrowArgs} args - Arguments to find a Post_app_post_likes
     * @example
     * // Get one Post_app_post_likes
     * const post_app_post_likes = await prisma.post_app_post_likes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends post_app_post_likesFindFirstOrThrowArgs>(args?: SelectSubset<T, post_app_post_likesFindFirstOrThrowArgs<ExtArgs>>): Prisma__post_app_post_likesClient<$Result.GetResult<Prisma.$post_app_post_likesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Post_app_post_likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_likesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Post_app_post_likes
     * const post_app_post_likes = await prisma.post_app_post_likes.findMany()
     * 
     * // Get first 10 Post_app_post_likes
     * const post_app_post_likes = await prisma.post_app_post_likes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const post_app_post_likesWithIdOnly = await prisma.post_app_post_likes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends post_app_post_likesFindManyArgs>(args?: SelectSubset<T, post_app_post_likesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_app_post_likesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Post_app_post_likes.
     * @param {post_app_post_likesCreateArgs} args - Arguments to create a Post_app_post_likes.
     * @example
     * // Create one Post_app_post_likes
     * const Post_app_post_likes = await prisma.post_app_post_likes.create({
     *   data: {
     *     // ... data to create a Post_app_post_likes
     *   }
     * })
     * 
     */
    create<T extends post_app_post_likesCreateArgs>(args: SelectSubset<T, post_app_post_likesCreateArgs<ExtArgs>>): Prisma__post_app_post_likesClient<$Result.GetResult<Prisma.$post_app_post_likesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Post_app_post_likes.
     * @param {post_app_post_likesCreateManyArgs} args - Arguments to create many Post_app_post_likes.
     * @example
     * // Create many Post_app_post_likes
     * const post_app_post_likes = await prisma.post_app_post_likes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends post_app_post_likesCreateManyArgs>(args?: SelectSubset<T, post_app_post_likesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Post_app_post_likes.
     * @param {post_app_post_likesDeleteArgs} args - Arguments to delete one Post_app_post_likes.
     * @example
     * // Delete one Post_app_post_likes
     * const Post_app_post_likes = await prisma.post_app_post_likes.delete({
     *   where: {
     *     // ... filter to delete one Post_app_post_likes
     *   }
     * })
     * 
     */
    delete<T extends post_app_post_likesDeleteArgs>(args: SelectSubset<T, post_app_post_likesDeleteArgs<ExtArgs>>): Prisma__post_app_post_likesClient<$Result.GetResult<Prisma.$post_app_post_likesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Post_app_post_likes.
     * @param {post_app_post_likesUpdateArgs} args - Arguments to update one Post_app_post_likes.
     * @example
     * // Update one Post_app_post_likes
     * const post_app_post_likes = await prisma.post_app_post_likes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends post_app_post_likesUpdateArgs>(args: SelectSubset<T, post_app_post_likesUpdateArgs<ExtArgs>>): Prisma__post_app_post_likesClient<$Result.GetResult<Prisma.$post_app_post_likesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Post_app_post_likes.
     * @param {post_app_post_likesDeleteManyArgs} args - Arguments to filter Post_app_post_likes to delete.
     * @example
     * // Delete a few Post_app_post_likes
     * const { count } = await prisma.post_app_post_likes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends post_app_post_likesDeleteManyArgs>(args?: SelectSubset<T, post_app_post_likesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Post_app_post_likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_likesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Post_app_post_likes
     * const post_app_post_likes = await prisma.post_app_post_likes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends post_app_post_likesUpdateManyArgs>(args: SelectSubset<T, post_app_post_likesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Post_app_post_likes.
     * @param {post_app_post_likesUpsertArgs} args - Arguments to update or create a Post_app_post_likes.
     * @example
     * // Update or create a Post_app_post_likes
     * const post_app_post_likes = await prisma.post_app_post_likes.upsert({
     *   create: {
     *     // ... data to create a Post_app_post_likes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post_app_post_likes we want to update
     *   }
     * })
     */
    upsert<T extends post_app_post_likesUpsertArgs>(args: SelectSubset<T, post_app_post_likesUpsertArgs<ExtArgs>>): Prisma__post_app_post_likesClient<$Result.GetResult<Prisma.$post_app_post_likesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Post_app_post_likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_likesCountArgs} args - Arguments to filter Post_app_post_likes to count.
     * @example
     * // Count the number of Post_app_post_likes
     * const count = await prisma.post_app_post_likes.count({
     *   where: {
     *     // ... the filter for the Post_app_post_likes we want to count
     *   }
     * })
    **/
    count<T extends post_app_post_likesCountArgs>(
      args?: Subset<T, post_app_post_likesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Post_app_post_likesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post_app_post_likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Post_app_post_likesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Post_app_post_likesAggregateArgs>(args: Subset<T, Post_app_post_likesAggregateArgs>): Prisma.PrismaPromise<GetPost_app_post_likesAggregateType<T>>

    /**
     * Group by Post_app_post_likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_likesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends post_app_post_likesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: post_app_post_likesGroupByArgs['orderBy'] }
        : { orderBy?: post_app_post_likesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, post_app_post_likesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPost_app_post_likesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the post_app_post_likes model
   */
  readonly fields: post_app_post_likesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for post_app_post_likes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__post_app_post_likesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user_app_profile<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the post_app_post_likes model
   */
  interface post_app_post_likesFieldRefs {
    readonly id: FieldRef<"post_app_post_likes", 'BigInt'>
    readonly post_id: FieldRef<"post_app_post_likes", 'BigInt'>
    readonly profile_id: FieldRef<"post_app_post_likes", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * post_app_post_likes findUnique
   */
  export type post_app_post_likesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_likes
     */
    select?: post_app_post_likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_likes
     */
    omit?: post_app_post_likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_likesInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_likes to fetch.
     */
    where: post_app_post_likesWhereUniqueInput
  }

  /**
   * post_app_post_likes findUniqueOrThrow
   */
  export type post_app_post_likesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_likes
     */
    select?: post_app_post_likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_likes
     */
    omit?: post_app_post_likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_likesInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_likes to fetch.
     */
    where: post_app_post_likesWhereUniqueInput
  }

  /**
   * post_app_post_likes findFirst
   */
  export type post_app_post_likesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_likes
     */
    select?: post_app_post_likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_likes
     */
    omit?: post_app_post_likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_likesInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_likes to fetch.
     */
    where?: post_app_post_likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_likes to fetch.
     */
    orderBy?: post_app_post_likesOrderByWithRelationInput | post_app_post_likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_app_post_likes.
     */
    cursor?: post_app_post_likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_app_post_likes.
     */
    distinct?: Post_app_post_likesScalarFieldEnum | Post_app_post_likesScalarFieldEnum[]
  }

  /**
   * post_app_post_likes findFirstOrThrow
   */
  export type post_app_post_likesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_likes
     */
    select?: post_app_post_likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_likes
     */
    omit?: post_app_post_likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_likesInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_likes to fetch.
     */
    where?: post_app_post_likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_likes to fetch.
     */
    orderBy?: post_app_post_likesOrderByWithRelationInput | post_app_post_likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_app_post_likes.
     */
    cursor?: post_app_post_likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_app_post_likes.
     */
    distinct?: Post_app_post_likesScalarFieldEnum | Post_app_post_likesScalarFieldEnum[]
  }

  /**
   * post_app_post_likes findMany
   */
  export type post_app_post_likesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_likes
     */
    select?: post_app_post_likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_likes
     */
    omit?: post_app_post_likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_likesInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_likes to fetch.
     */
    where?: post_app_post_likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_likes to fetch.
     */
    orderBy?: post_app_post_likesOrderByWithRelationInput | post_app_post_likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing post_app_post_likes.
     */
    cursor?: post_app_post_likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_likes.
     */
    skip?: number
    distinct?: Post_app_post_likesScalarFieldEnum | Post_app_post_likesScalarFieldEnum[]
  }

  /**
   * post_app_post_likes create
   */
  export type post_app_post_likesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_likes
     */
    select?: post_app_post_likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_likes
     */
    omit?: post_app_post_likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_likesInclude<ExtArgs> | null
    /**
     * The data needed to create a post_app_post_likes.
     */
    data: XOR<post_app_post_likesCreateInput, post_app_post_likesUncheckedCreateInput>
  }

  /**
   * post_app_post_likes createMany
   */
  export type post_app_post_likesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many post_app_post_likes.
     */
    data: post_app_post_likesCreateManyInput | post_app_post_likesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * post_app_post_likes update
   */
  export type post_app_post_likesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_likes
     */
    select?: post_app_post_likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_likes
     */
    omit?: post_app_post_likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_likesInclude<ExtArgs> | null
    /**
     * The data needed to update a post_app_post_likes.
     */
    data: XOR<post_app_post_likesUpdateInput, post_app_post_likesUncheckedUpdateInput>
    /**
     * Choose, which post_app_post_likes to update.
     */
    where: post_app_post_likesWhereUniqueInput
  }

  /**
   * post_app_post_likes updateMany
   */
  export type post_app_post_likesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update post_app_post_likes.
     */
    data: XOR<post_app_post_likesUpdateManyMutationInput, post_app_post_likesUncheckedUpdateManyInput>
    /**
     * Filter which post_app_post_likes to update
     */
    where?: post_app_post_likesWhereInput
    /**
     * Limit how many post_app_post_likes to update.
     */
    limit?: number
  }

  /**
   * post_app_post_likes upsert
   */
  export type post_app_post_likesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_likes
     */
    select?: post_app_post_likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_likes
     */
    omit?: post_app_post_likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_likesInclude<ExtArgs> | null
    /**
     * The filter to search for the post_app_post_likes to update in case it exists.
     */
    where: post_app_post_likesWhereUniqueInput
    /**
     * In case the post_app_post_likes found by the `where` argument doesn't exist, create a new post_app_post_likes with this data.
     */
    create: XOR<post_app_post_likesCreateInput, post_app_post_likesUncheckedCreateInput>
    /**
     * In case the post_app_post_likes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<post_app_post_likesUpdateInput, post_app_post_likesUncheckedUpdateInput>
  }

  /**
   * post_app_post_likes delete
   */
  export type post_app_post_likesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_likes
     */
    select?: post_app_post_likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_likes
     */
    omit?: post_app_post_likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_likesInclude<ExtArgs> | null
    /**
     * Filter which post_app_post_likes to delete.
     */
    where: post_app_post_likesWhereUniqueInput
  }

  /**
   * post_app_post_likes deleteMany
   */
  export type post_app_post_likesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_app_post_likes to delete
     */
    where?: post_app_post_likesWhereInput
    /**
     * Limit how many post_app_post_likes to delete.
     */
    limit?: number
  }

  /**
   * post_app_post_likes without action
   */
  export type post_app_post_likesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_likes
     */
    select?: post_app_post_likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_likes
     */
    omit?: post_app_post_likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_likesInclude<ExtArgs> | null
  }


  /**
   * Model post_app_post_views
   */

  export type AggregatePost_app_post_views = {
    _count: Post_app_post_viewsCountAggregateOutputType | null
    _avg: Post_app_post_viewsAvgAggregateOutputType | null
    _sum: Post_app_post_viewsSumAggregateOutputType | null
    _min: Post_app_post_viewsMinAggregateOutputType | null
    _max: Post_app_post_viewsMaxAggregateOutputType | null
  }

  export type Post_app_post_viewsAvgAggregateOutputType = {
    id: number | null
    post_id: number | null
    profile_id: number | null
  }

  export type Post_app_post_viewsSumAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    profile_id: bigint | null
  }

  export type Post_app_post_viewsMinAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    profile_id: bigint | null
  }

  export type Post_app_post_viewsMaxAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    profile_id: bigint | null
  }

  export type Post_app_post_viewsCountAggregateOutputType = {
    id: number
    post_id: number
    profile_id: number
    _all: number
  }


  export type Post_app_post_viewsAvgAggregateInputType = {
    id?: true
    post_id?: true
    profile_id?: true
  }

  export type Post_app_post_viewsSumAggregateInputType = {
    id?: true
    post_id?: true
    profile_id?: true
  }

  export type Post_app_post_viewsMinAggregateInputType = {
    id?: true
    post_id?: true
    profile_id?: true
  }

  export type Post_app_post_viewsMaxAggregateInputType = {
    id?: true
    post_id?: true
    profile_id?: true
  }

  export type Post_app_post_viewsCountAggregateInputType = {
    id?: true
    post_id?: true
    profile_id?: true
    _all?: true
  }

  export type Post_app_post_viewsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_app_post_views to aggregate.
     */
    where?: post_app_post_viewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_views to fetch.
     */
    orderBy?: post_app_post_viewsOrderByWithRelationInput | post_app_post_viewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: post_app_post_viewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_views from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_views.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned post_app_post_views
    **/
    _count?: true | Post_app_post_viewsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Post_app_post_viewsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Post_app_post_viewsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Post_app_post_viewsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Post_app_post_viewsMaxAggregateInputType
  }

  export type GetPost_app_post_viewsAggregateType<T extends Post_app_post_viewsAggregateArgs> = {
        [P in keyof T & keyof AggregatePost_app_post_views]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePost_app_post_views[P]>
      : GetScalarType<T[P], AggregatePost_app_post_views[P]>
  }




  export type post_app_post_viewsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: post_app_post_viewsWhereInput
    orderBy?: post_app_post_viewsOrderByWithAggregationInput | post_app_post_viewsOrderByWithAggregationInput[]
    by: Post_app_post_viewsScalarFieldEnum[] | Post_app_post_viewsScalarFieldEnum
    having?: post_app_post_viewsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Post_app_post_viewsCountAggregateInputType | true
    _avg?: Post_app_post_viewsAvgAggregateInputType
    _sum?: Post_app_post_viewsSumAggregateInputType
    _min?: Post_app_post_viewsMinAggregateInputType
    _max?: Post_app_post_viewsMaxAggregateInputType
  }

  export type Post_app_post_viewsGroupByOutputType = {
    id: bigint
    post_id: bigint
    profile_id: bigint
    _count: Post_app_post_viewsCountAggregateOutputType | null
    _avg: Post_app_post_viewsAvgAggregateOutputType | null
    _sum: Post_app_post_viewsSumAggregateOutputType | null
    _min: Post_app_post_viewsMinAggregateOutputType | null
    _max: Post_app_post_viewsMaxAggregateOutputType | null
  }

  type GetPost_app_post_viewsGroupByPayload<T extends post_app_post_viewsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Post_app_post_viewsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Post_app_post_viewsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Post_app_post_viewsGroupByOutputType[P]>
            : GetScalarType<T[P], Post_app_post_viewsGroupByOutputType[P]>
        }
      >
    >


  export type post_app_post_viewsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    profile_id?: boolean
    post?: boolean | PostDefaultArgs<ExtArgs>
    user_app_profile?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["post_app_post_views"]>



  export type post_app_post_viewsSelectScalar = {
    id?: boolean
    post_id?: boolean
    profile_id?: boolean
  }

  export type post_app_post_viewsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "post_id" | "profile_id", ExtArgs["result"]["post_app_post_views"]>
  export type post_app_post_viewsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    post?: boolean | PostDefaultArgs<ExtArgs>
    user_app_profile?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $post_app_post_viewsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "post_app_post_views"
    objects: {
      post: Prisma.$PostPayload<ExtArgs>
      user_app_profile: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      post_id: bigint
      profile_id: bigint
    }, ExtArgs["result"]["post_app_post_views"]>
    composites: {}
  }

  type post_app_post_viewsGetPayload<S extends boolean | null | undefined | post_app_post_viewsDefaultArgs> = $Result.GetResult<Prisma.$post_app_post_viewsPayload, S>

  type post_app_post_viewsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<post_app_post_viewsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Post_app_post_viewsCountAggregateInputType | true
    }

  export interface post_app_post_viewsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['post_app_post_views'], meta: { name: 'post_app_post_views' } }
    /**
     * Find zero or one Post_app_post_views that matches the filter.
     * @param {post_app_post_viewsFindUniqueArgs} args - Arguments to find a Post_app_post_views
     * @example
     * // Get one Post_app_post_views
     * const post_app_post_views = await prisma.post_app_post_views.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends post_app_post_viewsFindUniqueArgs>(args: SelectSubset<T, post_app_post_viewsFindUniqueArgs<ExtArgs>>): Prisma__post_app_post_viewsClient<$Result.GetResult<Prisma.$post_app_post_viewsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Post_app_post_views that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {post_app_post_viewsFindUniqueOrThrowArgs} args - Arguments to find a Post_app_post_views
     * @example
     * // Get one Post_app_post_views
     * const post_app_post_views = await prisma.post_app_post_views.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends post_app_post_viewsFindUniqueOrThrowArgs>(args: SelectSubset<T, post_app_post_viewsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__post_app_post_viewsClient<$Result.GetResult<Prisma.$post_app_post_viewsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_app_post_views that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_viewsFindFirstArgs} args - Arguments to find a Post_app_post_views
     * @example
     * // Get one Post_app_post_views
     * const post_app_post_views = await prisma.post_app_post_views.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends post_app_post_viewsFindFirstArgs>(args?: SelectSubset<T, post_app_post_viewsFindFirstArgs<ExtArgs>>): Prisma__post_app_post_viewsClient<$Result.GetResult<Prisma.$post_app_post_viewsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Post_app_post_views that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_viewsFindFirstOrThrowArgs} args - Arguments to find a Post_app_post_views
     * @example
     * // Get one Post_app_post_views
     * const post_app_post_views = await prisma.post_app_post_views.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends post_app_post_viewsFindFirstOrThrowArgs>(args?: SelectSubset<T, post_app_post_viewsFindFirstOrThrowArgs<ExtArgs>>): Prisma__post_app_post_viewsClient<$Result.GetResult<Prisma.$post_app_post_viewsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Post_app_post_views that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_viewsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Post_app_post_views
     * const post_app_post_views = await prisma.post_app_post_views.findMany()
     * 
     * // Get first 10 Post_app_post_views
     * const post_app_post_views = await prisma.post_app_post_views.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const post_app_post_viewsWithIdOnly = await prisma.post_app_post_views.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends post_app_post_viewsFindManyArgs>(args?: SelectSubset<T, post_app_post_viewsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_app_post_viewsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Post_app_post_views.
     * @param {post_app_post_viewsCreateArgs} args - Arguments to create a Post_app_post_views.
     * @example
     * // Create one Post_app_post_views
     * const Post_app_post_views = await prisma.post_app_post_views.create({
     *   data: {
     *     // ... data to create a Post_app_post_views
     *   }
     * })
     * 
     */
    create<T extends post_app_post_viewsCreateArgs>(args: SelectSubset<T, post_app_post_viewsCreateArgs<ExtArgs>>): Prisma__post_app_post_viewsClient<$Result.GetResult<Prisma.$post_app_post_viewsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Post_app_post_views.
     * @param {post_app_post_viewsCreateManyArgs} args - Arguments to create many Post_app_post_views.
     * @example
     * // Create many Post_app_post_views
     * const post_app_post_views = await prisma.post_app_post_views.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends post_app_post_viewsCreateManyArgs>(args?: SelectSubset<T, post_app_post_viewsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Post_app_post_views.
     * @param {post_app_post_viewsDeleteArgs} args - Arguments to delete one Post_app_post_views.
     * @example
     * // Delete one Post_app_post_views
     * const Post_app_post_views = await prisma.post_app_post_views.delete({
     *   where: {
     *     // ... filter to delete one Post_app_post_views
     *   }
     * })
     * 
     */
    delete<T extends post_app_post_viewsDeleteArgs>(args: SelectSubset<T, post_app_post_viewsDeleteArgs<ExtArgs>>): Prisma__post_app_post_viewsClient<$Result.GetResult<Prisma.$post_app_post_viewsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Post_app_post_views.
     * @param {post_app_post_viewsUpdateArgs} args - Arguments to update one Post_app_post_views.
     * @example
     * // Update one Post_app_post_views
     * const post_app_post_views = await prisma.post_app_post_views.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends post_app_post_viewsUpdateArgs>(args: SelectSubset<T, post_app_post_viewsUpdateArgs<ExtArgs>>): Prisma__post_app_post_viewsClient<$Result.GetResult<Prisma.$post_app_post_viewsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Post_app_post_views.
     * @param {post_app_post_viewsDeleteManyArgs} args - Arguments to filter Post_app_post_views to delete.
     * @example
     * // Delete a few Post_app_post_views
     * const { count } = await prisma.post_app_post_views.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends post_app_post_viewsDeleteManyArgs>(args?: SelectSubset<T, post_app_post_viewsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Post_app_post_views.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_viewsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Post_app_post_views
     * const post_app_post_views = await prisma.post_app_post_views.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends post_app_post_viewsUpdateManyArgs>(args: SelectSubset<T, post_app_post_viewsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Post_app_post_views.
     * @param {post_app_post_viewsUpsertArgs} args - Arguments to update or create a Post_app_post_views.
     * @example
     * // Update or create a Post_app_post_views
     * const post_app_post_views = await prisma.post_app_post_views.upsert({
     *   create: {
     *     // ... data to create a Post_app_post_views
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Post_app_post_views we want to update
     *   }
     * })
     */
    upsert<T extends post_app_post_viewsUpsertArgs>(args: SelectSubset<T, post_app_post_viewsUpsertArgs<ExtArgs>>): Prisma__post_app_post_viewsClient<$Result.GetResult<Prisma.$post_app_post_viewsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Post_app_post_views.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_viewsCountArgs} args - Arguments to filter Post_app_post_views to count.
     * @example
     * // Count the number of Post_app_post_views
     * const count = await prisma.post_app_post_views.count({
     *   where: {
     *     // ... the filter for the Post_app_post_views we want to count
     *   }
     * })
    **/
    count<T extends post_app_post_viewsCountArgs>(
      args?: Subset<T, post_app_post_viewsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Post_app_post_viewsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Post_app_post_views.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Post_app_post_viewsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Post_app_post_viewsAggregateArgs>(args: Subset<T, Post_app_post_viewsAggregateArgs>): Prisma.PrismaPromise<GetPost_app_post_viewsAggregateType<T>>

    /**
     * Group by Post_app_post_views.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {post_app_post_viewsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends post_app_post_viewsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: post_app_post_viewsGroupByArgs['orderBy'] }
        : { orderBy?: post_app_post_viewsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, post_app_post_viewsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPost_app_post_viewsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the post_app_post_views model
   */
  readonly fields: post_app_post_viewsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for post_app_post_views.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__post_app_post_viewsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    post<T extends PostDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PostDefaultArgs<ExtArgs>>): Prisma__PostClient<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user_app_profile<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the post_app_post_views model
   */
  interface post_app_post_viewsFieldRefs {
    readonly id: FieldRef<"post_app_post_views", 'BigInt'>
    readonly post_id: FieldRef<"post_app_post_views", 'BigInt'>
    readonly profile_id: FieldRef<"post_app_post_views", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * post_app_post_views findUnique
   */
  export type post_app_post_viewsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_views
     */
    select?: post_app_post_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_views
     */
    omit?: post_app_post_viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_viewsInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_views to fetch.
     */
    where: post_app_post_viewsWhereUniqueInput
  }

  /**
   * post_app_post_views findUniqueOrThrow
   */
  export type post_app_post_viewsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_views
     */
    select?: post_app_post_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_views
     */
    omit?: post_app_post_viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_viewsInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_views to fetch.
     */
    where: post_app_post_viewsWhereUniqueInput
  }

  /**
   * post_app_post_views findFirst
   */
  export type post_app_post_viewsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_views
     */
    select?: post_app_post_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_views
     */
    omit?: post_app_post_viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_viewsInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_views to fetch.
     */
    where?: post_app_post_viewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_views to fetch.
     */
    orderBy?: post_app_post_viewsOrderByWithRelationInput | post_app_post_viewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_app_post_views.
     */
    cursor?: post_app_post_viewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_views from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_views.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_app_post_views.
     */
    distinct?: Post_app_post_viewsScalarFieldEnum | Post_app_post_viewsScalarFieldEnum[]
  }

  /**
   * post_app_post_views findFirstOrThrow
   */
  export type post_app_post_viewsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_views
     */
    select?: post_app_post_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_views
     */
    omit?: post_app_post_viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_viewsInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_views to fetch.
     */
    where?: post_app_post_viewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_views to fetch.
     */
    orderBy?: post_app_post_viewsOrderByWithRelationInput | post_app_post_viewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for post_app_post_views.
     */
    cursor?: post_app_post_viewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_views from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_views.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of post_app_post_views.
     */
    distinct?: Post_app_post_viewsScalarFieldEnum | Post_app_post_viewsScalarFieldEnum[]
  }

  /**
   * post_app_post_views findMany
   */
  export type post_app_post_viewsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_views
     */
    select?: post_app_post_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_views
     */
    omit?: post_app_post_viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_viewsInclude<ExtArgs> | null
    /**
     * Filter, which post_app_post_views to fetch.
     */
    where?: post_app_post_viewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of post_app_post_views to fetch.
     */
    orderBy?: post_app_post_viewsOrderByWithRelationInput | post_app_post_viewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing post_app_post_views.
     */
    cursor?: post_app_post_viewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` post_app_post_views from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` post_app_post_views.
     */
    skip?: number
    distinct?: Post_app_post_viewsScalarFieldEnum | Post_app_post_viewsScalarFieldEnum[]
  }

  /**
   * post_app_post_views create
   */
  export type post_app_post_viewsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_views
     */
    select?: post_app_post_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_views
     */
    omit?: post_app_post_viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_viewsInclude<ExtArgs> | null
    /**
     * The data needed to create a post_app_post_views.
     */
    data: XOR<post_app_post_viewsCreateInput, post_app_post_viewsUncheckedCreateInput>
  }

  /**
   * post_app_post_views createMany
   */
  export type post_app_post_viewsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many post_app_post_views.
     */
    data: post_app_post_viewsCreateManyInput | post_app_post_viewsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * post_app_post_views update
   */
  export type post_app_post_viewsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_views
     */
    select?: post_app_post_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_views
     */
    omit?: post_app_post_viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_viewsInclude<ExtArgs> | null
    /**
     * The data needed to update a post_app_post_views.
     */
    data: XOR<post_app_post_viewsUpdateInput, post_app_post_viewsUncheckedUpdateInput>
    /**
     * Choose, which post_app_post_views to update.
     */
    where: post_app_post_viewsWhereUniqueInput
  }

  /**
   * post_app_post_views updateMany
   */
  export type post_app_post_viewsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update post_app_post_views.
     */
    data: XOR<post_app_post_viewsUpdateManyMutationInput, post_app_post_viewsUncheckedUpdateManyInput>
    /**
     * Filter which post_app_post_views to update
     */
    where?: post_app_post_viewsWhereInput
    /**
     * Limit how many post_app_post_views to update.
     */
    limit?: number
  }

  /**
   * post_app_post_views upsert
   */
  export type post_app_post_viewsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_views
     */
    select?: post_app_post_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_views
     */
    omit?: post_app_post_viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_viewsInclude<ExtArgs> | null
    /**
     * The filter to search for the post_app_post_views to update in case it exists.
     */
    where: post_app_post_viewsWhereUniqueInput
    /**
     * In case the post_app_post_views found by the `where` argument doesn't exist, create a new post_app_post_views with this data.
     */
    create: XOR<post_app_post_viewsCreateInput, post_app_post_viewsUncheckedCreateInput>
    /**
     * In case the post_app_post_views was found with the provided `where` argument, update it with this data.
     */
    update: XOR<post_app_post_viewsUpdateInput, post_app_post_viewsUncheckedUpdateInput>
  }

  /**
   * post_app_post_views delete
   */
  export type post_app_post_viewsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_views
     */
    select?: post_app_post_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_views
     */
    omit?: post_app_post_viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_viewsInclude<ExtArgs> | null
    /**
     * Filter which post_app_post_views to delete.
     */
    where: post_app_post_viewsWhereUniqueInput
  }

  /**
   * post_app_post_views deleteMany
   */
  export type post_app_post_viewsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which post_app_post_views to delete
     */
    where?: post_app_post_viewsWhereInput
    /**
     * Limit how many post_app_post_views to delete.
     */
    limit?: number
  }

  /**
   * post_app_post_views without action
   */
  export type post_app_post_viewsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_views
     */
    select?: post_app_post_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_views
     */
    omit?: post_app_post_viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_viewsInclude<ExtArgs> | null
  }


  /**
   * Model Profile
   */

  export type AggregateProfile = {
    _count: ProfileCountAggregateOutputType | null
    _avg: ProfileAvgAggregateOutputType | null
    _sum: ProfileSumAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  export type ProfileAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type ProfileSumAggregateOutputType = {
    id: bigint | null
    user_id: number | null
  }

  export type ProfileMinAggregateOutputType = {
    id: bigint | null
    date_of_birth: Date | null
    user_id: number | null
    signature: string | null
  }

  export type ProfileMaxAggregateOutputType = {
    id: bigint | null
    date_of_birth: Date | null
    user_id: number | null
    signature: string | null
  }

  export type ProfileCountAggregateOutputType = {
    id: number
    date_of_birth: number
    user_id: number
    signature: number
    _all: number
  }


  export type ProfileAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type ProfileSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type ProfileMinAggregateInputType = {
    id?: true
    date_of_birth?: true
    user_id?: true
    signature?: true
  }

  export type ProfileMaxAggregateInputType = {
    id?: true
    date_of_birth?: true
    user_id?: true
    signature?: true
  }

  export type ProfileCountAggregateInputType = {
    id?: true
    date_of_birth?: true
    user_id?: true
    signature?: true
    _all?: true
  }

  export type ProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Profile to aggregate.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Profiles
    **/
    _count?: true | ProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProfileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProfileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProfileMaxAggregateInputType
  }

  export type GetProfileAggregateType<T extends ProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfile[P]>
      : GetScalarType<T[P], AggregateProfile[P]>
  }




  export type ProfileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfileWhereInput
    orderBy?: ProfileOrderByWithAggregationInput | ProfileOrderByWithAggregationInput[]
    by: ProfileScalarFieldEnum[] | ProfileScalarFieldEnum
    having?: ProfileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProfileCountAggregateInputType | true
    _avg?: ProfileAvgAggregateInputType
    _sum?: ProfileSumAggregateInputType
    _min?: ProfileMinAggregateInputType
    _max?: ProfileMaxAggregateInputType
  }

  export type ProfileGroupByOutputType = {
    id: bigint
    date_of_birth: Date
    user_id: number
    signature: string | null
    _count: ProfileCountAggregateOutputType | null
    _avg: ProfileAvgAggregateOutputType | null
    _sum: ProfileSumAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  type GetProfileGroupByPayload<T extends ProfileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProfileGroupByOutputType[P]>
            : GetScalarType<T[P], ProfileGroupByOutputType[P]>
        }
      >
    >


  export type ProfileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    date_of_birth?: boolean
    user_id?: boolean
    signature?: boolean
    administered_groups?: boolean | Profile$administered_groupsArgs<ExtArgs>
    chat_group_members?: boolean | Profile$chat_group_membersArgs<ExtArgs>
    chat_messages?: boolean | Profile$chat_messagesArgs<ExtArgs>
    album?: boolean | Profile$albumArgs<ExtArgs>
    post?: boolean | Profile$postArgs<ExtArgs>
    post_app_post_likes?: boolean | Profile$post_app_post_likesArgs<ExtArgs>
    post_app_post_views?: boolean | Profile$post_app_post_viewsArgs<ExtArgs>
    avatar?: boolean | Profile$avatarArgs<ExtArgs>
    friendship_from?: boolean | Profile$friendship_fromArgs<ExtArgs>
    friendship_to?: boolean | Profile$friendship_toArgs<ExtArgs>
    auth_user?: boolean | auth_userDefaultArgs<ExtArgs>
    _count?: boolean | ProfileCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>



  export type ProfileSelectScalar = {
    id?: boolean
    date_of_birth?: boolean
    user_id?: boolean
    signature?: boolean
  }

  export type ProfileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "date_of_birth" | "user_id" | "signature", ExtArgs["result"]["profile"]>
  export type ProfileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    administered_groups?: boolean | Profile$administered_groupsArgs<ExtArgs>
    chat_group_members?: boolean | Profile$chat_group_membersArgs<ExtArgs>
    chat_messages?: boolean | Profile$chat_messagesArgs<ExtArgs>
    album?: boolean | Profile$albumArgs<ExtArgs>
    post?: boolean | Profile$postArgs<ExtArgs>
    post_app_post_likes?: boolean | Profile$post_app_post_likesArgs<ExtArgs>
    post_app_post_views?: boolean | Profile$post_app_post_viewsArgs<ExtArgs>
    avatar?: boolean | Profile$avatarArgs<ExtArgs>
    friendship_from?: boolean | Profile$friendship_fromArgs<ExtArgs>
    friendship_to?: boolean | Profile$friendship_toArgs<ExtArgs>
    auth_user?: boolean | auth_userDefaultArgs<ExtArgs>
    _count?: boolean | ProfileCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ProfilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Profile"
    objects: {
      administered_groups: Prisma.$ChatGroupPayload<ExtArgs>[]
      chat_group_members: Prisma.$chat_app_chatgroup_membersPayload<ExtArgs>[]
      chat_messages: Prisma.$ChatMessagePayload<ExtArgs>[]
      album: Prisma.$AlbumPayload<ExtArgs>[]
      post: Prisma.$PostPayload<ExtArgs>[]
      post_app_post_likes: Prisma.$post_app_post_likesPayload<ExtArgs>[]
      post_app_post_views: Prisma.$post_app_post_viewsPayload<ExtArgs>[]
      avatar: Prisma.$AvatarPayload<ExtArgs>[]
      friendship_from: Prisma.$FriendshipPayload<ExtArgs>[]
      friendship_to: Prisma.$FriendshipPayload<ExtArgs>[]
      auth_user: Prisma.$auth_userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      date_of_birth: Date
      user_id: number
      signature: string | null
    }, ExtArgs["result"]["profile"]>
    composites: {}
  }

  type ProfileGetPayload<S extends boolean | null | undefined | ProfileDefaultArgs> = $Result.GetResult<Prisma.$ProfilePayload, S>

  type ProfileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProfileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProfileCountAggregateInputType | true
    }

  export interface ProfileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Profile'], meta: { name: 'Profile' } }
    /**
     * Find zero or one Profile that matches the filter.
     * @param {ProfileFindUniqueArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProfileFindUniqueArgs>(args: SelectSubset<T, ProfileFindUniqueArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Profile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProfileFindUniqueOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProfileFindUniqueOrThrowArgs>(args: SelectSubset<T, ProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindFirstArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProfileFindFirstArgs>(args?: SelectSubset<T, ProfileFindFirstArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindFirstOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProfileFindFirstOrThrowArgs>(args?: SelectSubset<T, ProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Profiles
     * const profiles = await prisma.profile.findMany()
     * 
     * // Get first 10 Profiles
     * const profiles = await prisma.profile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const profileWithIdOnly = await prisma.profile.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProfileFindManyArgs>(args?: SelectSubset<T, ProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Profile.
     * @param {ProfileCreateArgs} args - Arguments to create a Profile.
     * @example
     * // Create one Profile
     * const Profile = await prisma.profile.create({
     *   data: {
     *     // ... data to create a Profile
     *   }
     * })
     * 
     */
    create<T extends ProfileCreateArgs>(args: SelectSubset<T, ProfileCreateArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Profiles.
     * @param {ProfileCreateManyArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProfileCreateManyArgs>(args?: SelectSubset<T, ProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Profile.
     * @param {ProfileDeleteArgs} args - Arguments to delete one Profile.
     * @example
     * // Delete one Profile
     * const Profile = await prisma.profile.delete({
     *   where: {
     *     // ... filter to delete one Profile
     *   }
     * })
     * 
     */
    delete<T extends ProfileDeleteArgs>(args: SelectSubset<T, ProfileDeleteArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Profile.
     * @param {ProfileUpdateArgs} args - Arguments to update one Profile.
     * @example
     * // Update one Profile
     * const profile = await prisma.profile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProfileUpdateArgs>(args: SelectSubset<T, ProfileUpdateArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Profiles.
     * @param {ProfileDeleteManyArgs} args - Arguments to filter Profiles to delete.
     * @example
     * // Delete a few Profiles
     * const { count } = await prisma.profile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProfileDeleteManyArgs>(args?: SelectSubset<T, ProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Profiles
     * const profile = await prisma.profile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProfileUpdateManyArgs>(args: SelectSubset<T, ProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Profile.
     * @param {ProfileUpsertArgs} args - Arguments to update or create a Profile.
     * @example
     * // Update or create a Profile
     * const profile = await prisma.profile.upsert({
     *   create: {
     *     // ... data to create a Profile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Profile we want to update
     *   }
     * })
     */
    upsert<T extends ProfileUpsertArgs>(args: SelectSubset<T, ProfileUpsertArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileCountArgs} args - Arguments to filter Profiles to count.
     * @example
     * // Count the number of Profiles
     * const count = await prisma.profile.count({
     *   where: {
     *     // ... the filter for the Profiles we want to count
     *   }
     * })
    **/
    count<T extends ProfileCountArgs>(
      args?: Subset<T, ProfileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProfileAggregateArgs>(args: Subset<T, ProfileAggregateArgs>): Prisma.PrismaPromise<GetProfileAggregateType<T>>

    /**
     * Group by Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProfileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProfileGroupByArgs['orderBy'] }
        : { orderBy?: ProfileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Profile model
   */
  readonly fields: ProfileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Profile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProfileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    administered_groups<T extends Profile$administered_groupsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$administered_groupsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatGroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    chat_group_members<T extends Profile$chat_group_membersArgs<ExtArgs> = {}>(args?: Subset<T, Profile$chat_group_membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_app_chatgroup_membersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    chat_messages<T extends Profile$chat_messagesArgs<ExtArgs> = {}>(args?: Subset<T, Profile$chat_messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ChatMessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    album<T extends Profile$albumArgs<ExtArgs> = {}>(args?: Subset<T, Profile$albumArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlbumPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    post<T extends Profile$postArgs<ExtArgs> = {}>(args?: Subset<T, Profile$postArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    post_app_post_likes<T extends Profile$post_app_post_likesArgs<ExtArgs> = {}>(args?: Subset<T, Profile$post_app_post_likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_app_post_likesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    post_app_post_views<T extends Profile$post_app_post_viewsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$post_app_post_viewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$post_app_post_viewsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    avatar<T extends Profile$avatarArgs<ExtArgs> = {}>(args?: Subset<T, Profile$avatarArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvatarPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    friendship_from<T extends Profile$friendship_fromArgs<ExtArgs> = {}>(args?: Subset<T, Profile$friendship_fromArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FriendshipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    friendship_to<T extends Profile$friendship_toArgs<ExtArgs> = {}>(args?: Subset<T, Profile$friendship_toArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FriendshipPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    auth_user<T extends auth_userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, auth_userDefaultArgs<ExtArgs>>): Prisma__auth_userClient<$Result.GetResult<Prisma.$auth_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Profile model
   */
  interface ProfileFieldRefs {
    readonly id: FieldRef<"Profile", 'BigInt'>
    readonly date_of_birth: FieldRef<"Profile", 'DateTime'>
    readonly user_id: FieldRef<"Profile", 'Int'>
    readonly signature: FieldRef<"Profile", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Profile findUnique
   */
  export type ProfileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile findUniqueOrThrow
   */
  export type ProfileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile findFirst
   */
  export type ProfileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile findFirstOrThrow
   */
  export type ProfileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile findMany
   */
  export type ProfileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profiles to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile create
   */
  export type ProfileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The data needed to create a Profile.
     */
    data: XOR<ProfileCreateInput, ProfileUncheckedCreateInput>
  }

  /**
   * Profile createMany
   */
  export type ProfileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Profiles.
     */
    data: ProfileCreateManyInput | ProfileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Profile update
   */
  export type ProfileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The data needed to update a Profile.
     */
    data: XOR<ProfileUpdateInput, ProfileUncheckedUpdateInput>
    /**
     * Choose, which Profile to update.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile updateMany
   */
  export type ProfileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Profiles.
     */
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyInput>
    /**
     * Filter which Profiles to update
     */
    where?: ProfileWhereInput
    /**
     * Limit how many Profiles to update.
     */
    limit?: number
  }

  /**
   * Profile upsert
   */
  export type ProfileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The filter to search for the Profile to update in case it exists.
     */
    where: ProfileWhereUniqueInput
    /**
     * In case the Profile found by the `where` argument doesn't exist, create a new Profile with this data.
     */
    create: XOR<ProfileCreateInput, ProfileUncheckedCreateInput>
    /**
     * In case the Profile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProfileUpdateInput, ProfileUncheckedUpdateInput>
  }

  /**
   * Profile delete
   */
  export type ProfileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter which Profile to delete.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile deleteMany
   */
  export type ProfileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Profiles to delete
     */
    where?: ProfileWhereInput
    /**
     * Limit how many Profiles to delete.
     */
    limit?: number
  }

  /**
   * Profile.administered_groups
   */
  export type Profile$administered_groupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatGroup
     */
    select?: ChatGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatGroup
     */
    omit?: ChatGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatGroupInclude<ExtArgs> | null
    where?: ChatGroupWhereInput
    orderBy?: ChatGroupOrderByWithRelationInput | ChatGroupOrderByWithRelationInput[]
    cursor?: ChatGroupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChatGroupScalarFieldEnum | ChatGroupScalarFieldEnum[]
  }

  /**
   * Profile.chat_group_members
   */
  export type Profile$chat_group_membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_app_chatgroup_members
     */
    select?: chat_app_chatgroup_membersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_app_chatgroup_members
     */
    omit?: chat_app_chatgroup_membersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_app_chatgroup_membersInclude<ExtArgs> | null
    where?: chat_app_chatgroup_membersWhereInput
    orderBy?: chat_app_chatgroup_membersOrderByWithRelationInput | chat_app_chatgroup_membersOrderByWithRelationInput[]
    cursor?: chat_app_chatgroup_membersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Chat_app_chatgroup_membersScalarFieldEnum | Chat_app_chatgroup_membersScalarFieldEnum[]
  }

  /**
   * Profile.chat_messages
   */
  export type Profile$chat_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ChatMessage
     */
    select?: ChatMessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ChatMessage
     */
    omit?: ChatMessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ChatMessageInclude<ExtArgs> | null
    where?: ChatMessageWhereInput
    orderBy?: ChatMessageOrderByWithRelationInput | ChatMessageOrderByWithRelationInput[]
    cursor?: ChatMessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ChatMessageScalarFieldEnum | ChatMessageScalarFieldEnum[]
  }

  /**
   * Profile.album
   */
  export type Profile$albumArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Album
     */
    select?: AlbumSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Album
     */
    omit?: AlbumOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlbumInclude<ExtArgs> | null
    where?: AlbumWhereInput
    orderBy?: AlbumOrderByWithRelationInput | AlbumOrderByWithRelationInput[]
    cursor?: AlbumWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlbumScalarFieldEnum | AlbumScalarFieldEnum[]
  }

  /**
   * Profile.post
   */
  export type Profile$postArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Post
     */
    select?: PostSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Post
     */
    omit?: PostOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PostInclude<ExtArgs> | null
    where?: PostWhereInput
    orderBy?: PostOrderByWithRelationInput | PostOrderByWithRelationInput[]
    cursor?: PostWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PostScalarFieldEnum | PostScalarFieldEnum[]
  }

  /**
   * Profile.post_app_post_likes
   */
  export type Profile$post_app_post_likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_likes
     */
    select?: post_app_post_likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_likes
     */
    omit?: post_app_post_likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_likesInclude<ExtArgs> | null
    where?: post_app_post_likesWhereInput
    orderBy?: post_app_post_likesOrderByWithRelationInput | post_app_post_likesOrderByWithRelationInput[]
    cursor?: post_app_post_likesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_app_post_likesScalarFieldEnum | Post_app_post_likesScalarFieldEnum[]
  }

  /**
   * Profile.post_app_post_views
   */
  export type Profile$post_app_post_viewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the post_app_post_views
     */
    select?: post_app_post_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the post_app_post_views
     */
    omit?: post_app_post_viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: post_app_post_viewsInclude<ExtArgs> | null
    where?: post_app_post_viewsWhereInput
    orderBy?: post_app_post_viewsOrderByWithRelationInput | post_app_post_viewsOrderByWithRelationInput[]
    cursor?: post_app_post_viewsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Post_app_post_viewsScalarFieldEnum | Post_app_post_viewsScalarFieldEnum[]
  }

  /**
   * Profile.avatar
   */
  export type Profile$avatarArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatar
     */
    select?: AvatarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avatar
     */
    omit?: AvatarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvatarInclude<ExtArgs> | null
    where?: AvatarWhereInput
    orderBy?: AvatarOrderByWithRelationInput | AvatarOrderByWithRelationInput[]
    cursor?: AvatarWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AvatarScalarFieldEnum | AvatarScalarFieldEnum[]
  }

  /**
   * Profile.friendship_from
   */
  export type Profile$friendship_fromArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Friendship
     */
    select?: FriendshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Friendship
     */
    omit?: FriendshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FriendshipInclude<ExtArgs> | null
    where?: FriendshipWhereInput
    orderBy?: FriendshipOrderByWithRelationInput | FriendshipOrderByWithRelationInput[]
    cursor?: FriendshipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FriendshipScalarFieldEnum | FriendshipScalarFieldEnum[]
  }

  /**
   * Profile.friendship_to
   */
  export type Profile$friendship_toArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Friendship
     */
    select?: FriendshipSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Friendship
     */
    omit?: FriendshipOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FriendshipInclude<ExtArgs> | null
    where?: FriendshipWhereInput
    orderBy?: FriendshipOrderByWithRelationInput | FriendshipOrderByWithRelationInput[]
    cursor?: FriendshipWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FriendshipScalarFieldEnum | FriendshipScalarFieldEnum[]
  }

  /**
   * Profile without action
   */
  export type ProfileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
  }


  /**
   * Model Avatar
   */

  export type AggregateAvatar = {
    _count: AvatarCountAggregateOutputType | null
    _avg: AvatarAvgAggregateOutputType | null
    _sum: AvatarSumAggregateOutputType | null
    _min: AvatarMinAggregateOutputType | null
    _max: AvatarMaxAggregateOutputType | null
  }

  export type AvatarAvgAggregateOutputType = {
    id: number | null
    profile_id: number | null
  }

  export type AvatarSumAggregateOutputType = {
    id: bigint | null
    profile_id: bigint | null
  }

  export type AvatarMinAggregateOutputType = {
    id: bigint | null
    image: string | null
    active: boolean | null
    shown: boolean | null
    profile_id: bigint | null
  }

  export type AvatarMaxAggregateOutputType = {
    id: bigint | null
    image: string | null
    active: boolean | null
    shown: boolean | null
    profile_id: bigint | null
  }

  export type AvatarCountAggregateOutputType = {
    id: number
    image: number
    active: number
    shown: number
    profile_id: number
    _all: number
  }


  export type AvatarAvgAggregateInputType = {
    id?: true
    profile_id?: true
  }

  export type AvatarSumAggregateInputType = {
    id?: true
    profile_id?: true
  }

  export type AvatarMinAggregateInputType = {
    id?: true
    image?: true
    active?: true
    shown?: true
    profile_id?: true
  }

  export type AvatarMaxAggregateInputType = {
    id?: true
    image?: true
    active?: true
    shown?: true
    profile_id?: true
  }

  export type AvatarCountAggregateInputType = {
    id?: true
    image?: true
    active?: true
    shown?: true
    profile_id?: true
    _all?: true
  }

  export type AvatarAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Avatar to aggregate.
     */
    where?: AvatarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avatars to fetch.
     */
    orderBy?: AvatarOrderByWithRelationInput | AvatarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AvatarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avatars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avatars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Avatars
    **/
    _count?: true | AvatarCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AvatarAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AvatarSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AvatarMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AvatarMaxAggregateInputType
  }

  export type GetAvatarAggregateType<T extends AvatarAggregateArgs> = {
        [P in keyof T & keyof AggregateAvatar]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAvatar[P]>
      : GetScalarType<T[P], AggregateAvatar[P]>
  }




  export type AvatarGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AvatarWhereInput
    orderBy?: AvatarOrderByWithAggregationInput | AvatarOrderByWithAggregationInput[]
    by: AvatarScalarFieldEnum[] | AvatarScalarFieldEnum
    having?: AvatarScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AvatarCountAggregateInputType | true
    _avg?: AvatarAvgAggregateInputType
    _sum?: AvatarSumAggregateInputType
    _min?: AvatarMinAggregateInputType
    _max?: AvatarMaxAggregateInputType
  }

  export type AvatarGroupByOutputType = {
    id: bigint
    image: string
    active: boolean
    shown: boolean
    profile_id: bigint
    _count: AvatarCountAggregateOutputType | null
    _avg: AvatarAvgAggregateOutputType | null
    _sum: AvatarSumAggregateOutputType | null
    _min: AvatarMinAggregateOutputType | null
    _max: AvatarMaxAggregateOutputType | null
  }

  type GetAvatarGroupByPayload<T extends AvatarGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AvatarGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AvatarGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AvatarGroupByOutputType[P]>
            : GetScalarType<T[P], AvatarGroupByOutputType[P]>
        }
      >
    >


  export type AvatarSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    image?: boolean
    active?: boolean
    shown?: boolean
    profile_id?: boolean
    profile?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["avatar"]>



  export type AvatarSelectScalar = {
    id?: boolean
    image?: boolean
    active?: boolean
    shown?: boolean
    profile_id?: boolean
  }

  export type AvatarOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "image" | "active" | "shown" | "profile_id", ExtArgs["result"]["avatar"]>
  export type AvatarInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    profile?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $AvatarPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Avatar"
    objects: {
      profile: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      image: string
      active: boolean
      shown: boolean
      profile_id: bigint
    }, ExtArgs["result"]["avatar"]>
    composites: {}
  }

  type AvatarGetPayload<S extends boolean | null | undefined | AvatarDefaultArgs> = $Result.GetResult<Prisma.$AvatarPayload, S>

  type AvatarCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AvatarFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AvatarCountAggregateInputType | true
    }

  export interface AvatarDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Avatar'], meta: { name: 'Avatar' } }
    /**
     * Find zero or one Avatar that matches the filter.
     * @param {AvatarFindUniqueArgs} args - Arguments to find a Avatar
     * @example
     * // Get one Avatar
     * const avatar = await prisma.avatar.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AvatarFindUniqueArgs>(args: SelectSubset<T, AvatarFindUniqueArgs<ExtArgs>>): Prisma__AvatarClient<$Result.GetResult<Prisma.$AvatarPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Avatar that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AvatarFindUniqueOrThrowArgs} args - Arguments to find a Avatar
     * @example
     * // Get one Avatar
     * const avatar = await prisma.avatar.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AvatarFindUniqueOrThrowArgs>(args: SelectSubset<T, AvatarFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AvatarClient<$Result.GetResult<Prisma.$AvatarPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Avatar that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvatarFindFirstArgs} args - Arguments to find a Avatar
     * @example
     * // Get one Avatar
     * const avatar = await prisma.avatar.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AvatarFindFirstArgs>(args?: SelectSubset<T, AvatarFindFirstArgs<ExtArgs>>): Prisma__AvatarClient<$Result.GetResult<Prisma.$AvatarPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Avatar that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvatarFindFirstOrThrowArgs} args - Arguments to find a Avatar
     * @example
     * // Get one Avatar
     * const avatar = await prisma.avatar.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AvatarFindFirstOrThrowArgs>(args?: SelectSubset<T, AvatarFindFirstOrThrowArgs<ExtArgs>>): Prisma__AvatarClient<$Result.GetResult<Prisma.$AvatarPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Avatars that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvatarFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Avatars
     * const avatars = await prisma.avatar.findMany()
     * 
     * // Get first 10 Avatars
     * const avatars = await prisma.avatar.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const avatarWithIdOnly = await prisma.avatar.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AvatarFindManyArgs>(args?: SelectSubset<T, AvatarFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AvatarPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Avatar.
     * @param {AvatarCreateArgs} args - Arguments to create a Avatar.
     * @example
     * // Create one Avatar
     * const Avatar = await prisma.avatar.create({
     *   data: {
     *     // ... data to create a Avatar
     *   }
     * })
     * 
     */
    create<T extends AvatarCreateArgs>(args: SelectSubset<T, AvatarCreateArgs<ExtArgs>>): Prisma__AvatarClient<$Result.GetResult<Prisma.$AvatarPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Avatars.
     * @param {AvatarCreateManyArgs} args - Arguments to create many Avatars.
     * @example
     * // Create many Avatars
     * const avatar = await prisma.avatar.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AvatarCreateManyArgs>(args?: SelectSubset<T, AvatarCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Avatar.
     * @param {AvatarDeleteArgs} args - Arguments to delete one Avatar.
     * @example
     * // Delete one Avatar
     * const Avatar = await prisma.avatar.delete({
     *   where: {
     *     // ... filter to delete one Avatar
     *   }
     * })
     * 
     */
    delete<T extends AvatarDeleteArgs>(args: SelectSubset<T, AvatarDeleteArgs<ExtArgs>>): Prisma__AvatarClient<$Result.GetResult<Prisma.$AvatarPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Avatar.
     * @param {AvatarUpdateArgs} args - Arguments to update one Avatar.
     * @example
     * // Update one Avatar
     * const avatar = await prisma.avatar.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AvatarUpdateArgs>(args: SelectSubset<T, AvatarUpdateArgs<ExtArgs>>): Prisma__AvatarClient<$Result.GetResult<Prisma.$AvatarPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Avatars.
     * @param {AvatarDeleteManyArgs} args - Arguments to filter Avatars to delete.
     * @example
     * // Delete a few Avatars
     * const { count } = await prisma.avatar.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AvatarDeleteManyArgs>(args?: SelectSubset<T, AvatarDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Avatars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvatarUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Avatars
     * const avatar = await prisma.avatar.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AvatarUpdateManyArgs>(args: SelectSubset<T, AvatarUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Avatar.
     * @param {AvatarUpsertArgs} args - Arguments to update or create a Avatar.
     * @example
     * // Update or create a Avatar
     * const avatar = await prisma.avatar.upsert({
     *   create: {
     *     // ... data to create a Avatar
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Avatar we want to update
     *   }
     * })
     */
    upsert<T extends AvatarUpsertArgs>(args: SelectSubset<T, AvatarUpsertArgs<ExtArgs>>): Prisma__AvatarClient<$Result.GetResult<Prisma.$AvatarPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Avatars.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvatarCountArgs} args - Arguments to filter Avatars to count.
     * @example
     * // Count the number of Avatars
     * const count = await prisma.avatar.count({
     *   where: {
     *     // ... the filter for the Avatars we want to count
     *   }
     * })
    **/
    count<T extends AvatarCountArgs>(
      args?: Subset<T, AvatarCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AvatarCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Avatar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvatarAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AvatarAggregateArgs>(args: Subset<T, AvatarAggregateArgs>): Prisma.PrismaPromise<GetAvatarAggregateType<T>>

    /**
     * Group by Avatar.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AvatarGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AvatarGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AvatarGroupByArgs['orderBy'] }
        : { orderBy?: AvatarGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AvatarGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAvatarGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Avatar model
   */
  readonly fields: AvatarFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Avatar.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AvatarClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    profile<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Avatar model
   */
  interface AvatarFieldRefs {
    readonly id: FieldRef<"Avatar", 'BigInt'>
    readonly image: FieldRef<"Avatar", 'String'>
    readonly active: FieldRef<"Avatar", 'Boolean'>
    readonly shown: FieldRef<"Avatar", 'Boolean'>
    readonly profile_id: FieldRef<"Avatar", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * Avatar findUnique
   */
  export type AvatarFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatar
     */
    select?: AvatarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avatar
     */
    omit?: AvatarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvatarInclude<ExtArgs> | null
    /**
     * Filter, which Avatar to fetch.
     */
    where: AvatarWhereUniqueInput
  }

  /**
   * Avatar findUniqueOrThrow
   */
  export type AvatarFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatar
     */
    select?: AvatarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avatar
     */
    omit?: AvatarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvatarInclude<ExtArgs> | null
    /**
     * Filter, which Avatar to fetch.
     */
    where: AvatarWhereUniqueInput
  }

  /**
   * Avatar findFirst
   */
  export type AvatarFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatar
     */
    select?: AvatarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avatar
     */
    omit?: AvatarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvatarInclude<ExtArgs> | null
    /**
     * Filter, which Avatar to fetch.
     */
    where?: AvatarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avatars to fetch.
     */
    orderBy?: AvatarOrderByWithRelationInput | AvatarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Avatars.
     */
    cursor?: AvatarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avatars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avatars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Avatars.
     */
    distinct?: AvatarScalarFieldEnum | AvatarScalarFieldEnum[]
  }

  /**
   * Avatar findFirstOrThrow
   */
  export type AvatarFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatar
     */
    select?: AvatarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avatar
     */
    omit?: AvatarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvatarInclude<ExtArgs> | null
    /**
     * Filter, which Avatar to fetch.
     */
    where?: AvatarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avatars to fetch.
     */
    orderBy?: AvatarOrderByWithRelationInput | AvatarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Avatars.
     */
    cursor?: AvatarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avatars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avatars.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Avatars.
     */
    distinct?: AvatarScalarFieldEnum | AvatarScalarFieldEnum[]
  }

  /**
   * Avatar findMany
   */
  export type AvatarFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatar
     */
    select?: AvatarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avatar
     */
    omit?: AvatarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvatarInclude<ExtArgs> | null
    /**
     * Filter, which Avatars to fetch.
     */
    where?: AvatarWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Avatars to fetch.
     */
    orderBy?: AvatarOrderByWithRelationInput | AvatarOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Avatars.
     */
    cursor?: AvatarWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Avatars from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Avatars.
     */
    skip?: number
    distinct?: AvatarScalarFieldEnum | AvatarScalarFieldEnum[]
  }

  /**
   * Avatar create
   */
  export type AvatarCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatar
     */
    select?: AvatarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avatar
     */
    omit?: AvatarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvatarInclude<ExtArgs> | null
    /**
     * The data needed to create a Avatar.
     */
    data: XOR<AvatarCreateInput, AvatarUncheckedCreateInput>
  }

  /**
   * Avatar createMany
   */
  export type AvatarCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Avatars.
     */
    data: AvatarCreateManyInput | AvatarCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Avatar update
   */
  export type AvatarUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatar
     */
    select?: AvatarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avatar
     */
    omit?: AvatarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvatarInclude<ExtArgs> | null
    /**
     * The data needed to update a Avatar.
     */
    data: XOR<AvatarUpdateInput, AvatarUncheckedUpdateInput>
    /**
     * Choose, which Avatar to update.
     */
    where: AvatarWhereUniqueInput
  }

  /**
   * Avatar updateMany
   */
  export type AvatarUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Avatars.
     */
    data: XOR<AvatarUpdateManyMutationInput, AvatarUncheckedUpdateManyInput>
    /**
     * Filter which Avatars to update
     */
    where?: AvatarWhereInput
    /**
     * Limit how many Avatars to update.
     */
    limit?: number
  }

  /**
   * Avatar upsert
   */
  export type AvatarUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatar
     */
    select?: AvatarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avatar
     */
    omit?: AvatarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvatarInclude<ExtArgs> | null
    /**
     * The filter to search for the Avatar to update in case it exists.
     */
    where: AvatarWhereUniqueInput
    /**
     * In case the Avatar found by the `where` argument doesn't exist, create a new Avatar with this data.
     */
    create: XOR<AvatarCreateInput, AvatarUncheckedCreateInput>
    /**
     * In case the Avatar was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AvatarUpdateInput, AvatarUncheckedUpdateInput>
  }

  /**
   * Avatar delete
   */
  export type AvatarDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatar
     */
    select?: AvatarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avatar
     */
    omit?: AvatarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvatarInclude<ExtArgs> | null
    /**
     * Filter which Avatar to delete.
     */
    where: AvatarWhereUniqueInput
  }

  /**
   * Avatar deleteMany
   */
  export type AvatarDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Avatars to delete
     */
    where?: AvatarWhereInput
    /**
     * Limit how many Avatars to delete.
     */
    limit?: number
  }

  /**
   * Avatar without action
   */
  export type AvatarDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Avatar
     */
    select?: AvatarSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Avatar
     */
    omit?: AvatarOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AvatarInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Auth_groupScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type Auth_groupScalarFieldEnum = (typeof Auth_groupScalarFieldEnum)[keyof typeof Auth_groupScalarFieldEnum]


  export const Auth_group_permissionsScalarFieldEnum: {
    id: 'id',
    group_id: 'group_id',
    permission_id: 'permission_id'
  };

  export type Auth_group_permissionsScalarFieldEnum = (typeof Auth_group_permissionsScalarFieldEnum)[keyof typeof Auth_group_permissionsScalarFieldEnum]


  export const Auth_permissionScalarFieldEnum: {
    id: 'id',
    name: 'name',
    content_type_id: 'content_type_id',
    codename: 'codename'
  };

  export type Auth_permissionScalarFieldEnum = (typeof Auth_permissionScalarFieldEnum)[keyof typeof Auth_permissionScalarFieldEnum]


  export const Auth_userScalarFieldEnum: {
    id: 'id',
    password: 'password',
    last_login: 'last_login',
    is_superuser: 'is_superuser',
    username: 'username',
    first_name: 'first_name',
    last_name: 'last_name',
    email: 'email',
    is_staff: 'is_staff',
    is_active: 'is_active',
    date_joined: 'date_joined'
  };

  export type Auth_userScalarFieldEnum = (typeof Auth_userScalarFieldEnum)[keyof typeof Auth_userScalarFieldEnum]


  export const Auth_user_groupsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    group_id: 'group_id'
  };

  export type Auth_user_groupsScalarFieldEnum = (typeof Auth_user_groupsScalarFieldEnum)[keyof typeof Auth_user_groupsScalarFieldEnum]


  export const Auth_user_user_permissionsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    permission_id: 'permission_id'
  };

  export type Auth_user_user_permissionsScalarFieldEnum = (typeof Auth_user_user_permissionsScalarFieldEnum)[keyof typeof Auth_user_user_permissionsScalarFieldEnum]


  export const Django_admin_logScalarFieldEnum: {
    id: 'id',
    action_time: 'action_time',
    object_id: 'object_id',
    object_repr: 'object_repr',
    action_flag: 'action_flag',
    change_message: 'change_message',
    content_type_id: 'content_type_id',
    user_id: 'user_id'
  };

  export type Django_admin_logScalarFieldEnum = (typeof Django_admin_logScalarFieldEnum)[keyof typeof Django_admin_logScalarFieldEnum]


  export const Django_content_typeScalarFieldEnum: {
    id: 'id',
    app_label: 'app_label',
    model: 'model'
  };

  export type Django_content_typeScalarFieldEnum = (typeof Django_content_typeScalarFieldEnum)[keyof typeof Django_content_typeScalarFieldEnum]


  export const Django_migrationsScalarFieldEnum: {
    id: 'id',
    app: 'app',
    name: 'name',
    applied: 'applied'
  };

  export type Django_migrationsScalarFieldEnum = (typeof Django_migrationsScalarFieldEnum)[keyof typeof Django_migrationsScalarFieldEnum]


  export const Django_sessionScalarFieldEnum: {
    session_key: 'session_key',
    session_data: 'session_data',
    expire_date: 'expire_date'
  };

  export type Django_sessionScalarFieldEnum = (typeof Django_sessionScalarFieldEnum)[keyof typeof Django_sessionScalarFieldEnum]


  export const Post_app_post_imagesScalarFieldEnum: {
    id: 'id',
    post_id: 'post_id',
    image_id: 'image_id'
  };

  export type Post_app_post_imagesScalarFieldEnum = (typeof Post_app_post_imagesScalarFieldEnum)[keyof typeof Post_app_post_imagesScalarFieldEnum]


  export const Post_app_post_tagsScalarFieldEnum: {
    id: 'id',
    post_id: 'post_id',
    tag_id: 'tag_id'
  };

  export type Post_app_post_tagsScalarFieldEnum = (typeof Post_app_post_tagsScalarFieldEnum)[keyof typeof Post_app_post_tagsScalarFieldEnum]


  export const User_app_verificationcodeScalarFieldEnum: {
    id: 'id',
    username: 'username',
    code: 'code',
    created_at: 'created_at'
  };

  export type User_app_verificationcodeScalarFieldEnum = (typeof User_app_verificationcodeScalarFieldEnum)[keyof typeof User_app_verificationcodeScalarFieldEnum]


  export const AlbumScalarFieldEnum: {
    id: 'id',
    name: 'name',
    created_at: 'created_at',
    preview_image: 'preview_image',
    shown: 'shown',
    topic_id: 'topic_id',
    author_id: 'author_id'
  };

  export type AlbumScalarFieldEnum = (typeof AlbumScalarFieldEnum)[keyof typeof AlbumScalarFieldEnum]


  export const Post_app_album_imagesScalarFieldEnum: {
    id: 'id',
    album_id: 'album_id',
    image_id: 'image_id'
  };

  export type Post_app_album_imagesScalarFieldEnum = (typeof Post_app_album_imagesScalarFieldEnum)[keyof typeof Post_app_album_imagesScalarFieldEnum]


  export const ChatGroupScalarFieldEnum: {
    id: 'id',
    name: 'name',
    is_personal_chat: 'is_personal_chat',
    admin_id: 'admin_id',
    avatar: 'avatar'
  };

  export type ChatGroupScalarFieldEnum = (typeof ChatGroupScalarFieldEnum)[keyof typeof ChatGroupScalarFieldEnum]


  export const ChatMessageScalarFieldEnum: {
    id: 'id',
    content: 'content',
    sent_at: 'sent_at',
    author_id: 'author_id',
    chat_group_id: 'chat_group_id',
    attached_image: 'attached_image'
  };

  export type ChatMessageScalarFieldEnum = (typeof ChatMessageScalarFieldEnum)[keyof typeof ChatMessageScalarFieldEnum]


  export const Chat_app_chatgroup_membersScalarFieldEnum: {
    id: 'id',
    chatgroup_id: 'chatgroup_id',
    profile_id: 'profile_id'
  };

  export type Chat_app_chatgroup_membersScalarFieldEnum = (typeof Chat_app_chatgroup_membersScalarFieldEnum)[keyof typeof Chat_app_chatgroup_membersScalarFieldEnum]


  export const FriendshipScalarFieldEnum: {
    id: 'id',
    accepted: 'accepted',
    profile1_id: 'profile1_id',
    profile2_id: 'profile2_id'
  };

  export type FriendshipScalarFieldEnum = (typeof FriendshipScalarFieldEnum)[keyof typeof FriendshipScalarFieldEnum]


  export const ImageScalarFieldEnum: {
    id: 'id',
    filename: 'filename',
    file: 'file',
    uploaded_at: 'uploaded_at'
  };

  export type ImageScalarFieldEnum = (typeof ImageScalarFieldEnum)[keyof typeof ImageScalarFieldEnum]


  export const PostScalarFieldEnum: {
    id: 'id',
    title: 'title',
    content: 'content',
    author_id: 'author_id',
    topic: 'topic'
  };

  export type PostScalarFieldEnum = (typeof PostScalarFieldEnum)[keyof typeof PostScalarFieldEnum]


  export const TagsScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type TagsScalarFieldEnum = (typeof TagsScalarFieldEnum)[keyof typeof TagsScalarFieldEnum]


  export const LinkScalarFieldEnum: {
    id: 'id',
    url: 'url',
    post_id: 'post_id'
  };

  export type LinkScalarFieldEnum = (typeof LinkScalarFieldEnum)[keyof typeof LinkScalarFieldEnum]


  export const Post_app_post_likesScalarFieldEnum: {
    id: 'id',
    post_id: 'post_id',
    profile_id: 'profile_id'
  };

  export type Post_app_post_likesScalarFieldEnum = (typeof Post_app_post_likesScalarFieldEnum)[keyof typeof Post_app_post_likesScalarFieldEnum]


  export const Post_app_post_viewsScalarFieldEnum: {
    id: 'id',
    post_id: 'post_id',
    profile_id: 'profile_id'
  };

  export type Post_app_post_viewsScalarFieldEnum = (typeof Post_app_post_viewsScalarFieldEnum)[keyof typeof Post_app_post_viewsScalarFieldEnum]


  export const ProfileScalarFieldEnum: {
    id: 'id',
    date_of_birth: 'date_of_birth',
    user_id: 'user_id',
    signature: 'signature'
  };

  export type ProfileScalarFieldEnum = (typeof ProfileScalarFieldEnum)[keyof typeof ProfileScalarFieldEnum]


  export const AvatarScalarFieldEnum: {
    id: 'id',
    image: 'image',
    active: 'active',
    shown: 'shown',
    profile_id: 'profile_id'
  };

  export type AvatarScalarFieldEnum = (typeof AvatarScalarFieldEnum)[keyof typeof AvatarScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const auth_groupOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type auth_groupOrderByRelevanceFieldEnum = (typeof auth_groupOrderByRelevanceFieldEnum)[keyof typeof auth_groupOrderByRelevanceFieldEnum]


  export const auth_permissionOrderByRelevanceFieldEnum: {
    name: 'name',
    codename: 'codename'
  };

  export type auth_permissionOrderByRelevanceFieldEnum = (typeof auth_permissionOrderByRelevanceFieldEnum)[keyof typeof auth_permissionOrderByRelevanceFieldEnum]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const auth_userOrderByRelevanceFieldEnum: {
    password: 'password',
    username: 'username',
    first_name: 'first_name',
    last_name: 'last_name',
    email: 'email'
  };

  export type auth_userOrderByRelevanceFieldEnum = (typeof auth_userOrderByRelevanceFieldEnum)[keyof typeof auth_userOrderByRelevanceFieldEnum]


  export const django_admin_logOrderByRelevanceFieldEnum: {
    object_id: 'object_id',
    object_repr: 'object_repr',
    change_message: 'change_message'
  };

  export type django_admin_logOrderByRelevanceFieldEnum = (typeof django_admin_logOrderByRelevanceFieldEnum)[keyof typeof django_admin_logOrderByRelevanceFieldEnum]


  export const django_content_typeOrderByRelevanceFieldEnum: {
    app_label: 'app_label',
    model: 'model'
  };

  export type django_content_typeOrderByRelevanceFieldEnum = (typeof django_content_typeOrderByRelevanceFieldEnum)[keyof typeof django_content_typeOrderByRelevanceFieldEnum]


  export const django_migrationsOrderByRelevanceFieldEnum: {
    app: 'app',
    name: 'name'
  };

  export type django_migrationsOrderByRelevanceFieldEnum = (typeof django_migrationsOrderByRelevanceFieldEnum)[keyof typeof django_migrationsOrderByRelevanceFieldEnum]


  export const django_sessionOrderByRelevanceFieldEnum: {
    session_key: 'session_key',
    session_data: 'session_data'
  };

  export type django_sessionOrderByRelevanceFieldEnum = (typeof django_sessionOrderByRelevanceFieldEnum)[keyof typeof django_sessionOrderByRelevanceFieldEnum]


  export const user_app_verificationcodeOrderByRelevanceFieldEnum: {
    username: 'username',
    code: 'code'
  };

  export type user_app_verificationcodeOrderByRelevanceFieldEnum = (typeof user_app_verificationcodeOrderByRelevanceFieldEnum)[keyof typeof user_app_verificationcodeOrderByRelevanceFieldEnum]


  export const AlbumOrderByRelevanceFieldEnum: {
    name: 'name',
    preview_image: 'preview_image'
  };

  export type AlbumOrderByRelevanceFieldEnum = (typeof AlbumOrderByRelevanceFieldEnum)[keyof typeof AlbumOrderByRelevanceFieldEnum]


  export const ChatGroupOrderByRelevanceFieldEnum: {
    name: 'name',
    avatar: 'avatar'
  };

  export type ChatGroupOrderByRelevanceFieldEnum = (typeof ChatGroupOrderByRelevanceFieldEnum)[keyof typeof ChatGroupOrderByRelevanceFieldEnum]


  export const ChatMessageOrderByRelevanceFieldEnum: {
    content: 'content',
    attached_image: 'attached_image'
  };

  export type ChatMessageOrderByRelevanceFieldEnum = (typeof ChatMessageOrderByRelevanceFieldEnum)[keyof typeof ChatMessageOrderByRelevanceFieldEnum]


  export const ImageOrderByRelevanceFieldEnum: {
    filename: 'filename',
    file: 'file'
  };

  export type ImageOrderByRelevanceFieldEnum = (typeof ImageOrderByRelevanceFieldEnum)[keyof typeof ImageOrderByRelevanceFieldEnum]


  export const PostOrderByRelevanceFieldEnum: {
    title: 'title',
    content: 'content',
    topic: 'topic'
  };

  export type PostOrderByRelevanceFieldEnum = (typeof PostOrderByRelevanceFieldEnum)[keyof typeof PostOrderByRelevanceFieldEnum]


  export const TagsOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type TagsOrderByRelevanceFieldEnum = (typeof TagsOrderByRelevanceFieldEnum)[keyof typeof TagsOrderByRelevanceFieldEnum]


  export const LinkOrderByRelevanceFieldEnum: {
    url: 'url'
  };

  export type LinkOrderByRelevanceFieldEnum = (typeof LinkOrderByRelevanceFieldEnum)[keyof typeof LinkOrderByRelevanceFieldEnum]


  export const ProfileOrderByRelevanceFieldEnum: {
    signature: 'signature'
  };

  export type ProfileOrderByRelevanceFieldEnum = (typeof ProfileOrderByRelevanceFieldEnum)[keyof typeof ProfileOrderByRelevanceFieldEnum]


  export const AvatarOrderByRelevanceFieldEnum: {
    image: 'image'
  };

  export type AvatarOrderByRelevanceFieldEnum = (typeof AvatarOrderByRelevanceFieldEnum)[keyof typeof AvatarOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type auth_groupWhereInput = {
    AND?: auth_groupWhereInput | auth_groupWhereInput[]
    OR?: auth_groupWhereInput[]
    NOT?: auth_groupWhereInput | auth_groupWhereInput[]
    id?: IntFilter<"auth_group"> | number
    name?: StringFilter<"auth_group"> | string
    auth_group_permissions?: Auth_group_permissionsListRelationFilter
    auth_user_groups?: Auth_user_groupsListRelationFilter
  }

  export type auth_groupOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    auth_group_permissions?: auth_group_permissionsOrderByRelationAggregateInput
    auth_user_groups?: auth_user_groupsOrderByRelationAggregateInput
    _relevance?: auth_groupOrderByRelevanceInput
  }

  export type auth_groupWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: auth_groupWhereInput | auth_groupWhereInput[]
    OR?: auth_groupWhereInput[]
    NOT?: auth_groupWhereInput | auth_groupWhereInput[]
    auth_group_permissions?: Auth_group_permissionsListRelationFilter
    auth_user_groups?: Auth_user_groupsListRelationFilter
  }, "id" | "name">

  export type auth_groupOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: auth_groupCountOrderByAggregateInput
    _avg?: auth_groupAvgOrderByAggregateInput
    _max?: auth_groupMaxOrderByAggregateInput
    _min?: auth_groupMinOrderByAggregateInput
    _sum?: auth_groupSumOrderByAggregateInput
  }

  export type auth_groupScalarWhereWithAggregatesInput = {
    AND?: auth_groupScalarWhereWithAggregatesInput | auth_groupScalarWhereWithAggregatesInput[]
    OR?: auth_groupScalarWhereWithAggregatesInput[]
    NOT?: auth_groupScalarWhereWithAggregatesInput | auth_groupScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"auth_group"> | number
    name?: StringWithAggregatesFilter<"auth_group"> | string
  }

  export type auth_group_permissionsWhereInput = {
    AND?: auth_group_permissionsWhereInput | auth_group_permissionsWhereInput[]
    OR?: auth_group_permissionsWhereInput[]
    NOT?: auth_group_permissionsWhereInput | auth_group_permissionsWhereInput[]
    id?: BigIntFilter<"auth_group_permissions"> | bigint | number
    group_id?: IntFilter<"auth_group_permissions"> | number
    permission_id?: IntFilter<"auth_group_permissions"> | number
    auth_permission?: XOR<Auth_permissionScalarRelationFilter, auth_permissionWhereInput>
    auth_group?: XOR<Auth_groupScalarRelationFilter, auth_groupWhereInput>
  }

  export type auth_group_permissionsOrderByWithRelationInput = {
    id?: SortOrder
    group_id?: SortOrder
    permission_id?: SortOrder
    auth_permission?: auth_permissionOrderByWithRelationInput
    auth_group?: auth_groupOrderByWithRelationInput
  }

  export type auth_group_permissionsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    group_id_permission_id?: auth_group_permissionsGroup_idPermission_idCompoundUniqueInput
    AND?: auth_group_permissionsWhereInput | auth_group_permissionsWhereInput[]
    OR?: auth_group_permissionsWhereInput[]
    NOT?: auth_group_permissionsWhereInput | auth_group_permissionsWhereInput[]
    group_id?: IntFilter<"auth_group_permissions"> | number
    permission_id?: IntFilter<"auth_group_permissions"> | number
    auth_permission?: XOR<Auth_permissionScalarRelationFilter, auth_permissionWhereInput>
    auth_group?: XOR<Auth_groupScalarRelationFilter, auth_groupWhereInput>
  }, "id" | "group_id_permission_id">

  export type auth_group_permissionsOrderByWithAggregationInput = {
    id?: SortOrder
    group_id?: SortOrder
    permission_id?: SortOrder
    _count?: auth_group_permissionsCountOrderByAggregateInput
    _avg?: auth_group_permissionsAvgOrderByAggregateInput
    _max?: auth_group_permissionsMaxOrderByAggregateInput
    _min?: auth_group_permissionsMinOrderByAggregateInput
    _sum?: auth_group_permissionsSumOrderByAggregateInput
  }

  export type auth_group_permissionsScalarWhereWithAggregatesInput = {
    AND?: auth_group_permissionsScalarWhereWithAggregatesInput | auth_group_permissionsScalarWhereWithAggregatesInput[]
    OR?: auth_group_permissionsScalarWhereWithAggregatesInput[]
    NOT?: auth_group_permissionsScalarWhereWithAggregatesInput | auth_group_permissionsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"auth_group_permissions"> | bigint | number
    group_id?: IntWithAggregatesFilter<"auth_group_permissions"> | number
    permission_id?: IntWithAggregatesFilter<"auth_group_permissions"> | number
  }

  export type auth_permissionWhereInput = {
    AND?: auth_permissionWhereInput | auth_permissionWhereInput[]
    OR?: auth_permissionWhereInput[]
    NOT?: auth_permissionWhereInput | auth_permissionWhereInput[]
    id?: IntFilter<"auth_permission"> | number
    name?: StringFilter<"auth_permission"> | string
    content_type_id?: IntFilter<"auth_permission"> | number
    codename?: StringFilter<"auth_permission"> | string
    auth_group_permissions?: Auth_group_permissionsListRelationFilter
    django_content_type?: XOR<Django_content_typeScalarRelationFilter, django_content_typeWhereInput>
    auth_user_user_permissions?: Auth_user_user_permissionsListRelationFilter
  }

  export type auth_permissionOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    content_type_id?: SortOrder
    codename?: SortOrder
    auth_group_permissions?: auth_group_permissionsOrderByRelationAggregateInput
    django_content_type?: django_content_typeOrderByWithRelationInput
    auth_user_user_permissions?: auth_user_user_permissionsOrderByRelationAggregateInput
    _relevance?: auth_permissionOrderByRelevanceInput
  }

  export type auth_permissionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    content_type_id_codename?: auth_permissionContent_type_idCodenameCompoundUniqueInput
    AND?: auth_permissionWhereInput | auth_permissionWhereInput[]
    OR?: auth_permissionWhereInput[]
    NOT?: auth_permissionWhereInput | auth_permissionWhereInput[]
    name?: StringFilter<"auth_permission"> | string
    content_type_id?: IntFilter<"auth_permission"> | number
    codename?: StringFilter<"auth_permission"> | string
    auth_group_permissions?: Auth_group_permissionsListRelationFilter
    django_content_type?: XOR<Django_content_typeScalarRelationFilter, django_content_typeWhereInput>
    auth_user_user_permissions?: Auth_user_user_permissionsListRelationFilter
  }, "id" | "content_type_id_codename">

  export type auth_permissionOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    content_type_id?: SortOrder
    codename?: SortOrder
    _count?: auth_permissionCountOrderByAggregateInput
    _avg?: auth_permissionAvgOrderByAggregateInput
    _max?: auth_permissionMaxOrderByAggregateInput
    _min?: auth_permissionMinOrderByAggregateInput
    _sum?: auth_permissionSumOrderByAggregateInput
  }

  export type auth_permissionScalarWhereWithAggregatesInput = {
    AND?: auth_permissionScalarWhereWithAggregatesInput | auth_permissionScalarWhereWithAggregatesInput[]
    OR?: auth_permissionScalarWhereWithAggregatesInput[]
    NOT?: auth_permissionScalarWhereWithAggregatesInput | auth_permissionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"auth_permission"> | number
    name?: StringWithAggregatesFilter<"auth_permission"> | string
    content_type_id?: IntWithAggregatesFilter<"auth_permission"> | number
    codename?: StringWithAggregatesFilter<"auth_permission"> | string
  }

  export type auth_userWhereInput = {
    AND?: auth_userWhereInput | auth_userWhereInput[]
    OR?: auth_userWhereInput[]
    NOT?: auth_userWhereInput | auth_userWhereInput[]
    id?: IntFilter<"auth_user"> | number
    password?: StringFilter<"auth_user"> | string
    last_login?: DateTimeNullableFilter<"auth_user"> | Date | string | null
    is_superuser?: BoolFilter<"auth_user"> | boolean
    username?: StringFilter<"auth_user"> | string
    first_name?: StringFilter<"auth_user"> | string
    last_name?: StringFilter<"auth_user"> | string
    email?: StringFilter<"auth_user"> | string
    is_staff?: BoolFilter<"auth_user"> | boolean
    is_active?: BoolFilter<"auth_user"> | boolean
    date_joined?: DateTimeFilter<"auth_user"> | Date | string
    auth_user_groups?: Auth_user_groupsListRelationFilter
    auth_user_user_permissions?: Auth_user_user_permissionsListRelationFilter
    django_admin_log?: Django_admin_logListRelationFilter
    user_app_profile?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
  }

  export type auth_userOrderByWithRelationInput = {
    id?: SortOrder
    password?: SortOrder
    last_login?: SortOrderInput | SortOrder
    is_superuser?: SortOrder
    username?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    is_staff?: SortOrder
    is_active?: SortOrder
    date_joined?: SortOrder
    auth_user_groups?: auth_user_groupsOrderByRelationAggregateInput
    auth_user_user_permissions?: auth_user_user_permissionsOrderByRelationAggregateInput
    django_admin_log?: django_admin_logOrderByRelationAggregateInput
    user_app_profile?: ProfileOrderByWithRelationInput
    _relevance?: auth_userOrderByRelevanceInput
  }

  export type auth_userWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    AND?: auth_userWhereInput | auth_userWhereInput[]
    OR?: auth_userWhereInput[]
    NOT?: auth_userWhereInput | auth_userWhereInput[]
    password?: StringFilter<"auth_user"> | string
    last_login?: DateTimeNullableFilter<"auth_user"> | Date | string | null
    is_superuser?: BoolFilter<"auth_user"> | boolean
    first_name?: StringFilter<"auth_user"> | string
    last_name?: StringFilter<"auth_user"> | string
    email?: StringFilter<"auth_user"> | string
    is_staff?: BoolFilter<"auth_user"> | boolean
    is_active?: BoolFilter<"auth_user"> | boolean
    date_joined?: DateTimeFilter<"auth_user"> | Date | string
    auth_user_groups?: Auth_user_groupsListRelationFilter
    auth_user_user_permissions?: Auth_user_user_permissionsListRelationFilter
    django_admin_log?: Django_admin_logListRelationFilter
    user_app_profile?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
  }, "id" | "username">

  export type auth_userOrderByWithAggregationInput = {
    id?: SortOrder
    password?: SortOrder
    last_login?: SortOrderInput | SortOrder
    is_superuser?: SortOrder
    username?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    is_staff?: SortOrder
    is_active?: SortOrder
    date_joined?: SortOrder
    _count?: auth_userCountOrderByAggregateInput
    _avg?: auth_userAvgOrderByAggregateInput
    _max?: auth_userMaxOrderByAggregateInput
    _min?: auth_userMinOrderByAggregateInput
    _sum?: auth_userSumOrderByAggregateInput
  }

  export type auth_userScalarWhereWithAggregatesInput = {
    AND?: auth_userScalarWhereWithAggregatesInput | auth_userScalarWhereWithAggregatesInput[]
    OR?: auth_userScalarWhereWithAggregatesInput[]
    NOT?: auth_userScalarWhereWithAggregatesInput | auth_userScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"auth_user"> | number
    password?: StringWithAggregatesFilter<"auth_user"> | string
    last_login?: DateTimeNullableWithAggregatesFilter<"auth_user"> | Date | string | null
    is_superuser?: BoolWithAggregatesFilter<"auth_user"> | boolean
    username?: StringWithAggregatesFilter<"auth_user"> | string
    first_name?: StringWithAggregatesFilter<"auth_user"> | string
    last_name?: StringWithAggregatesFilter<"auth_user"> | string
    email?: StringWithAggregatesFilter<"auth_user"> | string
    is_staff?: BoolWithAggregatesFilter<"auth_user"> | boolean
    is_active?: BoolWithAggregatesFilter<"auth_user"> | boolean
    date_joined?: DateTimeWithAggregatesFilter<"auth_user"> | Date | string
  }

  export type auth_user_groupsWhereInput = {
    AND?: auth_user_groupsWhereInput | auth_user_groupsWhereInput[]
    OR?: auth_user_groupsWhereInput[]
    NOT?: auth_user_groupsWhereInput | auth_user_groupsWhereInput[]
    id?: BigIntFilter<"auth_user_groups"> | bigint | number
    user_id?: IntFilter<"auth_user_groups"> | number
    group_id?: IntFilter<"auth_user_groups"> | number
    auth_group?: XOR<Auth_groupScalarRelationFilter, auth_groupWhereInput>
    auth_user?: XOR<Auth_userScalarRelationFilter, auth_userWhereInput>
  }

  export type auth_user_groupsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    auth_group?: auth_groupOrderByWithRelationInput
    auth_user?: auth_userOrderByWithRelationInput
  }

  export type auth_user_groupsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    user_id_group_id?: auth_user_groupsUser_idGroup_idCompoundUniqueInput
    AND?: auth_user_groupsWhereInput | auth_user_groupsWhereInput[]
    OR?: auth_user_groupsWhereInput[]
    NOT?: auth_user_groupsWhereInput | auth_user_groupsWhereInput[]
    user_id?: IntFilter<"auth_user_groups"> | number
    group_id?: IntFilter<"auth_user_groups"> | number
    auth_group?: XOR<Auth_groupScalarRelationFilter, auth_groupWhereInput>
    auth_user?: XOR<Auth_userScalarRelationFilter, auth_userWhereInput>
  }, "id" | "user_id_group_id">

  export type auth_user_groupsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    _count?: auth_user_groupsCountOrderByAggregateInput
    _avg?: auth_user_groupsAvgOrderByAggregateInput
    _max?: auth_user_groupsMaxOrderByAggregateInput
    _min?: auth_user_groupsMinOrderByAggregateInput
    _sum?: auth_user_groupsSumOrderByAggregateInput
  }

  export type auth_user_groupsScalarWhereWithAggregatesInput = {
    AND?: auth_user_groupsScalarWhereWithAggregatesInput | auth_user_groupsScalarWhereWithAggregatesInput[]
    OR?: auth_user_groupsScalarWhereWithAggregatesInput[]
    NOT?: auth_user_groupsScalarWhereWithAggregatesInput | auth_user_groupsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"auth_user_groups"> | bigint | number
    user_id?: IntWithAggregatesFilter<"auth_user_groups"> | number
    group_id?: IntWithAggregatesFilter<"auth_user_groups"> | number
  }

  export type auth_user_user_permissionsWhereInput = {
    AND?: auth_user_user_permissionsWhereInput | auth_user_user_permissionsWhereInput[]
    OR?: auth_user_user_permissionsWhereInput[]
    NOT?: auth_user_user_permissionsWhereInput | auth_user_user_permissionsWhereInput[]
    id?: BigIntFilter<"auth_user_user_permissions"> | bigint | number
    user_id?: IntFilter<"auth_user_user_permissions"> | number
    permission_id?: IntFilter<"auth_user_user_permissions"> | number
    auth_permission?: XOR<Auth_permissionScalarRelationFilter, auth_permissionWhereInput>
    auth_user?: XOR<Auth_userScalarRelationFilter, auth_userWhereInput>
  }

  export type auth_user_user_permissionsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    permission_id?: SortOrder
    auth_permission?: auth_permissionOrderByWithRelationInput
    auth_user?: auth_userOrderByWithRelationInput
  }

  export type auth_user_user_permissionsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    user_id_permission_id?: auth_user_user_permissionsUser_idPermission_idCompoundUniqueInput
    AND?: auth_user_user_permissionsWhereInput | auth_user_user_permissionsWhereInput[]
    OR?: auth_user_user_permissionsWhereInput[]
    NOT?: auth_user_user_permissionsWhereInput | auth_user_user_permissionsWhereInput[]
    user_id?: IntFilter<"auth_user_user_permissions"> | number
    permission_id?: IntFilter<"auth_user_user_permissions"> | number
    auth_permission?: XOR<Auth_permissionScalarRelationFilter, auth_permissionWhereInput>
    auth_user?: XOR<Auth_userScalarRelationFilter, auth_userWhereInput>
  }, "id" | "user_id_permission_id">

  export type auth_user_user_permissionsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    permission_id?: SortOrder
    _count?: auth_user_user_permissionsCountOrderByAggregateInput
    _avg?: auth_user_user_permissionsAvgOrderByAggregateInput
    _max?: auth_user_user_permissionsMaxOrderByAggregateInput
    _min?: auth_user_user_permissionsMinOrderByAggregateInput
    _sum?: auth_user_user_permissionsSumOrderByAggregateInput
  }

  export type auth_user_user_permissionsScalarWhereWithAggregatesInput = {
    AND?: auth_user_user_permissionsScalarWhereWithAggregatesInput | auth_user_user_permissionsScalarWhereWithAggregatesInput[]
    OR?: auth_user_user_permissionsScalarWhereWithAggregatesInput[]
    NOT?: auth_user_user_permissionsScalarWhereWithAggregatesInput | auth_user_user_permissionsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"auth_user_user_permissions"> | bigint | number
    user_id?: IntWithAggregatesFilter<"auth_user_user_permissions"> | number
    permission_id?: IntWithAggregatesFilter<"auth_user_user_permissions"> | number
  }

  export type django_admin_logWhereInput = {
    AND?: django_admin_logWhereInput | django_admin_logWhereInput[]
    OR?: django_admin_logWhereInput[]
    NOT?: django_admin_logWhereInput | django_admin_logWhereInput[]
    id?: IntFilter<"django_admin_log"> | number
    action_time?: DateTimeFilter<"django_admin_log"> | Date | string
    object_id?: StringNullableFilter<"django_admin_log"> | string | null
    object_repr?: StringFilter<"django_admin_log"> | string
    action_flag?: IntFilter<"django_admin_log"> | number
    change_message?: StringFilter<"django_admin_log"> | string
    content_type_id?: IntNullableFilter<"django_admin_log"> | number | null
    user_id?: IntFilter<"django_admin_log"> | number
    django_content_type?: XOR<Django_content_typeNullableScalarRelationFilter, django_content_typeWhereInput> | null
    auth_user?: XOR<Auth_userScalarRelationFilter, auth_userWhereInput>
  }

  export type django_admin_logOrderByWithRelationInput = {
    id?: SortOrder
    action_time?: SortOrder
    object_id?: SortOrderInput | SortOrder
    object_repr?: SortOrder
    action_flag?: SortOrder
    change_message?: SortOrder
    content_type_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    django_content_type?: django_content_typeOrderByWithRelationInput
    auth_user?: auth_userOrderByWithRelationInput
    _relevance?: django_admin_logOrderByRelevanceInput
  }

  export type django_admin_logWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: django_admin_logWhereInput | django_admin_logWhereInput[]
    OR?: django_admin_logWhereInput[]
    NOT?: django_admin_logWhereInput | django_admin_logWhereInput[]
    action_time?: DateTimeFilter<"django_admin_log"> | Date | string
    object_id?: StringNullableFilter<"django_admin_log"> | string | null
    object_repr?: StringFilter<"django_admin_log"> | string
    action_flag?: IntFilter<"django_admin_log"> | number
    change_message?: StringFilter<"django_admin_log"> | string
    content_type_id?: IntNullableFilter<"django_admin_log"> | number | null
    user_id?: IntFilter<"django_admin_log"> | number
    django_content_type?: XOR<Django_content_typeNullableScalarRelationFilter, django_content_typeWhereInput> | null
    auth_user?: XOR<Auth_userScalarRelationFilter, auth_userWhereInput>
  }, "id">

  export type django_admin_logOrderByWithAggregationInput = {
    id?: SortOrder
    action_time?: SortOrder
    object_id?: SortOrderInput | SortOrder
    object_repr?: SortOrder
    action_flag?: SortOrder
    change_message?: SortOrder
    content_type_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    _count?: django_admin_logCountOrderByAggregateInput
    _avg?: django_admin_logAvgOrderByAggregateInput
    _max?: django_admin_logMaxOrderByAggregateInput
    _min?: django_admin_logMinOrderByAggregateInput
    _sum?: django_admin_logSumOrderByAggregateInput
  }

  export type django_admin_logScalarWhereWithAggregatesInput = {
    AND?: django_admin_logScalarWhereWithAggregatesInput | django_admin_logScalarWhereWithAggregatesInput[]
    OR?: django_admin_logScalarWhereWithAggregatesInput[]
    NOT?: django_admin_logScalarWhereWithAggregatesInput | django_admin_logScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"django_admin_log"> | number
    action_time?: DateTimeWithAggregatesFilter<"django_admin_log"> | Date | string
    object_id?: StringNullableWithAggregatesFilter<"django_admin_log"> | string | null
    object_repr?: StringWithAggregatesFilter<"django_admin_log"> | string
    action_flag?: IntWithAggregatesFilter<"django_admin_log"> | number
    change_message?: StringWithAggregatesFilter<"django_admin_log"> | string
    content_type_id?: IntNullableWithAggregatesFilter<"django_admin_log"> | number | null
    user_id?: IntWithAggregatesFilter<"django_admin_log"> | number
  }

  export type django_content_typeWhereInput = {
    AND?: django_content_typeWhereInput | django_content_typeWhereInput[]
    OR?: django_content_typeWhereInput[]
    NOT?: django_content_typeWhereInput | django_content_typeWhereInput[]
    id?: IntFilter<"django_content_type"> | number
    app_label?: StringFilter<"django_content_type"> | string
    model?: StringFilter<"django_content_type"> | string
    auth_permission?: Auth_permissionListRelationFilter
    django_admin_log?: Django_admin_logListRelationFilter
  }

  export type django_content_typeOrderByWithRelationInput = {
    id?: SortOrder
    app_label?: SortOrder
    model?: SortOrder
    auth_permission?: auth_permissionOrderByRelationAggregateInput
    django_admin_log?: django_admin_logOrderByRelationAggregateInput
    _relevance?: django_content_typeOrderByRelevanceInput
  }

  export type django_content_typeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    app_label_model?: django_content_typeApp_labelModelCompoundUniqueInput
    AND?: django_content_typeWhereInput | django_content_typeWhereInput[]
    OR?: django_content_typeWhereInput[]
    NOT?: django_content_typeWhereInput | django_content_typeWhereInput[]
    app_label?: StringFilter<"django_content_type"> | string
    model?: StringFilter<"django_content_type"> | string
    auth_permission?: Auth_permissionListRelationFilter
    django_admin_log?: Django_admin_logListRelationFilter
  }, "id" | "app_label_model">

  export type django_content_typeOrderByWithAggregationInput = {
    id?: SortOrder
    app_label?: SortOrder
    model?: SortOrder
    _count?: django_content_typeCountOrderByAggregateInput
    _avg?: django_content_typeAvgOrderByAggregateInput
    _max?: django_content_typeMaxOrderByAggregateInput
    _min?: django_content_typeMinOrderByAggregateInput
    _sum?: django_content_typeSumOrderByAggregateInput
  }

  export type django_content_typeScalarWhereWithAggregatesInput = {
    AND?: django_content_typeScalarWhereWithAggregatesInput | django_content_typeScalarWhereWithAggregatesInput[]
    OR?: django_content_typeScalarWhereWithAggregatesInput[]
    NOT?: django_content_typeScalarWhereWithAggregatesInput | django_content_typeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"django_content_type"> | number
    app_label?: StringWithAggregatesFilter<"django_content_type"> | string
    model?: StringWithAggregatesFilter<"django_content_type"> | string
  }

  export type django_migrationsWhereInput = {
    AND?: django_migrationsWhereInput | django_migrationsWhereInput[]
    OR?: django_migrationsWhereInput[]
    NOT?: django_migrationsWhereInput | django_migrationsWhereInput[]
    id?: BigIntFilter<"django_migrations"> | bigint | number
    app?: StringFilter<"django_migrations"> | string
    name?: StringFilter<"django_migrations"> | string
    applied?: DateTimeFilter<"django_migrations"> | Date | string
  }

  export type django_migrationsOrderByWithRelationInput = {
    id?: SortOrder
    app?: SortOrder
    name?: SortOrder
    applied?: SortOrder
    _relevance?: django_migrationsOrderByRelevanceInput
  }

  export type django_migrationsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: django_migrationsWhereInput | django_migrationsWhereInput[]
    OR?: django_migrationsWhereInput[]
    NOT?: django_migrationsWhereInput | django_migrationsWhereInput[]
    app?: StringFilter<"django_migrations"> | string
    name?: StringFilter<"django_migrations"> | string
    applied?: DateTimeFilter<"django_migrations"> | Date | string
  }, "id">

  export type django_migrationsOrderByWithAggregationInput = {
    id?: SortOrder
    app?: SortOrder
    name?: SortOrder
    applied?: SortOrder
    _count?: django_migrationsCountOrderByAggregateInput
    _avg?: django_migrationsAvgOrderByAggregateInput
    _max?: django_migrationsMaxOrderByAggregateInput
    _min?: django_migrationsMinOrderByAggregateInput
    _sum?: django_migrationsSumOrderByAggregateInput
  }

  export type django_migrationsScalarWhereWithAggregatesInput = {
    AND?: django_migrationsScalarWhereWithAggregatesInput | django_migrationsScalarWhereWithAggregatesInput[]
    OR?: django_migrationsScalarWhereWithAggregatesInput[]
    NOT?: django_migrationsScalarWhereWithAggregatesInput | django_migrationsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"django_migrations"> | bigint | number
    app?: StringWithAggregatesFilter<"django_migrations"> | string
    name?: StringWithAggregatesFilter<"django_migrations"> | string
    applied?: DateTimeWithAggregatesFilter<"django_migrations"> | Date | string
  }

  export type django_sessionWhereInput = {
    AND?: django_sessionWhereInput | django_sessionWhereInput[]
    OR?: django_sessionWhereInput[]
    NOT?: django_sessionWhereInput | django_sessionWhereInput[]
    session_key?: StringFilter<"django_session"> | string
    session_data?: StringFilter<"django_session"> | string
    expire_date?: DateTimeFilter<"django_session"> | Date | string
  }

  export type django_sessionOrderByWithRelationInput = {
    session_key?: SortOrder
    session_data?: SortOrder
    expire_date?: SortOrder
    _relevance?: django_sessionOrderByRelevanceInput
  }

  export type django_sessionWhereUniqueInput = Prisma.AtLeast<{
    session_key?: string
    AND?: django_sessionWhereInput | django_sessionWhereInput[]
    OR?: django_sessionWhereInput[]
    NOT?: django_sessionWhereInput | django_sessionWhereInput[]
    session_data?: StringFilter<"django_session"> | string
    expire_date?: DateTimeFilter<"django_session"> | Date | string
  }, "session_key">

  export type django_sessionOrderByWithAggregationInput = {
    session_key?: SortOrder
    session_data?: SortOrder
    expire_date?: SortOrder
    _count?: django_sessionCountOrderByAggregateInput
    _max?: django_sessionMaxOrderByAggregateInput
    _min?: django_sessionMinOrderByAggregateInput
  }

  export type django_sessionScalarWhereWithAggregatesInput = {
    AND?: django_sessionScalarWhereWithAggregatesInput | django_sessionScalarWhereWithAggregatesInput[]
    OR?: django_sessionScalarWhereWithAggregatesInput[]
    NOT?: django_sessionScalarWhereWithAggregatesInput | django_sessionScalarWhereWithAggregatesInput[]
    session_key?: StringWithAggregatesFilter<"django_session"> | string
    session_data?: StringWithAggregatesFilter<"django_session"> | string
    expire_date?: DateTimeWithAggregatesFilter<"django_session"> | Date | string
  }

  export type post_app_post_imagesWhereInput = {
    AND?: post_app_post_imagesWhereInput | post_app_post_imagesWhereInput[]
    OR?: post_app_post_imagesWhereInput[]
    NOT?: post_app_post_imagesWhereInput | post_app_post_imagesWhereInput[]
    id?: BigIntFilter<"post_app_post_images"> | bigint | number
    post_id?: BigIntFilter<"post_app_post_images"> | bigint | number
    image_id?: BigIntFilter<"post_app_post_images"> | bigint | number
    post_app_image?: XOR<ImageScalarRelationFilter, ImageWhereInput>
    post_app_post?: XOR<PostScalarRelationFilter, PostWhereInput>
  }

  export type post_app_post_imagesOrderByWithRelationInput = {
    id?: SortOrder
    post_id?: SortOrder
    image_id?: SortOrder
    post_app_image?: ImageOrderByWithRelationInput
    post_app_post?: PostOrderByWithRelationInput
  }

  export type post_app_post_imagesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    post_id_image_id?: post_app_post_imagesPost_idImage_idCompoundUniqueInput
    AND?: post_app_post_imagesWhereInput | post_app_post_imagesWhereInput[]
    OR?: post_app_post_imagesWhereInput[]
    NOT?: post_app_post_imagesWhereInput | post_app_post_imagesWhereInput[]
    post_id?: BigIntFilter<"post_app_post_images"> | bigint | number
    image_id?: BigIntFilter<"post_app_post_images"> | bigint | number
    post_app_image?: XOR<ImageScalarRelationFilter, ImageWhereInput>
    post_app_post?: XOR<PostScalarRelationFilter, PostWhereInput>
  }, "id" | "post_id_image_id">

  export type post_app_post_imagesOrderByWithAggregationInput = {
    id?: SortOrder
    post_id?: SortOrder
    image_id?: SortOrder
    _count?: post_app_post_imagesCountOrderByAggregateInput
    _avg?: post_app_post_imagesAvgOrderByAggregateInput
    _max?: post_app_post_imagesMaxOrderByAggregateInput
    _min?: post_app_post_imagesMinOrderByAggregateInput
    _sum?: post_app_post_imagesSumOrderByAggregateInput
  }

  export type post_app_post_imagesScalarWhereWithAggregatesInput = {
    AND?: post_app_post_imagesScalarWhereWithAggregatesInput | post_app_post_imagesScalarWhereWithAggregatesInput[]
    OR?: post_app_post_imagesScalarWhereWithAggregatesInput[]
    NOT?: post_app_post_imagesScalarWhereWithAggregatesInput | post_app_post_imagesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"post_app_post_images"> | bigint | number
    post_id?: BigIntWithAggregatesFilter<"post_app_post_images"> | bigint | number
    image_id?: BigIntWithAggregatesFilter<"post_app_post_images"> | bigint | number
  }

  export type post_app_post_tagsWhereInput = {
    AND?: post_app_post_tagsWhereInput | post_app_post_tagsWhereInput[]
    OR?: post_app_post_tagsWhereInput[]
    NOT?: post_app_post_tagsWhereInput | post_app_post_tagsWhereInput[]
    id?: BigIntFilter<"post_app_post_tags"> | bigint | number
    post_id?: BigIntFilter<"post_app_post_tags"> | bigint | number
    tag_id?: BigIntFilter<"post_app_post_tags"> | bigint | number
    post_app_post?: XOR<PostScalarRelationFilter, PostWhereInput>
    post_app_tag?: XOR<TagsScalarRelationFilter, TagsWhereInput>
  }

  export type post_app_post_tagsOrderByWithRelationInput = {
    id?: SortOrder
    post_id?: SortOrder
    tag_id?: SortOrder
    post_app_post?: PostOrderByWithRelationInput
    post_app_tag?: TagsOrderByWithRelationInput
  }

  export type post_app_post_tagsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    post_id_tag_id?: post_app_post_tagsPost_idTag_idCompoundUniqueInput
    AND?: post_app_post_tagsWhereInput | post_app_post_tagsWhereInput[]
    OR?: post_app_post_tagsWhereInput[]
    NOT?: post_app_post_tagsWhereInput | post_app_post_tagsWhereInput[]
    post_id?: BigIntFilter<"post_app_post_tags"> | bigint | number
    tag_id?: BigIntFilter<"post_app_post_tags"> | bigint | number
    post_app_post?: XOR<PostScalarRelationFilter, PostWhereInput>
    post_app_tag?: XOR<TagsScalarRelationFilter, TagsWhereInput>
  }, "id" | "post_id_tag_id">

  export type post_app_post_tagsOrderByWithAggregationInput = {
    id?: SortOrder
    post_id?: SortOrder
    tag_id?: SortOrder
    _count?: post_app_post_tagsCountOrderByAggregateInput
    _avg?: post_app_post_tagsAvgOrderByAggregateInput
    _max?: post_app_post_tagsMaxOrderByAggregateInput
    _min?: post_app_post_tagsMinOrderByAggregateInput
    _sum?: post_app_post_tagsSumOrderByAggregateInput
  }

  export type post_app_post_tagsScalarWhereWithAggregatesInput = {
    AND?: post_app_post_tagsScalarWhereWithAggregatesInput | post_app_post_tagsScalarWhereWithAggregatesInput[]
    OR?: post_app_post_tagsScalarWhereWithAggregatesInput[]
    NOT?: post_app_post_tagsScalarWhereWithAggregatesInput | post_app_post_tagsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"post_app_post_tags"> | bigint | number
    post_id?: BigIntWithAggregatesFilter<"post_app_post_tags"> | bigint | number
    tag_id?: BigIntWithAggregatesFilter<"post_app_post_tags"> | bigint | number
  }

  export type user_app_verificationcodeWhereInput = {
    AND?: user_app_verificationcodeWhereInput | user_app_verificationcodeWhereInput[]
    OR?: user_app_verificationcodeWhereInput[]
    NOT?: user_app_verificationcodeWhereInput | user_app_verificationcodeWhereInput[]
    id?: BigIntFilter<"user_app_verificationcode"> | bigint | number
    username?: StringFilter<"user_app_verificationcode"> | string
    code?: StringFilter<"user_app_verificationcode"> | string
    created_at?: DateTimeFilter<"user_app_verificationcode"> | Date | string
  }

  export type user_app_verificationcodeOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    code?: SortOrder
    created_at?: SortOrder
    _relevance?: user_app_verificationcodeOrderByRelevanceInput
  }

  export type user_app_verificationcodeWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: user_app_verificationcodeWhereInput | user_app_verificationcodeWhereInput[]
    OR?: user_app_verificationcodeWhereInput[]
    NOT?: user_app_verificationcodeWhereInput | user_app_verificationcodeWhereInput[]
    username?: StringFilter<"user_app_verificationcode"> | string
    code?: StringFilter<"user_app_verificationcode"> | string
    created_at?: DateTimeFilter<"user_app_verificationcode"> | Date | string
  }, "id">

  export type user_app_verificationcodeOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    code?: SortOrder
    created_at?: SortOrder
    _count?: user_app_verificationcodeCountOrderByAggregateInput
    _avg?: user_app_verificationcodeAvgOrderByAggregateInput
    _max?: user_app_verificationcodeMaxOrderByAggregateInput
    _min?: user_app_verificationcodeMinOrderByAggregateInput
    _sum?: user_app_verificationcodeSumOrderByAggregateInput
  }

  export type user_app_verificationcodeScalarWhereWithAggregatesInput = {
    AND?: user_app_verificationcodeScalarWhereWithAggregatesInput | user_app_verificationcodeScalarWhereWithAggregatesInput[]
    OR?: user_app_verificationcodeScalarWhereWithAggregatesInput[]
    NOT?: user_app_verificationcodeScalarWhereWithAggregatesInput | user_app_verificationcodeScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"user_app_verificationcode"> | bigint | number
    username?: StringWithAggregatesFilter<"user_app_verificationcode"> | string
    code?: StringWithAggregatesFilter<"user_app_verificationcode"> | string
    created_at?: DateTimeWithAggregatesFilter<"user_app_verificationcode"> | Date | string
  }

  export type AlbumWhereInput = {
    AND?: AlbumWhereInput | AlbumWhereInput[]
    OR?: AlbumWhereInput[]
    NOT?: AlbumWhereInput | AlbumWhereInput[]
    id?: BigIntFilter<"Album"> | bigint | number
    name?: StringFilter<"Album"> | string
    created_at?: DateTimeFilter<"Album"> | Date | string
    preview_image?: StringNullableFilter<"Album"> | string | null
    shown?: BoolFilter<"Album"> | boolean
    topic_id?: BigIntFilter<"Album"> | bigint | number
    author_id?: BigIntFilter<"Album"> | bigint | number
    author?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
    post_app_tag?: XOR<TagsScalarRelationFilter, TagsWhereInput>
    images?: Post_app_album_imagesListRelationFilter
  }

  export type AlbumOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    preview_image?: SortOrderInput | SortOrder
    shown?: SortOrder
    topic_id?: SortOrder
    author_id?: SortOrder
    author?: ProfileOrderByWithRelationInput
    post_app_tag?: TagsOrderByWithRelationInput
    images?: post_app_album_imagesOrderByRelationAggregateInput
    _relevance?: AlbumOrderByRelevanceInput
  }

  export type AlbumWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: AlbumWhereInput | AlbumWhereInput[]
    OR?: AlbumWhereInput[]
    NOT?: AlbumWhereInput | AlbumWhereInput[]
    name?: StringFilter<"Album"> | string
    created_at?: DateTimeFilter<"Album"> | Date | string
    preview_image?: StringNullableFilter<"Album"> | string | null
    shown?: BoolFilter<"Album"> | boolean
    topic_id?: BigIntFilter<"Album"> | bigint | number
    author_id?: BigIntFilter<"Album"> | bigint | number
    author?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
    post_app_tag?: XOR<TagsScalarRelationFilter, TagsWhereInput>
    images?: Post_app_album_imagesListRelationFilter
  }, "id">

  export type AlbumOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    preview_image?: SortOrderInput | SortOrder
    shown?: SortOrder
    topic_id?: SortOrder
    author_id?: SortOrder
    _count?: AlbumCountOrderByAggregateInput
    _avg?: AlbumAvgOrderByAggregateInput
    _max?: AlbumMaxOrderByAggregateInput
    _min?: AlbumMinOrderByAggregateInput
    _sum?: AlbumSumOrderByAggregateInput
  }

  export type AlbumScalarWhereWithAggregatesInput = {
    AND?: AlbumScalarWhereWithAggregatesInput | AlbumScalarWhereWithAggregatesInput[]
    OR?: AlbumScalarWhereWithAggregatesInput[]
    NOT?: AlbumScalarWhereWithAggregatesInput | AlbumScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Album"> | bigint | number
    name?: StringWithAggregatesFilter<"Album"> | string
    created_at?: DateTimeWithAggregatesFilter<"Album"> | Date | string
    preview_image?: StringNullableWithAggregatesFilter<"Album"> | string | null
    shown?: BoolWithAggregatesFilter<"Album"> | boolean
    topic_id?: BigIntWithAggregatesFilter<"Album"> | bigint | number
    author_id?: BigIntWithAggregatesFilter<"Album"> | bigint | number
  }

  export type post_app_album_imagesWhereInput = {
    AND?: post_app_album_imagesWhereInput | post_app_album_imagesWhereInput[]
    OR?: post_app_album_imagesWhereInput[]
    NOT?: post_app_album_imagesWhereInput | post_app_album_imagesWhereInput[]
    id?: BigIntFilter<"post_app_album_images"> | bigint | number
    album_id?: BigIntFilter<"post_app_album_images"> | bigint | number
    image_id?: BigIntFilter<"post_app_album_images"> | bigint | number
    album?: XOR<AlbumScalarRelationFilter, AlbumWhereInput>
    image?: XOR<ImageScalarRelationFilter, ImageWhereInput>
  }

  export type post_app_album_imagesOrderByWithRelationInput = {
    id?: SortOrder
    album_id?: SortOrder
    image_id?: SortOrder
    album?: AlbumOrderByWithRelationInput
    image?: ImageOrderByWithRelationInput
  }

  export type post_app_album_imagesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    album_id_image_id?: post_app_album_imagesAlbum_idImage_idCompoundUniqueInput
    AND?: post_app_album_imagesWhereInput | post_app_album_imagesWhereInput[]
    OR?: post_app_album_imagesWhereInput[]
    NOT?: post_app_album_imagesWhereInput | post_app_album_imagesWhereInput[]
    album_id?: BigIntFilter<"post_app_album_images"> | bigint | number
    image_id?: BigIntFilter<"post_app_album_images"> | bigint | number
    album?: XOR<AlbumScalarRelationFilter, AlbumWhereInput>
    image?: XOR<ImageScalarRelationFilter, ImageWhereInput>
  }, "id" | "album_id_image_id">

  export type post_app_album_imagesOrderByWithAggregationInput = {
    id?: SortOrder
    album_id?: SortOrder
    image_id?: SortOrder
    _count?: post_app_album_imagesCountOrderByAggregateInput
    _avg?: post_app_album_imagesAvgOrderByAggregateInput
    _max?: post_app_album_imagesMaxOrderByAggregateInput
    _min?: post_app_album_imagesMinOrderByAggregateInput
    _sum?: post_app_album_imagesSumOrderByAggregateInput
  }

  export type post_app_album_imagesScalarWhereWithAggregatesInput = {
    AND?: post_app_album_imagesScalarWhereWithAggregatesInput | post_app_album_imagesScalarWhereWithAggregatesInput[]
    OR?: post_app_album_imagesScalarWhereWithAggregatesInput[]
    NOT?: post_app_album_imagesScalarWhereWithAggregatesInput | post_app_album_imagesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"post_app_album_images"> | bigint | number
    album_id?: BigIntWithAggregatesFilter<"post_app_album_images"> | bigint | number
    image_id?: BigIntWithAggregatesFilter<"post_app_album_images"> | bigint | number
  }

  export type ChatGroupWhereInput = {
    AND?: ChatGroupWhereInput | ChatGroupWhereInput[]
    OR?: ChatGroupWhereInput[]
    NOT?: ChatGroupWhereInput | ChatGroupWhereInput[]
    id?: BigIntFilter<"ChatGroup"> | bigint | number
    name?: StringFilter<"ChatGroup"> | string
    is_personal_chat?: BoolFilter<"ChatGroup"> | boolean
    admin_id?: BigIntFilter<"ChatGroup"> | bigint | number
    avatar?: StringNullableFilter<"ChatGroup"> | string | null
    admin?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
    chat_app_chatgroup_members?: Chat_app_chatgroup_membersListRelationFilter
    chat_app_chatmessage?: ChatMessageListRelationFilter
  }

  export type ChatGroupOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    is_personal_chat?: SortOrder
    admin_id?: SortOrder
    avatar?: SortOrderInput | SortOrder
    admin?: ProfileOrderByWithRelationInput
    chat_app_chatgroup_members?: chat_app_chatgroup_membersOrderByRelationAggregateInput
    chat_app_chatmessage?: ChatMessageOrderByRelationAggregateInput
    _relevance?: ChatGroupOrderByRelevanceInput
  }

  export type ChatGroupWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: ChatGroupWhereInput | ChatGroupWhereInput[]
    OR?: ChatGroupWhereInput[]
    NOT?: ChatGroupWhereInput | ChatGroupWhereInput[]
    name?: StringFilter<"ChatGroup"> | string
    is_personal_chat?: BoolFilter<"ChatGroup"> | boolean
    admin_id?: BigIntFilter<"ChatGroup"> | bigint | number
    avatar?: StringNullableFilter<"ChatGroup"> | string | null
    admin?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
    chat_app_chatgroup_members?: Chat_app_chatgroup_membersListRelationFilter
    chat_app_chatmessage?: ChatMessageListRelationFilter
  }, "id">

  export type ChatGroupOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    is_personal_chat?: SortOrder
    admin_id?: SortOrder
    avatar?: SortOrderInput | SortOrder
    _count?: ChatGroupCountOrderByAggregateInput
    _avg?: ChatGroupAvgOrderByAggregateInput
    _max?: ChatGroupMaxOrderByAggregateInput
    _min?: ChatGroupMinOrderByAggregateInput
    _sum?: ChatGroupSumOrderByAggregateInput
  }

  export type ChatGroupScalarWhereWithAggregatesInput = {
    AND?: ChatGroupScalarWhereWithAggregatesInput | ChatGroupScalarWhereWithAggregatesInput[]
    OR?: ChatGroupScalarWhereWithAggregatesInput[]
    NOT?: ChatGroupScalarWhereWithAggregatesInput | ChatGroupScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"ChatGroup"> | bigint | number
    name?: StringWithAggregatesFilter<"ChatGroup"> | string
    is_personal_chat?: BoolWithAggregatesFilter<"ChatGroup"> | boolean
    admin_id?: BigIntWithAggregatesFilter<"ChatGroup"> | bigint | number
    avatar?: StringNullableWithAggregatesFilter<"ChatGroup"> | string | null
  }

  export type ChatMessageWhereInput = {
    AND?: ChatMessageWhereInput | ChatMessageWhereInput[]
    OR?: ChatMessageWhereInput[]
    NOT?: ChatMessageWhereInput | ChatMessageWhereInput[]
    id?: BigIntFilter<"ChatMessage"> | bigint | number
    content?: StringFilter<"ChatMessage"> | string
    sent_at?: DateTimeFilter<"ChatMessage"> | Date | string
    author_id?: BigIntFilter<"ChatMessage"> | bigint | number
    chat_group_id?: BigIntFilter<"ChatMessage"> | bigint | number
    attached_image?: StringNullableFilter<"ChatMessage"> | string | null
    author?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
    chat_app_chatgroup?: XOR<ChatGroupScalarRelationFilter, ChatGroupWhereInput>
  }

  export type ChatMessageOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    sent_at?: SortOrder
    author_id?: SortOrder
    chat_group_id?: SortOrder
    attached_image?: SortOrderInput | SortOrder
    author?: ProfileOrderByWithRelationInput
    chat_app_chatgroup?: ChatGroupOrderByWithRelationInput
    _relevance?: ChatMessageOrderByRelevanceInput
  }

  export type ChatMessageWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: ChatMessageWhereInput | ChatMessageWhereInput[]
    OR?: ChatMessageWhereInput[]
    NOT?: ChatMessageWhereInput | ChatMessageWhereInput[]
    content?: StringFilter<"ChatMessage"> | string
    sent_at?: DateTimeFilter<"ChatMessage"> | Date | string
    author_id?: BigIntFilter<"ChatMessage"> | bigint | number
    chat_group_id?: BigIntFilter<"ChatMessage"> | bigint | number
    attached_image?: StringNullableFilter<"ChatMessage"> | string | null
    author?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
    chat_app_chatgroup?: XOR<ChatGroupScalarRelationFilter, ChatGroupWhereInput>
  }, "id">

  export type ChatMessageOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    sent_at?: SortOrder
    author_id?: SortOrder
    chat_group_id?: SortOrder
    attached_image?: SortOrderInput | SortOrder
    _count?: ChatMessageCountOrderByAggregateInput
    _avg?: ChatMessageAvgOrderByAggregateInput
    _max?: ChatMessageMaxOrderByAggregateInput
    _min?: ChatMessageMinOrderByAggregateInput
    _sum?: ChatMessageSumOrderByAggregateInput
  }

  export type ChatMessageScalarWhereWithAggregatesInput = {
    AND?: ChatMessageScalarWhereWithAggregatesInput | ChatMessageScalarWhereWithAggregatesInput[]
    OR?: ChatMessageScalarWhereWithAggregatesInput[]
    NOT?: ChatMessageScalarWhereWithAggregatesInput | ChatMessageScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"ChatMessage"> | bigint | number
    content?: StringWithAggregatesFilter<"ChatMessage"> | string
    sent_at?: DateTimeWithAggregatesFilter<"ChatMessage"> | Date | string
    author_id?: BigIntWithAggregatesFilter<"ChatMessage"> | bigint | number
    chat_group_id?: BigIntWithAggregatesFilter<"ChatMessage"> | bigint | number
    attached_image?: StringNullableWithAggregatesFilter<"ChatMessage"> | string | null
  }

  export type chat_app_chatgroup_membersWhereInput = {
    AND?: chat_app_chatgroup_membersWhereInput | chat_app_chatgroup_membersWhereInput[]
    OR?: chat_app_chatgroup_membersWhereInput[]
    NOT?: chat_app_chatgroup_membersWhereInput | chat_app_chatgroup_membersWhereInput[]
    id?: BigIntFilter<"chat_app_chatgroup_members"> | bigint | number
    chatgroup_id?: BigIntFilter<"chat_app_chatgroup_members"> | bigint | number
    profile_id?: BigIntFilter<"chat_app_chatgroup_members"> | bigint | number
    chat_app_chatgroup?: XOR<ChatGroupScalarRelationFilter, ChatGroupWhereInput>
    profile?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }

  export type chat_app_chatgroup_membersOrderByWithRelationInput = {
    id?: SortOrder
    chatgroup_id?: SortOrder
    profile_id?: SortOrder
    chat_app_chatgroup?: ChatGroupOrderByWithRelationInput
    profile?: ProfileOrderByWithRelationInput
  }

  export type chat_app_chatgroup_membersWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    chatgroup_id_profile_id?: chat_app_chatgroup_membersChatgroup_idProfile_idCompoundUniqueInput
    AND?: chat_app_chatgroup_membersWhereInput | chat_app_chatgroup_membersWhereInput[]
    OR?: chat_app_chatgroup_membersWhereInput[]
    NOT?: chat_app_chatgroup_membersWhereInput | chat_app_chatgroup_membersWhereInput[]
    chatgroup_id?: BigIntFilter<"chat_app_chatgroup_members"> | bigint | number
    profile_id?: BigIntFilter<"chat_app_chatgroup_members"> | bigint | number
    chat_app_chatgroup?: XOR<ChatGroupScalarRelationFilter, ChatGroupWhereInput>
    profile?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }, "id" | "chatgroup_id_profile_id">

  export type chat_app_chatgroup_membersOrderByWithAggregationInput = {
    id?: SortOrder
    chatgroup_id?: SortOrder
    profile_id?: SortOrder
    _count?: chat_app_chatgroup_membersCountOrderByAggregateInput
    _avg?: chat_app_chatgroup_membersAvgOrderByAggregateInput
    _max?: chat_app_chatgroup_membersMaxOrderByAggregateInput
    _min?: chat_app_chatgroup_membersMinOrderByAggregateInput
    _sum?: chat_app_chatgroup_membersSumOrderByAggregateInput
  }

  export type chat_app_chatgroup_membersScalarWhereWithAggregatesInput = {
    AND?: chat_app_chatgroup_membersScalarWhereWithAggregatesInput | chat_app_chatgroup_membersScalarWhereWithAggregatesInput[]
    OR?: chat_app_chatgroup_membersScalarWhereWithAggregatesInput[]
    NOT?: chat_app_chatgroup_membersScalarWhereWithAggregatesInput | chat_app_chatgroup_membersScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"chat_app_chatgroup_members"> | bigint | number
    chatgroup_id?: BigIntWithAggregatesFilter<"chat_app_chatgroup_members"> | bigint | number
    profile_id?: BigIntWithAggregatesFilter<"chat_app_chatgroup_members"> | bigint | number
  }

  export type FriendshipWhereInput = {
    AND?: FriendshipWhereInput | FriendshipWhereInput[]
    OR?: FriendshipWhereInput[]
    NOT?: FriendshipWhereInput | FriendshipWhereInput[]
    id?: BigIntFilter<"Friendship"> | bigint | number
    accepted?: BoolFilter<"Friendship"> | boolean
    profile1_id?: BigIntFilter<"Friendship"> | bigint | number
    profile2_id?: BigIntFilter<"Friendship"> | bigint | number
    profile1?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
    profile2?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }

  export type FriendshipOrderByWithRelationInput = {
    id?: SortOrder
    accepted?: SortOrder
    profile1_id?: SortOrder
    profile2_id?: SortOrder
    profile1?: ProfileOrderByWithRelationInput
    profile2?: ProfileOrderByWithRelationInput
  }

  export type FriendshipWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: FriendshipWhereInput | FriendshipWhereInput[]
    OR?: FriendshipWhereInput[]
    NOT?: FriendshipWhereInput | FriendshipWhereInput[]
    accepted?: BoolFilter<"Friendship"> | boolean
    profile1_id?: BigIntFilter<"Friendship"> | bigint | number
    profile2_id?: BigIntFilter<"Friendship"> | bigint | number
    profile1?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
    profile2?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }, "id">

  export type FriendshipOrderByWithAggregationInput = {
    id?: SortOrder
    accepted?: SortOrder
    profile1_id?: SortOrder
    profile2_id?: SortOrder
    _count?: FriendshipCountOrderByAggregateInput
    _avg?: FriendshipAvgOrderByAggregateInput
    _max?: FriendshipMaxOrderByAggregateInput
    _min?: FriendshipMinOrderByAggregateInput
    _sum?: FriendshipSumOrderByAggregateInput
  }

  export type FriendshipScalarWhereWithAggregatesInput = {
    AND?: FriendshipScalarWhereWithAggregatesInput | FriendshipScalarWhereWithAggregatesInput[]
    OR?: FriendshipScalarWhereWithAggregatesInput[]
    NOT?: FriendshipScalarWhereWithAggregatesInput | FriendshipScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Friendship"> | bigint | number
    accepted?: BoolWithAggregatesFilter<"Friendship"> | boolean
    profile1_id?: BigIntWithAggregatesFilter<"Friendship"> | bigint | number
    profile2_id?: BigIntWithAggregatesFilter<"Friendship"> | bigint | number
  }

  export type ImageWhereInput = {
    AND?: ImageWhereInput | ImageWhereInput[]
    OR?: ImageWhereInput[]
    NOT?: ImageWhereInput | ImageWhereInput[]
    id?: BigIntFilter<"Image"> | bigint | number
    filename?: StringFilter<"Image"> | string
    file?: StringFilter<"Image"> | string
    uploaded_at?: DateTimeFilter<"Image"> | Date | string
    album_images?: Post_app_album_imagesListRelationFilter
    post_app_post_images?: Post_app_post_imagesListRelationFilter
  }

  export type ImageOrderByWithRelationInput = {
    id?: SortOrder
    filename?: SortOrder
    file?: SortOrder
    uploaded_at?: SortOrder
    album_images?: post_app_album_imagesOrderByRelationAggregateInput
    post_app_post_images?: post_app_post_imagesOrderByRelationAggregateInput
    _relevance?: ImageOrderByRelevanceInput
  }

  export type ImageWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: ImageWhereInput | ImageWhereInput[]
    OR?: ImageWhereInput[]
    NOT?: ImageWhereInput | ImageWhereInput[]
    filename?: StringFilter<"Image"> | string
    file?: StringFilter<"Image"> | string
    uploaded_at?: DateTimeFilter<"Image"> | Date | string
    album_images?: Post_app_album_imagesListRelationFilter
    post_app_post_images?: Post_app_post_imagesListRelationFilter
  }, "id">

  export type ImageOrderByWithAggregationInput = {
    id?: SortOrder
    filename?: SortOrder
    file?: SortOrder
    uploaded_at?: SortOrder
    _count?: ImageCountOrderByAggregateInput
    _avg?: ImageAvgOrderByAggregateInput
    _max?: ImageMaxOrderByAggregateInput
    _min?: ImageMinOrderByAggregateInput
    _sum?: ImageSumOrderByAggregateInput
  }

  export type ImageScalarWhereWithAggregatesInput = {
    AND?: ImageScalarWhereWithAggregatesInput | ImageScalarWhereWithAggregatesInput[]
    OR?: ImageScalarWhereWithAggregatesInput[]
    NOT?: ImageScalarWhereWithAggregatesInput | ImageScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Image"> | bigint | number
    filename?: StringWithAggregatesFilter<"Image"> | string
    file?: StringWithAggregatesFilter<"Image"> | string
    uploaded_at?: DateTimeWithAggregatesFilter<"Image"> | Date | string
  }

  export type PostWhereInput = {
    AND?: PostWhereInput | PostWhereInput[]
    OR?: PostWhereInput[]
    NOT?: PostWhereInput | PostWhereInput[]
    id?: BigIntFilter<"Post"> | bigint | number
    title?: StringFilter<"Post"> | string
    content?: StringFilter<"Post"> | string
    author_id?: BigIntFilter<"Post"> | bigint | number
    topic?: StringFilter<"Post"> | string
    post_app_link?: LinkListRelationFilter
    author?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
    post_app_post_images?: Post_app_post_imagesListRelationFilter
    likes?: Post_app_post_likesListRelationFilter
    post_app_post_tags?: Post_app_post_tagsListRelationFilter
    views?: Post_app_post_viewsListRelationFilter
  }

  export type PostOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    author_id?: SortOrder
    topic?: SortOrder
    post_app_link?: LinkOrderByRelationAggregateInput
    author?: ProfileOrderByWithRelationInput
    post_app_post_images?: post_app_post_imagesOrderByRelationAggregateInput
    likes?: post_app_post_likesOrderByRelationAggregateInput
    post_app_post_tags?: post_app_post_tagsOrderByRelationAggregateInput
    views?: post_app_post_viewsOrderByRelationAggregateInput
    _relevance?: PostOrderByRelevanceInput
  }

  export type PostWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: PostWhereInput | PostWhereInput[]
    OR?: PostWhereInput[]
    NOT?: PostWhereInput | PostWhereInput[]
    title?: StringFilter<"Post"> | string
    content?: StringFilter<"Post"> | string
    author_id?: BigIntFilter<"Post"> | bigint | number
    topic?: StringFilter<"Post"> | string
    post_app_link?: LinkListRelationFilter
    author?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
    post_app_post_images?: Post_app_post_imagesListRelationFilter
    likes?: Post_app_post_likesListRelationFilter
    post_app_post_tags?: Post_app_post_tagsListRelationFilter
    views?: Post_app_post_viewsListRelationFilter
  }, "id">

  export type PostOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    author_id?: SortOrder
    topic?: SortOrder
    _count?: PostCountOrderByAggregateInput
    _avg?: PostAvgOrderByAggregateInput
    _max?: PostMaxOrderByAggregateInput
    _min?: PostMinOrderByAggregateInput
    _sum?: PostSumOrderByAggregateInput
  }

  export type PostScalarWhereWithAggregatesInput = {
    AND?: PostScalarWhereWithAggregatesInput | PostScalarWhereWithAggregatesInput[]
    OR?: PostScalarWhereWithAggregatesInput[]
    NOT?: PostScalarWhereWithAggregatesInput | PostScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Post"> | bigint | number
    title?: StringWithAggregatesFilter<"Post"> | string
    content?: StringWithAggregatesFilter<"Post"> | string
    author_id?: BigIntWithAggregatesFilter<"Post"> | bigint | number
    topic?: StringWithAggregatesFilter<"Post"> | string
  }

  export type TagsWhereInput = {
    AND?: TagsWhereInput | TagsWhereInput[]
    OR?: TagsWhereInput[]
    NOT?: TagsWhereInput | TagsWhereInput[]
    id?: BigIntFilter<"Tags"> | bigint | number
    name?: StringFilter<"Tags"> | string
    post_app_album?: AlbumListRelationFilter
    post_app_post_tags?: Post_app_post_tagsListRelationFilter
  }

  export type TagsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    post_app_album?: AlbumOrderByRelationAggregateInput
    post_app_post_tags?: post_app_post_tagsOrderByRelationAggregateInput
    _relevance?: TagsOrderByRelevanceInput
  }

  export type TagsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    name?: string
    AND?: TagsWhereInput | TagsWhereInput[]
    OR?: TagsWhereInput[]
    NOT?: TagsWhereInput | TagsWhereInput[]
    post_app_album?: AlbumListRelationFilter
    post_app_post_tags?: Post_app_post_tagsListRelationFilter
  }, "id" | "name">

  export type TagsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: TagsCountOrderByAggregateInput
    _avg?: TagsAvgOrderByAggregateInput
    _max?: TagsMaxOrderByAggregateInput
    _min?: TagsMinOrderByAggregateInput
    _sum?: TagsSumOrderByAggregateInput
  }

  export type TagsScalarWhereWithAggregatesInput = {
    AND?: TagsScalarWhereWithAggregatesInput | TagsScalarWhereWithAggregatesInput[]
    OR?: TagsScalarWhereWithAggregatesInput[]
    NOT?: TagsScalarWhereWithAggregatesInput | TagsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Tags"> | bigint | number
    name?: StringWithAggregatesFilter<"Tags"> | string
  }

  export type LinkWhereInput = {
    AND?: LinkWhereInput | LinkWhereInput[]
    OR?: LinkWhereInput[]
    NOT?: LinkWhereInput | LinkWhereInput[]
    id?: BigIntFilter<"Link"> | bigint | number
    url?: StringFilter<"Link"> | string
    post_id?: BigIntFilter<"Link"> | bigint | number
    post_app_post?: XOR<PostScalarRelationFilter, PostWhereInput>
  }

  export type LinkOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    post_id?: SortOrder
    post_app_post?: PostOrderByWithRelationInput
    _relevance?: LinkOrderByRelevanceInput
  }

  export type LinkWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: LinkWhereInput | LinkWhereInput[]
    OR?: LinkWhereInput[]
    NOT?: LinkWhereInput | LinkWhereInput[]
    url?: StringFilter<"Link"> | string
    post_id?: BigIntFilter<"Link"> | bigint | number
    post_app_post?: XOR<PostScalarRelationFilter, PostWhereInput>
  }, "id">

  export type LinkOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    post_id?: SortOrder
    _count?: LinkCountOrderByAggregateInput
    _avg?: LinkAvgOrderByAggregateInput
    _max?: LinkMaxOrderByAggregateInput
    _min?: LinkMinOrderByAggregateInput
    _sum?: LinkSumOrderByAggregateInput
  }

  export type LinkScalarWhereWithAggregatesInput = {
    AND?: LinkScalarWhereWithAggregatesInput | LinkScalarWhereWithAggregatesInput[]
    OR?: LinkScalarWhereWithAggregatesInput[]
    NOT?: LinkScalarWhereWithAggregatesInput | LinkScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Link"> | bigint | number
    url?: StringWithAggregatesFilter<"Link"> | string
    post_id?: BigIntWithAggregatesFilter<"Link"> | bigint | number
  }

  export type post_app_post_likesWhereInput = {
    AND?: post_app_post_likesWhereInput | post_app_post_likesWhereInput[]
    OR?: post_app_post_likesWhereInput[]
    NOT?: post_app_post_likesWhereInput | post_app_post_likesWhereInput[]
    id?: BigIntFilter<"post_app_post_likes"> | bigint | number
    post_id?: BigIntFilter<"post_app_post_likes"> | bigint | number
    profile_id?: BigIntFilter<"post_app_post_likes"> | bigint | number
    post?: XOR<PostScalarRelationFilter, PostWhereInput>
    user_app_profile?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }

  export type post_app_post_likesOrderByWithRelationInput = {
    id?: SortOrder
    post_id?: SortOrder
    profile_id?: SortOrder
    post?: PostOrderByWithRelationInput
    user_app_profile?: ProfileOrderByWithRelationInput
  }

  export type post_app_post_likesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    post_id_profile_id?: post_app_post_likesPost_idProfile_idCompoundUniqueInput
    AND?: post_app_post_likesWhereInput | post_app_post_likesWhereInput[]
    OR?: post_app_post_likesWhereInput[]
    NOT?: post_app_post_likesWhereInput | post_app_post_likesWhereInput[]
    post_id?: BigIntFilter<"post_app_post_likes"> | bigint | number
    profile_id?: BigIntFilter<"post_app_post_likes"> | bigint | number
    post?: XOR<PostScalarRelationFilter, PostWhereInput>
    user_app_profile?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }, "id" | "post_id_profile_id">

  export type post_app_post_likesOrderByWithAggregationInput = {
    id?: SortOrder
    post_id?: SortOrder
    profile_id?: SortOrder
    _count?: post_app_post_likesCountOrderByAggregateInput
    _avg?: post_app_post_likesAvgOrderByAggregateInput
    _max?: post_app_post_likesMaxOrderByAggregateInput
    _min?: post_app_post_likesMinOrderByAggregateInput
    _sum?: post_app_post_likesSumOrderByAggregateInput
  }

  export type post_app_post_likesScalarWhereWithAggregatesInput = {
    AND?: post_app_post_likesScalarWhereWithAggregatesInput | post_app_post_likesScalarWhereWithAggregatesInput[]
    OR?: post_app_post_likesScalarWhereWithAggregatesInput[]
    NOT?: post_app_post_likesScalarWhereWithAggregatesInput | post_app_post_likesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"post_app_post_likes"> | bigint | number
    post_id?: BigIntWithAggregatesFilter<"post_app_post_likes"> | bigint | number
    profile_id?: BigIntWithAggregatesFilter<"post_app_post_likes"> | bigint | number
  }

  export type post_app_post_viewsWhereInput = {
    AND?: post_app_post_viewsWhereInput | post_app_post_viewsWhereInput[]
    OR?: post_app_post_viewsWhereInput[]
    NOT?: post_app_post_viewsWhereInput | post_app_post_viewsWhereInput[]
    id?: BigIntFilter<"post_app_post_views"> | bigint | number
    post_id?: BigIntFilter<"post_app_post_views"> | bigint | number
    profile_id?: BigIntFilter<"post_app_post_views"> | bigint | number
    post?: XOR<PostScalarRelationFilter, PostWhereInput>
    user_app_profile?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }

  export type post_app_post_viewsOrderByWithRelationInput = {
    id?: SortOrder
    post_id?: SortOrder
    profile_id?: SortOrder
    post?: PostOrderByWithRelationInput
    user_app_profile?: ProfileOrderByWithRelationInput
  }

  export type post_app_post_viewsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    post_id_profile_id?: post_app_post_viewsPost_idProfile_idCompoundUniqueInput
    AND?: post_app_post_viewsWhereInput | post_app_post_viewsWhereInput[]
    OR?: post_app_post_viewsWhereInput[]
    NOT?: post_app_post_viewsWhereInput | post_app_post_viewsWhereInput[]
    post_id?: BigIntFilter<"post_app_post_views"> | bigint | number
    profile_id?: BigIntFilter<"post_app_post_views"> | bigint | number
    post?: XOR<PostScalarRelationFilter, PostWhereInput>
    user_app_profile?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }, "id" | "post_id_profile_id">

  export type post_app_post_viewsOrderByWithAggregationInput = {
    id?: SortOrder
    post_id?: SortOrder
    profile_id?: SortOrder
    _count?: post_app_post_viewsCountOrderByAggregateInput
    _avg?: post_app_post_viewsAvgOrderByAggregateInput
    _max?: post_app_post_viewsMaxOrderByAggregateInput
    _min?: post_app_post_viewsMinOrderByAggregateInput
    _sum?: post_app_post_viewsSumOrderByAggregateInput
  }

  export type post_app_post_viewsScalarWhereWithAggregatesInput = {
    AND?: post_app_post_viewsScalarWhereWithAggregatesInput | post_app_post_viewsScalarWhereWithAggregatesInput[]
    OR?: post_app_post_viewsScalarWhereWithAggregatesInput[]
    NOT?: post_app_post_viewsScalarWhereWithAggregatesInput | post_app_post_viewsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"post_app_post_views"> | bigint | number
    post_id?: BigIntWithAggregatesFilter<"post_app_post_views"> | bigint | number
    profile_id?: BigIntWithAggregatesFilter<"post_app_post_views"> | bigint | number
  }

  export type ProfileWhereInput = {
    AND?: ProfileWhereInput | ProfileWhereInput[]
    OR?: ProfileWhereInput[]
    NOT?: ProfileWhereInput | ProfileWhereInput[]
    id?: BigIntFilter<"Profile"> | bigint | number
    date_of_birth?: DateTimeFilter<"Profile"> | Date | string
    user_id?: IntFilter<"Profile"> | number
    signature?: StringNullableFilter<"Profile"> | string | null
    administered_groups?: ChatGroupListRelationFilter
    chat_group_members?: Chat_app_chatgroup_membersListRelationFilter
    chat_messages?: ChatMessageListRelationFilter
    album?: AlbumListRelationFilter
    post?: PostListRelationFilter
    post_app_post_likes?: Post_app_post_likesListRelationFilter
    post_app_post_views?: Post_app_post_viewsListRelationFilter
    avatar?: AvatarListRelationFilter
    friendship_from?: FriendshipListRelationFilter
    friendship_to?: FriendshipListRelationFilter
    auth_user?: XOR<Auth_userScalarRelationFilter, auth_userWhereInput>
  }

  export type ProfileOrderByWithRelationInput = {
    id?: SortOrder
    date_of_birth?: SortOrder
    user_id?: SortOrder
    signature?: SortOrderInput | SortOrder
    administered_groups?: ChatGroupOrderByRelationAggregateInput
    chat_group_members?: chat_app_chatgroup_membersOrderByRelationAggregateInput
    chat_messages?: ChatMessageOrderByRelationAggregateInput
    album?: AlbumOrderByRelationAggregateInput
    post?: PostOrderByRelationAggregateInput
    post_app_post_likes?: post_app_post_likesOrderByRelationAggregateInput
    post_app_post_views?: post_app_post_viewsOrderByRelationAggregateInput
    avatar?: AvatarOrderByRelationAggregateInput
    friendship_from?: FriendshipOrderByRelationAggregateInput
    friendship_to?: FriendshipOrderByRelationAggregateInput
    auth_user?: auth_userOrderByWithRelationInput
    _relevance?: ProfileOrderByRelevanceInput
  }

  export type ProfileWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    user_id?: number
    AND?: ProfileWhereInput | ProfileWhereInput[]
    OR?: ProfileWhereInput[]
    NOT?: ProfileWhereInput | ProfileWhereInput[]
    date_of_birth?: DateTimeFilter<"Profile"> | Date | string
    signature?: StringNullableFilter<"Profile"> | string | null
    administered_groups?: ChatGroupListRelationFilter
    chat_group_members?: Chat_app_chatgroup_membersListRelationFilter
    chat_messages?: ChatMessageListRelationFilter
    album?: AlbumListRelationFilter
    post?: PostListRelationFilter
    post_app_post_likes?: Post_app_post_likesListRelationFilter
    post_app_post_views?: Post_app_post_viewsListRelationFilter
    avatar?: AvatarListRelationFilter
    friendship_from?: FriendshipListRelationFilter
    friendship_to?: FriendshipListRelationFilter
    auth_user?: XOR<Auth_userScalarRelationFilter, auth_userWhereInput>
  }, "id" | "user_id">

  export type ProfileOrderByWithAggregationInput = {
    id?: SortOrder
    date_of_birth?: SortOrder
    user_id?: SortOrder
    signature?: SortOrderInput | SortOrder
    _count?: ProfileCountOrderByAggregateInput
    _avg?: ProfileAvgOrderByAggregateInput
    _max?: ProfileMaxOrderByAggregateInput
    _min?: ProfileMinOrderByAggregateInput
    _sum?: ProfileSumOrderByAggregateInput
  }

  export type ProfileScalarWhereWithAggregatesInput = {
    AND?: ProfileScalarWhereWithAggregatesInput | ProfileScalarWhereWithAggregatesInput[]
    OR?: ProfileScalarWhereWithAggregatesInput[]
    NOT?: ProfileScalarWhereWithAggregatesInput | ProfileScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Profile"> | bigint | number
    date_of_birth?: DateTimeWithAggregatesFilter<"Profile"> | Date | string
    user_id?: IntWithAggregatesFilter<"Profile"> | number
    signature?: StringNullableWithAggregatesFilter<"Profile"> | string | null
  }

  export type AvatarWhereInput = {
    AND?: AvatarWhereInput | AvatarWhereInput[]
    OR?: AvatarWhereInput[]
    NOT?: AvatarWhereInput | AvatarWhereInput[]
    id?: BigIntFilter<"Avatar"> | bigint | number
    image?: StringFilter<"Avatar"> | string
    active?: BoolFilter<"Avatar"> | boolean
    shown?: BoolFilter<"Avatar"> | boolean
    profile_id?: BigIntFilter<"Avatar"> | bigint | number
    profile?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }

  export type AvatarOrderByWithRelationInput = {
    id?: SortOrder
    image?: SortOrder
    active?: SortOrder
    shown?: SortOrder
    profile_id?: SortOrder
    profile?: ProfileOrderByWithRelationInput
    _relevance?: AvatarOrderByRelevanceInput
  }

  export type AvatarWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: AvatarWhereInput | AvatarWhereInput[]
    OR?: AvatarWhereInput[]
    NOT?: AvatarWhereInput | AvatarWhereInput[]
    image?: StringFilter<"Avatar"> | string
    active?: BoolFilter<"Avatar"> | boolean
    shown?: BoolFilter<"Avatar"> | boolean
    profile_id?: BigIntFilter<"Avatar"> | bigint | number
    profile?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }, "id">

  export type AvatarOrderByWithAggregationInput = {
    id?: SortOrder
    image?: SortOrder
    active?: SortOrder
    shown?: SortOrder
    profile_id?: SortOrder
    _count?: AvatarCountOrderByAggregateInput
    _avg?: AvatarAvgOrderByAggregateInput
    _max?: AvatarMaxOrderByAggregateInput
    _min?: AvatarMinOrderByAggregateInput
    _sum?: AvatarSumOrderByAggregateInput
  }

  export type AvatarScalarWhereWithAggregatesInput = {
    AND?: AvatarScalarWhereWithAggregatesInput | AvatarScalarWhereWithAggregatesInput[]
    OR?: AvatarScalarWhereWithAggregatesInput[]
    NOT?: AvatarScalarWhereWithAggregatesInput | AvatarScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"Avatar"> | bigint | number
    image?: StringWithAggregatesFilter<"Avatar"> | string
    active?: BoolWithAggregatesFilter<"Avatar"> | boolean
    shown?: BoolWithAggregatesFilter<"Avatar"> | boolean
    profile_id?: BigIntWithAggregatesFilter<"Avatar"> | bigint | number
  }

  export type auth_groupCreateInput = {
    name: string
    auth_group_permissions?: auth_group_permissionsCreateNestedManyWithoutAuth_groupInput
    auth_user_groups?: auth_user_groupsCreateNestedManyWithoutAuth_groupInput
  }

  export type auth_groupUncheckedCreateInput = {
    id?: number
    name: string
    auth_group_permissions?: auth_group_permissionsUncheckedCreateNestedManyWithoutAuth_groupInput
    auth_user_groups?: auth_user_groupsUncheckedCreateNestedManyWithoutAuth_groupInput
  }

  export type auth_groupUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    auth_group_permissions?: auth_group_permissionsUpdateManyWithoutAuth_groupNestedInput
    auth_user_groups?: auth_user_groupsUpdateManyWithoutAuth_groupNestedInput
  }

  export type auth_groupUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    auth_group_permissions?: auth_group_permissionsUncheckedUpdateManyWithoutAuth_groupNestedInput
    auth_user_groups?: auth_user_groupsUncheckedUpdateManyWithoutAuth_groupNestedInput
  }

  export type auth_groupCreateManyInput = {
    id?: number
    name: string
  }

  export type auth_groupUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type auth_groupUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type auth_group_permissionsCreateInput = {
    id?: bigint | number
    auth_permission: auth_permissionCreateNestedOneWithoutAuth_group_permissionsInput
    auth_group: auth_groupCreateNestedOneWithoutAuth_group_permissionsInput
  }

  export type auth_group_permissionsUncheckedCreateInput = {
    id?: bigint | number
    group_id: number
    permission_id: number
  }

  export type auth_group_permissionsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    auth_permission?: auth_permissionUpdateOneRequiredWithoutAuth_group_permissionsNestedInput
    auth_group?: auth_groupUpdateOneRequiredWithoutAuth_group_permissionsNestedInput
  }

  export type auth_group_permissionsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    group_id?: IntFieldUpdateOperationsInput | number
    permission_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_group_permissionsCreateManyInput = {
    id?: bigint | number
    group_id: number
    permission_id: number
  }

  export type auth_group_permissionsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type auth_group_permissionsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    group_id?: IntFieldUpdateOperationsInput | number
    permission_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_permissionCreateInput = {
    name: string
    codename: string
    auth_group_permissions?: auth_group_permissionsCreateNestedManyWithoutAuth_permissionInput
    django_content_type: django_content_typeCreateNestedOneWithoutAuth_permissionInput
    auth_user_user_permissions?: auth_user_user_permissionsCreateNestedManyWithoutAuth_permissionInput
  }

  export type auth_permissionUncheckedCreateInput = {
    id?: number
    name: string
    content_type_id: number
    codename: string
    auth_group_permissions?: auth_group_permissionsUncheckedCreateNestedManyWithoutAuth_permissionInput
    auth_user_user_permissions?: auth_user_user_permissionsUncheckedCreateNestedManyWithoutAuth_permissionInput
  }

  export type auth_permissionUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    codename?: StringFieldUpdateOperationsInput | string
    auth_group_permissions?: auth_group_permissionsUpdateManyWithoutAuth_permissionNestedInput
    django_content_type?: django_content_typeUpdateOneRequiredWithoutAuth_permissionNestedInput
    auth_user_user_permissions?: auth_user_user_permissionsUpdateManyWithoutAuth_permissionNestedInput
  }

  export type auth_permissionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    content_type_id?: IntFieldUpdateOperationsInput | number
    codename?: StringFieldUpdateOperationsInput | string
    auth_group_permissions?: auth_group_permissionsUncheckedUpdateManyWithoutAuth_permissionNestedInput
    auth_user_user_permissions?: auth_user_user_permissionsUncheckedUpdateManyWithoutAuth_permissionNestedInput
  }

  export type auth_permissionCreateManyInput = {
    id?: number
    name: string
    content_type_id: number
    codename: string
  }

  export type auth_permissionUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    codename?: StringFieldUpdateOperationsInput | string
  }

  export type auth_permissionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    content_type_id?: IntFieldUpdateOperationsInput | number
    codename?: StringFieldUpdateOperationsInput | string
  }

  export type auth_userCreateInput = {
    password: string
    last_login?: Date | string | null
    is_superuser: boolean
    username: string
    first_name: string
    last_name: string
    email: string
    is_staff: boolean
    is_active: boolean
    date_joined: Date | string
    auth_user_groups?: auth_user_groupsCreateNestedManyWithoutAuth_userInput
    auth_user_user_permissions?: auth_user_user_permissionsCreateNestedManyWithoutAuth_userInput
    django_admin_log?: django_admin_logCreateNestedManyWithoutAuth_userInput
    user_app_profile?: ProfileCreateNestedOneWithoutAuth_userInput
  }

  export type auth_userUncheckedCreateInput = {
    id?: number
    password: string
    last_login?: Date | string | null
    is_superuser: boolean
    username: string
    first_name: string
    last_name: string
    email: string
    is_staff: boolean
    is_active: boolean
    date_joined: Date | string
    auth_user_groups?: auth_user_groupsUncheckedCreateNestedManyWithoutAuth_userInput
    auth_user_user_permissions?: auth_user_user_permissionsUncheckedCreateNestedManyWithoutAuth_userInput
    django_admin_log?: django_admin_logUncheckedCreateNestedManyWithoutAuth_userInput
    user_app_profile?: ProfileUncheckedCreateNestedOneWithoutAuth_userInput
  }

  export type auth_userUpdateInput = {
    password?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_superuser?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    is_staff?: BoolFieldUpdateOperationsInput | boolean
    is_active?: BoolFieldUpdateOperationsInput | boolean
    date_joined?: DateTimeFieldUpdateOperationsInput | Date | string
    auth_user_groups?: auth_user_groupsUpdateManyWithoutAuth_userNestedInput
    auth_user_user_permissions?: auth_user_user_permissionsUpdateManyWithoutAuth_userNestedInput
    django_admin_log?: django_admin_logUpdateManyWithoutAuth_userNestedInput
    user_app_profile?: ProfileUpdateOneWithoutAuth_userNestedInput
  }

  export type auth_userUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    password?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_superuser?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    is_staff?: BoolFieldUpdateOperationsInput | boolean
    is_active?: BoolFieldUpdateOperationsInput | boolean
    date_joined?: DateTimeFieldUpdateOperationsInput | Date | string
    auth_user_groups?: auth_user_groupsUncheckedUpdateManyWithoutAuth_userNestedInput
    auth_user_user_permissions?: auth_user_user_permissionsUncheckedUpdateManyWithoutAuth_userNestedInput
    django_admin_log?: django_admin_logUncheckedUpdateManyWithoutAuth_userNestedInput
    user_app_profile?: ProfileUncheckedUpdateOneWithoutAuth_userNestedInput
  }

  export type auth_userCreateManyInput = {
    id?: number
    password: string
    last_login?: Date | string | null
    is_superuser: boolean
    username: string
    first_name: string
    last_name: string
    email: string
    is_staff: boolean
    is_active: boolean
    date_joined: Date | string
  }

  export type auth_userUpdateManyMutationInput = {
    password?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_superuser?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    is_staff?: BoolFieldUpdateOperationsInput | boolean
    is_active?: BoolFieldUpdateOperationsInput | boolean
    date_joined?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type auth_userUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    password?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_superuser?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    is_staff?: BoolFieldUpdateOperationsInput | boolean
    is_active?: BoolFieldUpdateOperationsInput | boolean
    date_joined?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type auth_user_groupsCreateInput = {
    id?: bigint | number
    auth_group: auth_groupCreateNestedOneWithoutAuth_user_groupsInput
    auth_user: auth_userCreateNestedOneWithoutAuth_user_groupsInput
  }

  export type auth_user_groupsUncheckedCreateInput = {
    id?: bigint | number
    user_id: number
    group_id: number
  }

  export type auth_user_groupsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    auth_group?: auth_groupUpdateOneRequiredWithoutAuth_user_groupsNestedInput
    auth_user?: auth_userUpdateOneRequiredWithoutAuth_user_groupsNestedInput
  }

  export type auth_user_groupsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: IntFieldUpdateOperationsInput | number
    group_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_user_groupsCreateManyInput = {
    id?: bigint | number
    user_id: number
    group_id: number
  }

  export type auth_user_groupsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type auth_user_groupsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: IntFieldUpdateOperationsInput | number
    group_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_user_user_permissionsCreateInput = {
    id?: bigint | number
    auth_permission: auth_permissionCreateNestedOneWithoutAuth_user_user_permissionsInput
    auth_user: auth_userCreateNestedOneWithoutAuth_user_user_permissionsInput
  }

  export type auth_user_user_permissionsUncheckedCreateInput = {
    id?: bigint | number
    user_id: number
    permission_id: number
  }

  export type auth_user_user_permissionsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    auth_permission?: auth_permissionUpdateOneRequiredWithoutAuth_user_user_permissionsNestedInput
    auth_user?: auth_userUpdateOneRequiredWithoutAuth_user_user_permissionsNestedInput
  }

  export type auth_user_user_permissionsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: IntFieldUpdateOperationsInput | number
    permission_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_user_user_permissionsCreateManyInput = {
    id?: bigint | number
    user_id: number
    permission_id: number
  }

  export type auth_user_user_permissionsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type auth_user_user_permissionsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: IntFieldUpdateOperationsInput | number
    permission_id?: IntFieldUpdateOperationsInput | number
  }

  export type django_admin_logCreateInput = {
    action_time: Date | string
    object_id?: string | null
    object_repr: string
    action_flag: number
    change_message: string
    django_content_type?: django_content_typeCreateNestedOneWithoutDjango_admin_logInput
    auth_user: auth_userCreateNestedOneWithoutDjango_admin_logInput
  }

  export type django_admin_logUncheckedCreateInput = {
    id?: number
    action_time: Date | string
    object_id?: string | null
    object_repr: string
    action_flag: number
    change_message: string
    content_type_id?: number | null
    user_id: number
  }

  export type django_admin_logUpdateInput = {
    action_time?: DateTimeFieldUpdateOperationsInput | Date | string
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    object_repr?: StringFieldUpdateOperationsInput | string
    action_flag?: IntFieldUpdateOperationsInput | number
    change_message?: StringFieldUpdateOperationsInput | string
    django_content_type?: django_content_typeUpdateOneWithoutDjango_admin_logNestedInput
    auth_user?: auth_userUpdateOneRequiredWithoutDjango_admin_logNestedInput
  }

  export type django_admin_logUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    action_time?: DateTimeFieldUpdateOperationsInput | Date | string
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    object_repr?: StringFieldUpdateOperationsInput | string
    action_flag?: IntFieldUpdateOperationsInput | number
    change_message?: StringFieldUpdateOperationsInput | string
    content_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type django_admin_logCreateManyInput = {
    id?: number
    action_time: Date | string
    object_id?: string | null
    object_repr: string
    action_flag: number
    change_message: string
    content_type_id?: number | null
    user_id: number
  }

  export type django_admin_logUpdateManyMutationInput = {
    action_time?: DateTimeFieldUpdateOperationsInput | Date | string
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    object_repr?: StringFieldUpdateOperationsInput | string
    action_flag?: IntFieldUpdateOperationsInput | number
    change_message?: StringFieldUpdateOperationsInput | string
  }

  export type django_admin_logUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    action_time?: DateTimeFieldUpdateOperationsInput | Date | string
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    object_repr?: StringFieldUpdateOperationsInput | string
    action_flag?: IntFieldUpdateOperationsInput | number
    change_message?: StringFieldUpdateOperationsInput | string
    content_type_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type django_content_typeCreateInput = {
    app_label: string
    model: string
    auth_permission?: auth_permissionCreateNestedManyWithoutDjango_content_typeInput
    django_admin_log?: django_admin_logCreateNestedManyWithoutDjango_content_typeInput
  }

  export type django_content_typeUncheckedCreateInput = {
    id?: number
    app_label: string
    model: string
    auth_permission?: auth_permissionUncheckedCreateNestedManyWithoutDjango_content_typeInput
    django_admin_log?: django_admin_logUncheckedCreateNestedManyWithoutDjango_content_typeInput
  }

  export type django_content_typeUpdateInput = {
    app_label?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    auth_permission?: auth_permissionUpdateManyWithoutDjango_content_typeNestedInput
    django_admin_log?: django_admin_logUpdateManyWithoutDjango_content_typeNestedInput
  }

  export type django_content_typeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    app_label?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    auth_permission?: auth_permissionUncheckedUpdateManyWithoutDjango_content_typeNestedInput
    django_admin_log?: django_admin_logUncheckedUpdateManyWithoutDjango_content_typeNestedInput
  }

  export type django_content_typeCreateManyInput = {
    id?: number
    app_label: string
    model: string
  }

  export type django_content_typeUpdateManyMutationInput = {
    app_label?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
  }

  export type django_content_typeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    app_label?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
  }

  export type django_migrationsCreateInput = {
    id?: bigint | number
    app: string
    name: string
    applied: Date | string
  }

  export type django_migrationsUncheckedCreateInput = {
    id?: bigint | number
    app: string
    name: string
    applied: Date | string
  }

  export type django_migrationsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    app?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    applied?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type django_migrationsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    app?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    applied?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type django_migrationsCreateManyInput = {
    id?: bigint | number
    app: string
    name: string
    applied: Date | string
  }

  export type django_migrationsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    app?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    applied?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type django_migrationsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    app?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    applied?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type django_sessionCreateInput = {
    session_key: string
    session_data: string
    expire_date: Date | string
  }

  export type django_sessionUncheckedCreateInput = {
    session_key: string
    session_data: string
    expire_date: Date | string
  }

  export type django_sessionUpdateInput = {
    session_key?: StringFieldUpdateOperationsInput | string
    session_data?: StringFieldUpdateOperationsInput | string
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type django_sessionUncheckedUpdateInput = {
    session_key?: StringFieldUpdateOperationsInput | string
    session_data?: StringFieldUpdateOperationsInput | string
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type django_sessionCreateManyInput = {
    session_key: string
    session_data: string
    expire_date: Date | string
  }

  export type django_sessionUpdateManyMutationInput = {
    session_key?: StringFieldUpdateOperationsInput | string
    session_data?: StringFieldUpdateOperationsInput | string
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type django_sessionUncheckedUpdateManyInput = {
    session_key?: StringFieldUpdateOperationsInput | string
    session_data?: StringFieldUpdateOperationsInput | string
    expire_date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type post_app_post_imagesCreateInput = {
    id?: bigint | number
    post_app_image: ImageCreateNestedOneWithoutPost_app_post_imagesInput
    post_app_post: PostCreateNestedOneWithoutPost_app_post_imagesInput
  }

  export type post_app_post_imagesUncheckedCreateInput = {
    id?: bigint | number
    post_id: bigint | number
    image_id: bigint | number
  }

  export type post_app_post_imagesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_app_image?: ImageUpdateOneRequiredWithoutPost_app_post_imagesNestedInput
    post_app_post?: PostUpdateOneRequiredWithoutPost_app_post_imagesNestedInput
  }

  export type post_app_post_imagesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    image_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_imagesCreateManyInput = {
    id?: bigint | number
    post_id: bigint | number
    image_id: bigint | number
  }

  export type post_app_post_imagesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_imagesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    image_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_tagsCreateInput = {
    id?: bigint | number
    post_app_post: PostCreateNestedOneWithoutPost_app_post_tagsInput
    post_app_tag: TagsCreateNestedOneWithoutPost_app_post_tagsInput
  }

  export type post_app_post_tagsUncheckedCreateInput = {
    id?: bigint | number
    post_id: bigint | number
    tag_id: bigint | number
  }

  export type post_app_post_tagsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_app_post?: PostUpdateOneRequiredWithoutPost_app_post_tagsNestedInput
    post_app_tag?: TagsUpdateOneRequiredWithoutPost_app_post_tagsNestedInput
  }

  export type post_app_post_tagsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    tag_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_tagsCreateManyInput = {
    id?: bigint | number
    post_id: bigint | number
    tag_id: bigint | number
  }

  export type post_app_post_tagsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_tagsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    tag_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type user_app_verificationcodeCreateInput = {
    id?: bigint | number
    username: string
    code: string
    created_at: Date | string
  }

  export type user_app_verificationcodeUncheckedCreateInput = {
    id?: bigint | number
    username: string
    code: string
    created_at: Date | string
  }

  export type user_app_verificationcodeUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_app_verificationcodeUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_app_verificationcodeCreateManyInput = {
    id?: bigint | number
    username: string
    code: string
    created_at: Date | string
  }

  export type user_app_verificationcodeUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_app_verificationcodeUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    username?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AlbumCreateInput = {
    id?: bigint | number
    name: string
    created_at: Date | string
    preview_image?: string | null
    shown: boolean
    author: ProfileCreateNestedOneWithoutAlbumInput
    post_app_tag: TagsCreateNestedOneWithoutPost_app_albumInput
    images?: post_app_album_imagesCreateNestedManyWithoutAlbumInput
  }

  export type AlbumUncheckedCreateInput = {
    id?: bigint | number
    name: string
    created_at: Date | string
    preview_image?: string | null
    shown: boolean
    topic_id: bigint | number
    author_id: bigint | number
    images?: post_app_album_imagesUncheckedCreateNestedManyWithoutAlbumInput
  }

  export type AlbumUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    preview_image?: NullableStringFieldUpdateOperationsInput | string | null
    shown?: BoolFieldUpdateOperationsInput | boolean
    author?: ProfileUpdateOneRequiredWithoutAlbumNestedInput
    post_app_tag?: TagsUpdateOneRequiredWithoutPost_app_albumNestedInput
    images?: post_app_album_imagesUpdateManyWithoutAlbumNestedInput
  }

  export type AlbumUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    preview_image?: NullableStringFieldUpdateOperationsInput | string | null
    shown?: BoolFieldUpdateOperationsInput | boolean
    topic_id?: BigIntFieldUpdateOperationsInput | bigint | number
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
    images?: post_app_album_imagesUncheckedUpdateManyWithoutAlbumNestedInput
  }

  export type AlbumCreateManyInput = {
    id?: bigint | number
    name: string
    created_at: Date | string
    preview_image?: string | null
    shown: boolean
    topic_id: bigint | number
    author_id: bigint | number
  }

  export type AlbumUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    preview_image?: NullableStringFieldUpdateOperationsInput | string | null
    shown?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AlbumUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    preview_image?: NullableStringFieldUpdateOperationsInput | string | null
    shown?: BoolFieldUpdateOperationsInput | boolean
    topic_id?: BigIntFieldUpdateOperationsInput | bigint | number
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_album_imagesCreateInput = {
    id?: bigint | number
    album: AlbumCreateNestedOneWithoutImagesInput
    image: ImageCreateNestedOneWithoutAlbum_imagesInput
  }

  export type post_app_album_imagesUncheckedCreateInput = {
    id?: bigint | number
    album_id: bigint | number
    image_id: bigint | number
  }

  export type post_app_album_imagesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    album?: AlbumUpdateOneRequiredWithoutImagesNestedInput
    image?: ImageUpdateOneRequiredWithoutAlbum_imagesNestedInput
  }

  export type post_app_album_imagesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    album_id?: BigIntFieldUpdateOperationsInput | bigint | number
    image_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_album_imagesCreateManyInput = {
    id?: bigint | number
    album_id: bigint | number
    image_id: bigint | number
  }

  export type post_app_album_imagesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_album_imagesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    album_id?: BigIntFieldUpdateOperationsInput | bigint | number
    image_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type ChatGroupCreateInput = {
    id?: bigint | number
    name: string
    is_personal_chat: boolean
    avatar?: string | null
    admin: ProfileCreateNestedOneWithoutAdministered_groupsInput
    chat_app_chatgroup_members?: chat_app_chatgroup_membersCreateNestedManyWithoutChat_app_chatgroupInput
    chat_app_chatmessage?: ChatMessageCreateNestedManyWithoutChat_app_chatgroupInput
  }

  export type ChatGroupUncheckedCreateInput = {
    id?: bigint | number
    name: string
    is_personal_chat: boolean
    admin_id: bigint | number
    avatar?: string | null
    chat_app_chatgroup_members?: chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutChat_app_chatgroupInput
    chat_app_chatmessage?: ChatMessageUncheckedCreateNestedManyWithoutChat_app_chatgroupInput
  }

  export type ChatGroupUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    is_personal_chat?: BoolFieldUpdateOperationsInput | boolean
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: ProfileUpdateOneRequiredWithoutAdministered_groupsNestedInput
    chat_app_chatgroup_members?: chat_app_chatgroup_membersUpdateManyWithoutChat_app_chatgroupNestedInput
    chat_app_chatmessage?: ChatMessageUpdateManyWithoutChat_app_chatgroupNestedInput
  }

  export type ChatGroupUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    is_personal_chat?: BoolFieldUpdateOperationsInput | boolean
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    chat_app_chatgroup_members?: chat_app_chatgroup_membersUncheckedUpdateManyWithoutChat_app_chatgroupNestedInput
    chat_app_chatmessage?: ChatMessageUncheckedUpdateManyWithoutChat_app_chatgroupNestedInput
  }

  export type ChatGroupCreateManyInput = {
    id?: bigint | number
    name: string
    is_personal_chat: boolean
    admin_id: bigint | number
    avatar?: string | null
  }

  export type ChatGroupUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    is_personal_chat?: BoolFieldUpdateOperationsInput | boolean
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChatGroupUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    is_personal_chat?: BoolFieldUpdateOperationsInput | boolean
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChatMessageCreateInput = {
    id?: bigint | number
    content: string
    sent_at: Date | string
    attached_image?: string | null
    author: ProfileCreateNestedOneWithoutChat_messagesInput
    chat_app_chatgroup: ChatGroupCreateNestedOneWithoutChat_app_chatmessageInput
  }

  export type ChatMessageUncheckedCreateInput = {
    id?: bigint | number
    content: string
    sent_at: Date | string
    author_id: bigint | number
    chat_group_id: bigint | number
    attached_image?: string | null
  }

  export type ChatMessageUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: StringFieldUpdateOperationsInput | string
    sent_at?: DateTimeFieldUpdateOperationsInput | Date | string
    attached_image?: NullableStringFieldUpdateOperationsInput | string | null
    author?: ProfileUpdateOneRequiredWithoutChat_messagesNestedInput
    chat_app_chatgroup?: ChatGroupUpdateOneRequiredWithoutChat_app_chatmessageNestedInput
  }

  export type ChatMessageUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: StringFieldUpdateOperationsInput | string
    sent_at?: DateTimeFieldUpdateOperationsInput | Date | string
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
    chat_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    attached_image?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChatMessageCreateManyInput = {
    id?: bigint | number
    content: string
    sent_at: Date | string
    author_id: bigint | number
    chat_group_id: bigint | number
    attached_image?: string | null
  }

  export type ChatMessageUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: StringFieldUpdateOperationsInput | string
    sent_at?: DateTimeFieldUpdateOperationsInput | Date | string
    attached_image?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChatMessageUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: StringFieldUpdateOperationsInput | string
    sent_at?: DateTimeFieldUpdateOperationsInput | Date | string
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
    chat_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    attached_image?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type chat_app_chatgroup_membersCreateInput = {
    id?: bigint | number
    chat_app_chatgroup: ChatGroupCreateNestedOneWithoutChat_app_chatgroup_membersInput
    profile: ProfileCreateNestedOneWithoutChat_group_membersInput
  }

  export type chat_app_chatgroup_membersUncheckedCreateInput = {
    id?: bigint | number
    chatgroup_id: bigint | number
    profile_id: bigint | number
  }

  export type chat_app_chatgroup_membersUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    chat_app_chatgroup?: ChatGroupUpdateOneRequiredWithoutChat_app_chatgroup_membersNestedInput
    profile?: ProfileUpdateOneRequiredWithoutChat_group_membersNestedInput
  }

  export type chat_app_chatgroup_membersUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    chatgroup_id?: BigIntFieldUpdateOperationsInput | bigint | number
    profile_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type chat_app_chatgroup_membersCreateManyInput = {
    id?: bigint | number
    chatgroup_id: bigint | number
    profile_id: bigint | number
  }

  export type chat_app_chatgroup_membersUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type chat_app_chatgroup_membersUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    chatgroup_id?: BigIntFieldUpdateOperationsInput | bigint | number
    profile_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type FriendshipCreateInput = {
    id?: bigint | number
    accepted: boolean
    profile1: ProfileCreateNestedOneWithoutFriendship_fromInput
    profile2: ProfileCreateNestedOneWithoutFriendship_toInput
  }

  export type FriendshipUncheckedCreateInput = {
    id?: bigint | number
    accepted: boolean
    profile1_id: bigint | number
    profile2_id: bigint | number
  }

  export type FriendshipUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    accepted?: BoolFieldUpdateOperationsInput | boolean
    profile1?: ProfileUpdateOneRequiredWithoutFriendship_fromNestedInput
    profile2?: ProfileUpdateOneRequiredWithoutFriendship_toNestedInput
  }

  export type FriendshipUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    accepted?: BoolFieldUpdateOperationsInput | boolean
    profile1_id?: BigIntFieldUpdateOperationsInput | bigint | number
    profile2_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type FriendshipCreateManyInput = {
    id?: bigint | number
    accepted: boolean
    profile1_id: bigint | number
    profile2_id: bigint | number
  }

  export type FriendshipUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    accepted?: BoolFieldUpdateOperationsInput | boolean
  }

  export type FriendshipUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    accepted?: BoolFieldUpdateOperationsInput | boolean
    profile1_id?: BigIntFieldUpdateOperationsInput | bigint | number
    profile2_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type ImageCreateInput = {
    id?: bigint | number
    filename: string
    file: string
    uploaded_at: Date | string
    album_images?: post_app_album_imagesCreateNestedManyWithoutImageInput
    post_app_post_images?: post_app_post_imagesCreateNestedManyWithoutPost_app_imageInput
  }

  export type ImageUncheckedCreateInput = {
    id?: bigint | number
    filename: string
    file: string
    uploaded_at: Date | string
    album_images?: post_app_album_imagesUncheckedCreateNestedManyWithoutImageInput
    post_app_post_images?: post_app_post_imagesUncheckedCreateNestedManyWithoutPost_app_imageInput
  }

  export type ImageUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    filename?: StringFieldUpdateOperationsInput | string
    file?: StringFieldUpdateOperationsInput | string
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
    album_images?: post_app_album_imagesUpdateManyWithoutImageNestedInput
    post_app_post_images?: post_app_post_imagesUpdateManyWithoutPost_app_imageNestedInput
  }

  export type ImageUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    filename?: StringFieldUpdateOperationsInput | string
    file?: StringFieldUpdateOperationsInput | string
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
    album_images?: post_app_album_imagesUncheckedUpdateManyWithoutImageNestedInput
    post_app_post_images?: post_app_post_imagesUncheckedUpdateManyWithoutPost_app_imageNestedInput
  }

  export type ImageCreateManyInput = {
    id?: bigint | number
    filename: string
    file: string
    uploaded_at: Date | string
  }

  export type ImageUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    filename?: StringFieldUpdateOperationsInput | string
    file?: StringFieldUpdateOperationsInput | string
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ImageUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    filename?: StringFieldUpdateOperationsInput | string
    file?: StringFieldUpdateOperationsInput | string
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PostCreateInput = {
    id?: bigint | number
    title: string
    content: string
    topic: string
    post_app_link?: LinkCreateNestedManyWithoutPost_app_postInput
    author: ProfileCreateNestedOneWithoutPostInput
    post_app_post_images?: post_app_post_imagesCreateNestedManyWithoutPost_app_postInput
    likes?: post_app_post_likesCreateNestedManyWithoutPostInput
    post_app_post_tags?: post_app_post_tagsCreateNestedManyWithoutPost_app_postInput
    views?: post_app_post_viewsCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateInput = {
    id?: bigint | number
    title: string
    content: string
    author_id: bigint | number
    topic: string
    post_app_link?: LinkUncheckedCreateNestedManyWithoutPost_app_postInput
    post_app_post_images?: post_app_post_imagesUncheckedCreateNestedManyWithoutPost_app_postInput
    likes?: post_app_post_likesUncheckedCreateNestedManyWithoutPostInput
    post_app_post_tags?: post_app_post_tagsUncheckedCreateNestedManyWithoutPost_app_postInput
    views?: post_app_post_viewsUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    post_app_link?: LinkUpdateManyWithoutPost_app_postNestedInput
    author?: ProfileUpdateOneRequiredWithoutPostNestedInput
    post_app_post_images?: post_app_post_imagesUpdateManyWithoutPost_app_postNestedInput
    likes?: post_app_post_likesUpdateManyWithoutPostNestedInput
    post_app_post_tags?: post_app_post_tagsUpdateManyWithoutPost_app_postNestedInput
    views?: post_app_post_viewsUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
    topic?: StringFieldUpdateOperationsInput | string
    post_app_link?: LinkUncheckedUpdateManyWithoutPost_app_postNestedInput
    post_app_post_images?: post_app_post_imagesUncheckedUpdateManyWithoutPost_app_postNestedInput
    likes?: post_app_post_likesUncheckedUpdateManyWithoutPostNestedInput
    post_app_post_tags?: post_app_post_tagsUncheckedUpdateManyWithoutPost_app_postNestedInput
    views?: post_app_post_viewsUncheckedUpdateManyWithoutPostNestedInput
  }

  export type PostCreateManyInput = {
    id?: bigint | number
    title: string
    content: string
    author_id: bigint | number
    topic: string
  }

  export type PostUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
  }

  export type PostUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
    topic?: StringFieldUpdateOperationsInput | string
  }

  export type TagsCreateInput = {
    id?: bigint | number
    name: string
    post_app_album?: AlbumCreateNestedManyWithoutPost_app_tagInput
    post_app_post_tags?: post_app_post_tagsCreateNestedManyWithoutPost_app_tagInput
  }

  export type TagsUncheckedCreateInput = {
    id?: bigint | number
    name: string
    post_app_album?: AlbumUncheckedCreateNestedManyWithoutPost_app_tagInput
    post_app_post_tags?: post_app_post_tagsUncheckedCreateNestedManyWithoutPost_app_tagInput
  }

  export type TagsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    post_app_album?: AlbumUpdateManyWithoutPost_app_tagNestedInput
    post_app_post_tags?: post_app_post_tagsUpdateManyWithoutPost_app_tagNestedInput
  }

  export type TagsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    post_app_album?: AlbumUncheckedUpdateManyWithoutPost_app_tagNestedInput
    post_app_post_tags?: post_app_post_tagsUncheckedUpdateManyWithoutPost_app_tagNestedInput
  }

  export type TagsCreateManyInput = {
    id?: bigint | number
    name: string
  }

  export type TagsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type TagsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type LinkCreateInput = {
    id?: bigint | number
    url: string
    post_app_post: PostCreateNestedOneWithoutPost_app_linkInput
  }

  export type LinkUncheckedCreateInput = {
    id?: bigint | number
    url: string
    post_id: bigint | number
  }

  export type LinkUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    post_app_post?: PostUpdateOneRequiredWithoutPost_app_linkNestedInput
  }

  export type LinkUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type LinkCreateManyInput = {
    id?: bigint | number
    url: string
    post_id: bigint | number
  }

  export type LinkUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
  }

  export type LinkUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_likesCreateInput = {
    id?: bigint | number
    post: PostCreateNestedOneWithoutLikesInput
    user_app_profile: ProfileCreateNestedOneWithoutPost_app_post_likesInput
  }

  export type post_app_post_likesUncheckedCreateInput = {
    id?: bigint | number
    post_id: bigint | number
    profile_id: bigint | number
  }

  export type post_app_post_likesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post?: PostUpdateOneRequiredWithoutLikesNestedInput
    user_app_profile?: ProfileUpdateOneRequiredWithoutPost_app_post_likesNestedInput
  }

  export type post_app_post_likesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    profile_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_likesCreateManyInput = {
    id?: bigint | number
    post_id: bigint | number
    profile_id: bigint | number
  }

  export type post_app_post_likesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_likesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    profile_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_viewsCreateInput = {
    id?: bigint | number
    post: PostCreateNestedOneWithoutViewsInput
    user_app_profile: ProfileCreateNestedOneWithoutPost_app_post_viewsInput
  }

  export type post_app_post_viewsUncheckedCreateInput = {
    id?: bigint | number
    post_id: bigint | number
    profile_id: bigint | number
  }

  export type post_app_post_viewsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post?: PostUpdateOneRequiredWithoutViewsNestedInput
    user_app_profile?: ProfileUpdateOneRequiredWithoutPost_app_post_viewsNestedInput
  }

  export type post_app_post_viewsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    profile_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_viewsCreateManyInput = {
    id?: bigint | number
    post_id: bigint | number
    profile_id: bigint | number
  }

  export type post_app_post_viewsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_viewsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    profile_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type ProfileCreateInput = {
    id?: bigint | number
    date_of_birth: Date | string
    signature?: string | null
    administered_groups?: ChatGroupCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageCreateNestedManyWithoutAuthorInput
    album?: AlbumCreateNestedManyWithoutAuthorInput
    post?: PostCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipCreateNestedManyWithoutProfile2Input
    auth_user: auth_userCreateNestedOneWithoutUser_app_profileInput
  }

  export type ProfileUncheckedCreateInput = {
    id?: bigint | number
    date_of_birth: Date | string
    user_id: number
    signature?: string | null
    administered_groups?: ChatGroupUncheckedCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageUncheckedCreateNestedManyWithoutAuthorInput
    album?: AlbumUncheckedCreateNestedManyWithoutAuthorInput
    post?: PostUncheckedCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesUncheckedCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsUncheckedCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarUncheckedCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipUncheckedCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipUncheckedCreateNestedManyWithoutProfile2Input
  }

  export type ProfileUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUpdateManyWithoutAuthorNestedInput
    album?: AlbumUpdateManyWithoutAuthorNestedInput
    post?: PostUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUpdateManyWithoutProfile2NestedInput
    auth_user?: auth_userUpdateOneRequiredWithoutUser_app_profileNestedInput
  }

  export type ProfileUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUncheckedUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUncheckedUpdateManyWithoutAuthorNestedInput
    album?: AlbumUncheckedUpdateManyWithoutAuthorNestedInput
    post?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUncheckedUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUncheckedUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUncheckedUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUncheckedUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUncheckedUpdateManyWithoutProfile2NestedInput
  }

  export type ProfileCreateManyInput = {
    id?: bigint | number
    date_of_birth: Date | string
    user_id: number
    signature?: string | null
  }

  export type ProfileUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProfileUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
    signature?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AvatarCreateInput = {
    id?: bigint | number
    image: string
    active: boolean
    shown: boolean
    profile: ProfileCreateNestedOneWithoutAvatarInput
  }

  export type AvatarUncheckedCreateInput = {
    id?: bigint | number
    image: string
    active: boolean
    shown: boolean
    profile_id: bigint | number
  }

  export type AvatarUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    image?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    shown?: BoolFieldUpdateOperationsInput | boolean
    profile?: ProfileUpdateOneRequiredWithoutAvatarNestedInput
  }

  export type AvatarUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    image?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    shown?: BoolFieldUpdateOperationsInput | boolean
    profile_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type AvatarCreateManyInput = {
    id?: bigint | number
    image: string
    active: boolean
    shown: boolean
    profile_id: bigint | number
  }

  export type AvatarUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    image?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    shown?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AvatarUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    image?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    shown?: BoolFieldUpdateOperationsInput | boolean
    profile_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type Auth_group_permissionsListRelationFilter = {
    every?: auth_group_permissionsWhereInput
    some?: auth_group_permissionsWhereInput
    none?: auth_group_permissionsWhereInput
  }

  export type Auth_user_groupsListRelationFilter = {
    every?: auth_user_groupsWhereInput
    some?: auth_user_groupsWhereInput
    none?: auth_user_groupsWhereInput
  }

  export type auth_group_permissionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type auth_user_groupsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type auth_groupOrderByRelevanceInput = {
    fields: auth_groupOrderByRelevanceFieldEnum | auth_groupOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type auth_groupCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type auth_groupAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type auth_groupMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type auth_groupMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type auth_groupSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type Auth_permissionScalarRelationFilter = {
    is?: auth_permissionWhereInput
    isNot?: auth_permissionWhereInput
  }

  export type Auth_groupScalarRelationFilter = {
    is?: auth_groupWhereInput
    isNot?: auth_groupWhereInput
  }

  export type auth_group_permissionsGroup_idPermission_idCompoundUniqueInput = {
    group_id: number
    permission_id: number
  }

  export type auth_group_permissionsCountOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    permission_id?: SortOrder
  }

  export type auth_group_permissionsAvgOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    permission_id?: SortOrder
  }

  export type auth_group_permissionsMaxOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    permission_id?: SortOrder
  }

  export type auth_group_permissionsMinOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    permission_id?: SortOrder
  }

  export type auth_group_permissionsSumOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    permission_id?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type Django_content_typeScalarRelationFilter = {
    is?: django_content_typeWhereInput
    isNot?: django_content_typeWhereInput
  }

  export type Auth_user_user_permissionsListRelationFilter = {
    every?: auth_user_user_permissionsWhereInput
    some?: auth_user_user_permissionsWhereInput
    none?: auth_user_user_permissionsWhereInput
  }

  export type auth_user_user_permissionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type auth_permissionOrderByRelevanceInput = {
    fields: auth_permissionOrderByRelevanceFieldEnum | auth_permissionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type auth_permissionContent_type_idCodenameCompoundUniqueInput = {
    content_type_id: number
    codename: string
  }

  export type auth_permissionCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    content_type_id?: SortOrder
    codename?: SortOrder
  }

  export type auth_permissionAvgOrderByAggregateInput = {
    id?: SortOrder
    content_type_id?: SortOrder
  }

  export type auth_permissionMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    content_type_id?: SortOrder
    codename?: SortOrder
  }

  export type auth_permissionMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    content_type_id?: SortOrder
    codename?: SortOrder
  }

  export type auth_permissionSumOrderByAggregateInput = {
    id?: SortOrder
    content_type_id?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type Django_admin_logListRelationFilter = {
    every?: django_admin_logWhereInput
    some?: django_admin_logWhereInput
    none?: django_admin_logWhereInput
  }

  export type ProfileNullableScalarRelationFilter = {
    is?: ProfileWhereInput | null
    isNot?: ProfileWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type django_admin_logOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type auth_userOrderByRelevanceInput = {
    fields: auth_userOrderByRelevanceFieldEnum | auth_userOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type auth_userCountOrderByAggregateInput = {
    id?: SortOrder
    password?: SortOrder
    last_login?: SortOrder
    is_superuser?: SortOrder
    username?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    is_staff?: SortOrder
    is_active?: SortOrder
    date_joined?: SortOrder
  }

  export type auth_userAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type auth_userMaxOrderByAggregateInput = {
    id?: SortOrder
    password?: SortOrder
    last_login?: SortOrder
    is_superuser?: SortOrder
    username?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    is_staff?: SortOrder
    is_active?: SortOrder
    date_joined?: SortOrder
  }

  export type auth_userMinOrderByAggregateInput = {
    id?: SortOrder
    password?: SortOrder
    last_login?: SortOrder
    is_superuser?: SortOrder
    username?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    is_staff?: SortOrder
    is_active?: SortOrder
    date_joined?: SortOrder
  }

  export type auth_userSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Auth_userScalarRelationFilter = {
    is?: auth_userWhereInput
    isNot?: auth_userWhereInput
  }

  export type auth_user_groupsUser_idGroup_idCompoundUniqueInput = {
    user_id: number
    group_id: number
  }

  export type auth_user_groupsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
  }

  export type auth_user_groupsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
  }

  export type auth_user_groupsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
  }

  export type auth_user_groupsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
  }

  export type auth_user_groupsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
  }

  export type auth_user_user_permissionsUser_idPermission_idCompoundUniqueInput = {
    user_id: number
    permission_id: number
  }

  export type auth_user_user_permissionsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    permission_id?: SortOrder
  }

  export type auth_user_user_permissionsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    permission_id?: SortOrder
  }

  export type auth_user_user_permissionsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    permission_id?: SortOrder
  }

  export type auth_user_user_permissionsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    permission_id?: SortOrder
  }

  export type auth_user_user_permissionsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    permission_id?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type Django_content_typeNullableScalarRelationFilter = {
    is?: django_content_typeWhereInput | null
    isNot?: django_content_typeWhereInput | null
  }

  export type django_admin_logOrderByRelevanceInput = {
    fields: django_admin_logOrderByRelevanceFieldEnum | django_admin_logOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type django_admin_logCountOrderByAggregateInput = {
    id?: SortOrder
    action_time?: SortOrder
    object_id?: SortOrder
    object_repr?: SortOrder
    action_flag?: SortOrder
    change_message?: SortOrder
    content_type_id?: SortOrder
    user_id?: SortOrder
  }

  export type django_admin_logAvgOrderByAggregateInput = {
    id?: SortOrder
    action_flag?: SortOrder
    content_type_id?: SortOrder
    user_id?: SortOrder
  }

  export type django_admin_logMaxOrderByAggregateInput = {
    id?: SortOrder
    action_time?: SortOrder
    object_id?: SortOrder
    object_repr?: SortOrder
    action_flag?: SortOrder
    change_message?: SortOrder
    content_type_id?: SortOrder
    user_id?: SortOrder
  }

  export type django_admin_logMinOrderByAggregateInput = {
    id?: SortOrder
    action_time?: SortOrder
    object_id?: SortOrder
    object_repr?: SortOrder
    action_flag?: SortOrder
    change_message?: SortOrder
    content_type_id?: SortOrder
    user_id?: SortOrder
  }

  export type django_admin_logSumOrderByAggregateInput = {
    id?: SortOrder
    action_flag?: SortOrder
    content_type_id?: SortOrder
    user_id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type Auth_permissionListRelationFilter = {
    every?: auth_permissionWhereInput
    some?: auth_permissionWhereInput
    none?: auth_permissionWhereInput
  }

  export type auth_permissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type django_content_typeOrderByRelevanceInput = {
    fields: django_content_typeOrderByRelevanceFieldEnum | django_content_typeOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type django_content_typeApp_labelModelCompoundUniqueInput = {
    app_label: string
    model: string
  }

  export type django_content_typeCountOrderByAggregateInput = {
    id?: SortOrder
    app_label?: SortOrder
    model?: SortOrder
  }

  export type django_content_typeAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type django_content_typeMaxOrderByAggregateInput = {
    id?: SortOrder
    app_label?: SortOrder
    model?: SortOrder
  }

  export type django_content_typeMinOrderByAggregateInput = {
    id?: SortOrder
    app_label?: SortOrder
    model?: SortOrder
  }

  export type django_content_typeSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type django_migrationsOrderByRelevanceInput = {
    fields: django_migrationsOrderByRelevanceFieldEnum | django_migrationsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type django_migrationsCountOrderByAggregateInput = {
    id?: SortOrder
    app?: SortOrder
    name?: SortOrder
    applied?: SortOrder
  }

  export type django_migrationsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type django_migrationsMaxOrderByAggregateInput = {
    id?: SortOrder
    app?: SortOrder
    name?: SortOrder
    applied?: SortOrder
  }

  export type django_migrationsMinOrderByAggregateInput = {
    id?: SortOrder
    app?: SortOrder
    name?: SortOrder
    applied?: SortOrder
  }

  export type django_migrationsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type django_sessionOrderByRelevanceInput = {
    fields: django_sessionOrderByRelevanceFieldEnum | django_sessionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type django_sessionCountOrderByAggregateInput = {
    session_key?: SortOrder
    session_data?: SortOrder
    expire_date?: SortOrder
  }

  export type django_sessionMaxOrderByAggregateInput = {
    session_key?: SortOrder
    session_data?: SortOrder
    expire_date?: SortOrder
  }

  export type django_sessionMinOrderByAggregateInput = {
    session_key?: SortOrder
    session_data?: SortOrder
    expire_date?: SortOrder
  }

  export type ImageScalarRelationFilter = {
    is?: ImageWhereInput
    isNot?: ImageWhereInput
  }

  export type PostScalarRelationFilter = {
    is?: PostWhereInput
    isNot?: PostWhereInput
  }

  export type post_app_post_imagesPost_idImage_idCompoundUniqueInput = {
    post_id: bigint | number
    image_id: bigint | number
  }

  export type post_app_post_imagesCountOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    image_id?: SortOrder
  }

  export type post_app_post_imagesAvgOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    image_id?: SortOrder
  }

  export type post_app_post_imagesMaxOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    image_id?: SortOrder
  }

  export type post_app_post_imagesMinOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    image_id?: SortOrder
  }

  export type post_app_post_imagesSumOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    image_id?: SortOrder
  }

  export type TagsScalarRelationFilter = {
    is?: TagsWhereInput
    isNot?: TagsWhereInput
  }

  export type post_app_post_tagsPost_idTag_idCompoundUniqueInput = {
    post_id: bigint | number
    tag_id: bigint | number
  }

  export type post_app_post_tagsCountOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    tag_id?: SortOrder
  }

  export type post_app_post_tagsAvgOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    tag_id?: SortOrder
  }

  export type post_app_post_tagsMaxOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    tag_id?: SortOrder
  }

  export type post_app_post_tagsMinOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    tag_id?: SortOrder
  }

  export type post_app_post_tagsSumOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    tag_id?: SortOrder
  }

  export type user_app_verificationcodeOrderByRelevanceInput = {
    fields: user_app_verificationcodeOrderByRelevanceFieldEnum | user_app_verificationcodeOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type user_app_verificationcodeCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    code?: SortOrder
    created_at?: SortOrder
  }

  export type user_app_verificationcodeAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type user_app_verificationcodeMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    code?: SortOrder
    created_at?: SortOrder
  }

  export type user_app_verificationcodeMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    code?: SortOrder
    created_at?: SortOrder
  }

  export type user_app_verificationcodeSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ProfileScalarRelationFilter = {
    is?: ProfileWhereInput
    isNot?: ProfileWhereInput
  }

  export type Post_app_album_imagesListRelationFilter = {
    every?: post_app_album_imagesWhereInput
    some?: post_app_album_imagesWhereInput
    none?: post_app_album_imagesWhereInput
  }

  export type post_app_album_imagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AlbumOrderByRelevanceInput = {
    fields: AlbumOrderByRelevanceFieldEnum | AlbumOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AlbumCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    preview_image?: SortOrder
    shown?: SortOrder
    topic_id?: SortOrder
    author_id?: SortOrder
  }

  export type AlbumAvgOrderByAggregateInput = {
    id?: SortOrder
    topic_id?: SortOrder
    author_id?: SortOrder
  }

  export type AlbumMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    preview_image?: SortOrder
    shown?: SortOrder
    topic_id?: SortOrder
    author_id?: SortOrder
  }

  export type AlbumMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    preview_image?: SortOrder
    shown?: SortOrder
    topic_id?: SortOrder
    author_id?: SortOrder
  }

  export type AlbumSumOrderByAggregateInput = {
    id?: SortOrder
    topic_id?: SortOrder
    author_id?: SortOrder
  }

  export type AlbumScalarRelationFilter = {
    is?: AlbumWhereInput
    isNot?: AlbumWhereInput
  }

  export type post_app_album_imagesAlbum_idImage_idCompoundUniqueInput = {
    album_id: bigint | number
    image_id: bigint | number
  }

  export type post_app_album_imagesCountOrderByAggregateInput = {
    id?: SortOrder
    album_id?: SortOrder
    image_id?: SortOrder
  }

  export type post_app_album_imagesAvgOrderByAggregateInput = {
    id?: SortOrder
    album_id?: SortOrder
    image_id?: SortOrder
  }

  export type post_app_album_imagesMaxOrderByAggregateInput = {
    id?: SortOrder
    album_id?: SortOrder
    image_id?: SortOrder
  }

  export type post_app_album_imagesMinOrderByAggregateInput = {
    id?: SortOrder
    album_id?: SortOrder
    image_id?: SortOrder
  }

  export type post_app_album_imagesSumOrderByAggregateInput = {
    id?: SortOrder
    album_id?: SortOrder
    image_id?: SortOrder
  }

  export type Chat_app_chatgroup_membersListRelationFilter = {
    every?: chat_app_chatgroup_membersWhereInput
    some?: chat_app_chatgroup_membersWhereInput
    none?: chat_app_chatgroup_membersWhereInput
  }

  export type ChatMessageListRelationFilter = {
    every?: ChatMessageWhereInput
    some?: ChatMessageWhereInput
    none?: ChatMessageWhereInput
  }

  export type chat_app_chatgroup_membersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChatMessageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ChatGroupOrderByRelevanceInput = {
    fields: ChatGroupOrderByRelevanceFieldEnum | ChatGroupOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ChatGroupCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    is_personal_chat?: SortOrder
    admin_id?: SortOrder
    avatar?: SortOrder
  }

  export type ChatGroupAvgOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
  }

  export type ChatGroupMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    is_personal_chat?: SortOrder
    admin_id?: SortOrder
    avatar?: SortOrder
  }

  export type ChatGroupMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    is_personal_chat?: SortOrder
    admin_id?: SortOrder
    avatar?: SortOrder
  }

  export type ChatGroupSumOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
  }

  export type ChatGroupScalarRelationFilter = {
    is?: ChatGroupWhereInput
    isNot?: ChatGroupWhereInput
  }

  export type ChatMessageOrderByRelevanceInput = {
    fields: ChatMessageOrderByRelevanceFieldEnum | ChatMessageOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ChatMessageCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    sent_at?: SortOrder
    author_id?: SortOrder
    chat_group_id?: SortOrder
    attached_image?: SortOrder
  }

  export type ChatMessageAvgOrderByAggregateInput = {
    id?: SortOrder
    author_id?: SortOrder
    chat_group_id?: SortOrder
  }

  export type ChatMessageMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    sent_at?: SortOrder
    author_id?: SortOrder
    chat_group_id?: SortOrder
    attached_image?: SortOrder
  }

  export type ChatMessageMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    sent_at?: SortOrder
    author_id?: SortOrder
    chat_group_id?: SortOrder
    attached_image?: SortOrder
  }

  export type ChatMessageSumOrderByAggregateInput = {
    id?: SortOrder
    author_id?: SortOrder
    chat_group_id?: SortOrder
  }

  export type chat_app_chatgroup_membersChatgroup_idProfile_idCompoundUniqueInput = {
    chatgroup_id: bigint | number
    profile_id: bigint | number
  }

  export type chat_app_chatgroup_membersCountOrderByAggregateInput = {
    id?: SortOrder
    chatgroup_id?: SortOrder
    profile_id?: SortOrder
  }

  export type chat_app_chatgroup_membersAvgOrderByAggregateInput = {
    id?: SortOrder
    chatgroup_id?: SortOrder
    profile_id?: SortOrder
  }

  export type chat_app_chatgroup_membersMaxOrderByAggregateInput = {
    id?: SortOrder
    chatgroup_id?: SortOrder
    profile_id?: SortOrder
  }

  export type chat_app_chatgroup_membersMinOrderByAggregateInput = {
    id?: SortOrder
    chatgroup_id?: SortOrder
    profile_id?: SortOrder
  }

  export type chat_app_chatgroup_membersSumOrderByAggregateInput = {
    id?: SortOrder
    chatgroup_id?: SortOrder
    profile_id?: SortOrder
  }

  export type FriendshipCountOrderByAggregateInput = {
    id?: SortOrder
    accepted?: SortOrder
    profile1_id?: SortOrder
    profile2_id?: SortOrder
  }

  export type FriendshipAvgOrderByAggregateInput = {
    id?: SortOrder
    profile1_id?: SortOrder
    profile2_id?: SortOrder
  }

  export type FriendshipMaxOrderByAggregateInput = {
    id?: SortOrder
    accepted?: SortOrder
    profile1_id?: SortOrder
    profile2_id?: SortOrder
  }

  export type FriendshipMinOrderByAggregateInput = {
    id?: SortOrder
    accepted?: SortOrder
    profile1_id?: SortOrder
    profile2_id?: SortOrder
  }

  export type FriendshipSumOrderByAggregateInput = {
    id?: SortOrder
    profile1_id?: SortOrder
    profile2_id?: SortOrder
  }

  export type Post_app_post_imagesListRelationFilter = {
    every?: post_app_post_imagesWhereInput
    some?: post_app_post_imagesWhereInput
    none?: post_app_post_imagesWhereInput
  }

  export type post_app_post_imagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ImageOrderByRelevanceInput = {
    fields: ImageOrderByRelevanceFieldEnum | ImageOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ImageCountOrderByAggregateInput = {
    id?: SortOrder
    filename?: SortOrder
    file?: SortOrder
    uploaded_at?: SortOrder
  }

  export type ImageAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ImageMaxOrderByAggregateInput = {
    id?: SortOrder
    filename?: SortOrder
    file?: SortOrder
    uploaded_at?: SortOrder
  }

  export type ImageMinOrderByAggregateInput = {
    id?: SortOrder
    filename?: SortOrder
    file?: SortOrder
    uploaded_at?: SortOrder
  }

  export type ImageSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type LinkListRelationFilter = {
    every?: LinkWhereInput
    some?: LinkWhereInput
    none?: LinkWhereInput
  }

  export type Post_app_post_likesListRelationFilter = {
    every?: post_app_post_likesWhereInput
    some?: post_app_post_likesWhereInput
    none?: post_app_post_likesWhereInput
  }

  export type Post_app_post_tagsListRelationFilter = {
    every?: post_app_post_tagsWhereInput
    some?: post_app_post_tagsWhereInput
    none?: post_app_post_tagsWhereInput
  }

  export type Post_app_post_viewsListRelationFilter = {
    every?: post_app_post_viewsWhereInput
    some?: post_app_post_viewsWhereInput
    none?: post_app_post_viewsWhereInput
  }

  export type LinkOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type post_app_post_likesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type post_app_post_tagsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type post_app_post_viewsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PostOrderByRelevanceInput = {
    fields: PostOrderByRelevanceFieldEnum | PostOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type PostCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    author_id?: SortOrder
    topic?: SortOrder
  }

  export type PostAvgOrderByAggregateInput = {
    id?: SortOrder
    author_id?: SortOrder
  }

  export type PostMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    author_id?: SortOrder
    topic?: SortOrder
  }

  export type PostMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    author_id?: SortOrder
    topic?: SortOrder
  }

  export type PostSumOrderByAggregateInput = {
    id?: SortOrder
    author_id?: SortOrder
  }

  export type AlbumListRelationFilter = {
    every?: AlbumWhereInput
    some?: AlbumWhereInput
    none?: AlbumWhereInput
  }

  export type AlbumOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TagsOrderByRelevanceInput = {
    fields: TagsOrderByRelevanceFieldEnum | TagsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TagsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type TagsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TagsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type TagsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type TagsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type LinkOrderByRelevanceInput = {
    fields: LinkOrderByRelevanceFieldEnum | LinkOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type LinkCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    post_id?: SortOrder
  }

  export type LinkAvgOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
  }

  export type LinkMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    post_id?: SortOrder
  }

  export type LinkMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    post_id?: SortOrder
  }

  export type LinkSumOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
  }

  export type post_app_post_likesPost_idProfile_idCompoundUniqueInput = {
    post_id: bigint | number
    profile_id: bigint | number
  }

  export type post_app_post_likesCountOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    profile_id?: SortOrder
  }

  export type post_app_post_likesAvgOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    profile_id?: SortOrder
  }

  export type post_app_post_likesMaxOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    profile_id?: SortOrder
  }

  export type post_app_post_likesMinOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    profile_id?: SortOrder
  }

  export type post_app_post_likesSumOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    profile_id?: SortOrder
  }

  export type post_app_post_viewsPost_idProfile_idCompoundUniqueInput = {
    post_id: bigint | number
    profile_id: bigint | number
  }

  export type post_app_post_viewsCountOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    profile_id?: SortOrder
  }

  export type post_app_post_viewsAvgOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    profile_id?: SortOrder
  }

  export type post_app_post_viewsMaxOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    profile_id?: SortOrder
  }

  export type post_app_post_viewsMinOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    profile_id?: SortOrder
  }

  export type post_app_post_viewsSumOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    profile_id?: SortOrder
  }

  export type ChatGroupListRelationFilter = {
    every?: ChatGroupWhereInput
    some?: ChatGroupWhereInput
    none?: ChatGroupWhereInput
  }

  export type PostListRelationFilter = {
    every?: PostWhereInput
    some?: PostWhereInput
    none?: PostWhereInput
  }

  export type AvatarListRelationFilter = {
    every?: AvatarWhereInput
    some?: AvatarWhereInput
    none?: AvatarWhereInput
  }

  export type FriendshipListRelationFilter = {
    every?: FriendshipWhereInput
    some?: FriendshipWhereInput
    none?: FriendshipWhereInput
  }

  export type ChatGroupOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PostOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AvatarOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FriendshipOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProfileOrderByRelevanceInput = {
    fields: ProfileOrderByRelevanceFieldEnum | ProfileOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ProfileCountOrderByAggregateInput = {
    id?: SortOrder
    date_of_birth?: SortOrder
    user_id?: SortOrder
    signature?: SortOrder
  }

  export type ProfileAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type ProfileMaxOrderByAggregateInput = {
    id?: SortOrder
    date_of_birth?: SortOrder
    user_id?: SortOrder
    signature?: SortOrder
  }

  export type ProfileMinOrderByAggregateInput = {
    id?: SortOrder
    date_of_birth?: SortOrder
    user_id?: SortOrder
    signature?: SortOrder
  }

  export type ProfileSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type AvatarOrderByRelevanceInput = {
    fields: AvatarOrderByRelevanceFieldEnum | AvatarOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type AvatarCountOrderByAggregateInput = {
    id?: SortOrder
    image?: SortOrder
    active?: SortOrder
    shown?: SortOrder
    profile_id?: SortOrder
  }

  export type AvatarAvgOrderByAggregateInput = {
    id?: SortOrder
    profile_id?: SortOrder
  }

  export type AvatarMaxOrderByAggregateInput = {
    id?: SortOrder
    image?: SortOrder
    active?: SortOrder
    shown?: SortOrder
    profile_id?: SortOrder
  }

  export type AvatarMinOrderByAggregateInput = {
    id?: SortOrder
    image?: SortOrder
    active?: SortOrder
    shown?: SortOrder
    profile_id?: SortOrder
  }

  export type AvatarSumOrderByAggregateInput = {
    id?: SortOrder
    profile_id?: SortOrder
  }

  export type auth_group_permissionsCreateNestedManyWithoutAuth_groupInput = {
    create?: XOR<auth_group_permissionsCreateWithoutAuth_groupInput, auth_group_permissionsUncheckedCreateWithoutAuth_groupInput> | auth_group_permissionsCreateWithoutAuth_groupInput[] | auth_group_permissionsUncheckedCreateWithoutAuth_groupInput[]
    connectOrCreate?: auth_group_permissionsCreateOrConnectWithoutAuth_groupInput | auth_group_permissionsCreateOrConnectWithoutAuth_groupInput[]
    createMany?: auth_group_permissionsCreateManyAuth_groupInputEnvelope
    connect?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
  }

  export type auth_user_groupsCreateNestedManyWithoutAuth_groupInput = {
    create?: XOR<auth_user_groupsCreateWithoutAuth_groupInput, auth_user_groupsUncheckedCreateWithoutAuth_groupInput> | auth_user_groupsCreateWithoutAuth_groupInput[] | auth_user_groupsUncheckedCreateWithoutAuth_groupInput[]
    connectOrCreate?: auth_user_groupsCreateOrConnectWithoutAuth_groupInput | auth_user_groupsCreateOrConnectWithoutAuth_groupInput[]
    createMany?: auth_user_groupsCreateManyAuth_groupInputEnvelope
    connect?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
  }

  export type auth_group_permissionsUncheckedCreateNestedManyWithoutAuth_groupInput = {
    create?: XOR<auth_group_permissionsCreateWithoutAuth_groupInput, auth_group_permissionsUncheckedCreateWithoutAuth_groupInput> | auth_group_permissionsCreateWithoutAuth_groupInput[] | auth_group_permissionsUncheckedCreateWithoutAuth_groupInput[]
    connectOrCreate?: auth_group_permissionsCreateOrConnectWithoutAuth_groupInput | auth_group_permissionsCreateOrConnectWithoutAuth_groupInput[]
    createMany?: auth_group_permissionsCreateManyAuth_groupInputEnvelope
    connect?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
  }

  export type auth_user_groupsUncheckedCreateNestedManyWithoutAuth_groupInput = {
    create?: XOR<auth_user_groupsCreateWithoutAuth_groupInput, auth_user_groupsUncheckedCreateWithoutAuth_groupInput> | auth_user_groupsCreateWithoutAuth_groupInput[] | auth_user_groupsUncheckedCreateWithoutAuth_groupInput[]
    connectOrCreate?: auth_user_groupsCreateOrConnectWithoutAuth_groupInput | auth_user_groupsCreateOrConnectWithoutAuth_groupInput[]
    createMany?: auth_user_groupsCreateManyAuth_groupInputEnvelope
    connect?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type auth_group_permissionsUpdateManyWithoutAuth_groupNestedInput = {
    create?: XOR<auth_group_permissionsCreateWithoutAuth_groupInput, auth_group_permissionsUncheckedCreateWithoutAuth_groupInput> | auth_group_permissionsCreateWithoutAuth_groupInput[] | auth_group_permissionsUncheckedCreateWithoutAuth_groupInput[]
    connectOrCreate?: auth_group_permissionsCreateOrConnectWithoutAuth_groupInput | auth_group_permissionsCreateOrConnectWithoutAuth_groupInput[]
    upsert?: auth_group_permissionsUpsertWithWhereUniqueWithoutAuth_groupInput | auth_group_permissionsUpsertWithWhereUniqueWithoutAuth_groupInput[]
    createMany?: auth_group_permissionsCreateManyAuth_groupInputEnvelope
    set?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    disconnect?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    delete?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    connect?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    update?: auth_group_permissionsUpdateWithWhereUniqueWithoutAuth_groupInput | auth_group_permissionsUpdateWithWhereUniqueWithoutAuth_groupInput[]
    updateMany?: auth_group_permissionsUpdateManyWithWhereWithoutAuth_groupInput | auth_group_permissionsUpdateManyWithWhereWithoutAuth_groupInput[]
    deleteMany?: auth_group_permissionsScalarWhereInput | auth_group_permissionsScalarWhereInput[]
  }

  export type auth_user_groupsUpdateManyWithoutAuth_groupNestedInput = {
    create?: XOR<auth_user_groupsCreateWithoutAuth_groupInput, auth_user_groupsUncheckedCreateWithoutAuth_groupInput> | auth_user_groupsCreateWithoutAuth_groupInput[] | auth_user_groupsUncheckedCreateWithoutAuth_groupInput[]
    connectOrCreate?: auth_user_groupsCreateOrConnectWithoutAuth_groupInput | auth_user_groupsCreateOrConnectWithoutAuth_groupInput[]
    upsert?: auth_user_groupsUpsertWithWhereUniqueWithoutAuth_groupInput | auth_user_groupsUpsertWithWhereUniqueWithoutAuth_groupInput[]
    createMany?: auth_user_groupsCreateManyAuth_groupInputEnvelope
    set?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    disconnect?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    delete?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    connect?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    update?: auth_user_groupsUpdateWithWhereUniqueWithoutAuth_groupInput | auth_user_groupsUpdateWithWhereUniqueWithoutAuth_groupInput[]
    updateMany?: auth_user_groupsUpdateManyWithWhereWithoutAuth_groupInput | auth_user_groupsUpdateManyWithWhereWithoutAuth_groupInput[]
    deleteMany?: auth_user_groupsScalarWhereInput | auth_user_groupsScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type auth_group_permissionsUncheckedUpdateManyWithoutAuth_groupNestedInput = {
    create?: XOR<auth_group_permissionsCreateWithoutAuth_groupInput, auth_group_permissionsUncheckedCreateWithoutAuth_groupInput> | auth_group_permissionsCreateWithoutAuth_groupInput[] | auth_group_permissionsUncheckedCreateWithoutAuth_groupInput[]
    connectOrCreate?: auth_group_permissionsCreateOrConnectWithoutAuth_groupInput | auth_group_permissionsCreateOrConnectWithoutAuth_groupInput[]
    upsert?: auth_group_permissionsUpsertWithWhereUniqueWithoutAuth_groupInput | auth_group_permissionsUpsertWithWhereUniqueWithoutAuth_groupInput[]
    createMany?: auth_group_permissionsCreateManyAuth_groupInputEnvelope
    set?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    disconnect?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    delete?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    connect?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    update?: auth_group_permissionsUpdateWithWhereUniqueWithoutAuth_groupInput | auth_group_permissionsUpdateWithWhereUniqueWithoutAuth_groupInput[]
    updateMany?: auth_group_permissionsUpdateManyWithWhereWithoutAuth_groupInput | auth_group_permissionsUpdateManyWithWhereWithoutAuth_groupInput[]
    deleteMany?: auth_group_permissionsScalarWhereInput | auth_group_permissionsScalarWhereInput[]
  }

  export type auth_user_groupsUncheckedUpdateManyWithoutAuth_groupNestedInput = {
    create?: XOR<auth_user_groupsCreateWithoutAuth_groupInput, auth_user_groupsUncheckedCreateWithoutAuth_groupInput> | auth_user_groupsCreateWithoutAuth_groupInput[] | auth_user_groupsUncheckedCreateWithoutAuth_groupInput[]
    connectOrCreate?: auth_user_groupsCreateOrConnectWithoutAuth_groupInput | auth_user_groupsCreateOrConnectWithoutAuth_groupInput[]
    upsert?: auth_user_groupsUpsertWithWhereUniqueWithoutAuth_groupInput | auth_user_groupsUpsertWithWhereUniqueWithoutAuth_groupInput[]
    createMany?: auth_user_groupsCreateManyAuth_groupInputEnvelope
    set?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    disconnect?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    delete?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    connect?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    update?: auth_user_groupsUpdateWithWhereUniqueWithoutAuth_groupInput | auth_user_groupsUpdateWithWhereUniqueWithoutAuth_groupInput[]
    updateMany?: auth_user_groupsUpdateManyWithWhereWithoutAuth_groupInput | auth_user_groupsUpdateManyWithWhereWithoutAuth_groupInput[]
    deleteMany?: auth_user_groupsScalarWhereInput | auth_user_groupsScalarWhereInput[]
  }

  export type auth_permissionCreateNestedOneWithoutAuth_group_permissionsInput = {
    create?: XOR<auth_permissionCreateWithoutAuth_group_permissionsInput, auth_permissionUncheckedCreateWithoutAuth_group_permissionsInput>
    connectOrCreate?: auth_permissionCreateOrConnectWithoutAuth_group_permissionsInput
    connect?: auth_permissionWhereUniqueInput
  }

  export type auth_groupCreateNestedOneWithoutAuth_group_permissionsInput = {
    create?: XOR<auth_groupCreateWithoutAuth_group_permissionsInput, auth_groupUncheckedCreateWithoutAuth_group_permissionsInput>
    connectOrCreate?: auth_groupCreateOrConnectWithoutAuth_group_permissionsInput
    connect?: auth_groupWhereUniqueInput
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type auth_permissionUpdateOneRequiredWithoutAuth_group_permissionsNestedInput = {
    create?: XOR<auth_permissionCreateWithoutAuth_group_permissionsInput, auth_permissionUncheckedCreateWithoutAuth_group_permissionsInput>
    connectOrCreate?: auth_permissionCreateOrConnectWithoutAuth_group_permissionsInput
    upsert?: auth_permissionUpsertWithoutAuth_group_permissionsInput
    connect?: auth_permissionWhereUniqueInput
    update?: XOR<XOR<auth_permissionUpdateToOneWithWhereWithoutAuth_group_permissionsInput, auth_permissionUpdateWithoutAuth_group_permissionsInput>, auth_permissionUncheckedUpdateWithoutAuth_group_permissionsInput>
  }

  export type auth_groupUpdateOneRequiredWithoutAuth_group_permissionsNestedInput = {
    create?: XOR<auth_groupCreateWithoutAuth_group_permissionsInput, auth_groupUncheckedCreateWithoutAuth_group_permissionsInput>
    connectOrCreate?: auth_groupCreateOrConnectWithoutAuth_group_permissionsInput
    upsert?: auth_groupUpsertWithoutAuth_group_permissionsInput
    connect?: auth_groupWhereUniqueInput
    update?: XOR<XOR<auth_groupUpdateToOneWithWhereWithoutAuth_group_permissionsInput, auth_groupUpdateWithoutAuth_group_permissionsInput>, auth_groupUncheckedUpdateWithoutAuth_group_permissionsInput>
  }

  export type auth_group_permissionsCreateNestedManyWithoutAuth_permissionInput = {
    create?: XOR<auth_group_permissionsCreateWithoutAuth_permissionInput, auth_group_permissionsUncheckedCreateWithoutAuth_permissionInput> | auth_group_permissionsCreateWithoutAuth_permissionInput[] | auth_group_permissionsUncheckedCreateWithoutAuth_permissionInput[]
    connectOrCreate?: auth_group_permissionsCreateOrConnectWithoutAuth_permissionInput | auth_group_permissionsCreateOrConnectWithoutAuth_permissionInput[]
    createMany?: auth_group_permissionsCreateManyAuth_permissionInputEnvelope
    connect?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
  }

  export type django_content_typeCreateNestedOneWithoutAuth_permissionInput = {
    create?: XOR<django_content_typeCreateWithoutAuth_permissionInput, django_content_typeUncheckedCreateWithoutAuth_permissionInput>
    connectOrCreate?: django_content_typeCreateOrConnectWithoutAuth_permissionInput
    connect?: django_content_typeWhereUniqueInput
  }

  export type auth_user_user_permissionsCreateNestedManyWithoutAuth_permissionInput = {
    create?: XOR<auth_user_user_permissionsCreateWithoutAuth_permissionInput, auth_user_user_permissionsUncheckedCreateWithoutAuth_permissionInput> | auth_user_user_permissionsCreateWithoutAuth_permissionInput[] | auth_user_user_permissionsUncheckedCreateWithoutAuth_permissionInput[]
    connectOrCreate?: auth_user_user_permissionsCreateOrConnectWithoutAuth_permissionInput | auth_user_user_permissionsCreateOrConnectWithoutAuth_permissionInput[]
    createMany?: auth_user_user_permissionsCreateManyAuth_permissionInputEnvelope
    connect?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
  }

  export type auth_group_permissionsUncheckedCreateNestedManyWithoutAuth_permissionInput = {
    create?: XOR<auth_group_permissionsCreateWithoutAuth_permissionInput, auth_group_permissionsUncheckedCreateWithoutAuth_permissionInput> | auth_group_permissionsCreateWithoutAuth_permissionInput[] | auth_group_permissionsUncheckedCreateWithoutAuth_permissionInput[]
    connectOrCreate?: auth_group_permissionsCreateOrConnectWithoutAuth_permissionInput | auth_group_permissionsCreateOrConnectWithoutAuth_permissionInput[]
    createMany?: auth_group_permissionsCreateManyAuth_permissionInputEnvelope
    connect?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
  }

  export type auth_user_user_permissionsUncheckedCreateNestedManyWithoutAuth_permissionInput = {
    create?: XOR<auth_user_user_permissionsCreateWithoutAuth_permissionInput, auth_user_user_permissionsUncheckedCreateWithoutAuth_permissionInput> | auth_user_user_permissionsCreateWithoutAuth_permissionInput[] | auth_user_user_permissionsUncheckedCreateWithoutAuth_permissionInput[]
    connectOrCreate?: auth_user_user_permissionsCreateOrConnectWithoutAuth_permissionInput | auth_user_user_permissionsCreateOrConnectWithoutAuth_permissionInput[]
    createMany?: auth_user_user_permissionsCreateManyAuth_permissionInputEnvelope
    connect?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
  }

  export type auth_group_permissionsUpdateManyWithoutAuth_permissionNestedInput = {
    create?: XOR<auth_group_permissionsCreateWithoutAuth_permissionInput, auth_group_permissionsUncheckedCreateWithoutAuth_permissionInput> | auth_group_permissionsCreateWithoutAuth_permissionInput[] | auth_group_permissionsUncheckedCreateWithoutAuth_permissionInput[]
    connectOrCreate?: auth_group_permissionsCreateOrConnectWithoutAuth_permissionInput | auth_group_permissionsCreateOrConnectWithoutAuth_permissionInput[]
    upsert?: auth_group_permissionsUpsertWithWhereUniqueWithoutAuth_permissionInput | auth_group_permissionsUpsertWithWhereUniqueWithoutAuth_permissionInput[]
    createMany?: auth_group_permissionsCreateManyAuth_permissionInputEnvelope
    set?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    disconnect?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    delete?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    connect?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    update?: auth_group_permissionsUpdateWithWhereUniqueWithoutAuth_permissionInput | auth_group_permissionsUpdateWithWhereUniqueWithoutAuth_permissionInput[]
    updateMany?: auth_group_permissionsUpdateManyWithWhereWithoutAuth_permissionInput | auth_group_permissionsUpdateManyWithWhereWithoutAuth_permissionInput[]
    deleteMany?: auth_group_permissionsScalarWhereInput | auth_group_permissionsScalarWhereInput[]
  }

  export type django_content_typeUpdateOneRequiredWithoutAuth_permissionNestedInput = {
    create?: XOR<django_content_typeCreateWithoutAuth_permissionInput, django_content_typeUncheckedCreateWithoutAuth_permissionInput>
    connectOrCreate?: django_content_typeCreateOrConnectWithoutAuth_permissionInput
    upsert?: django_content_typeUpsertWithoutAuth_permissionInput
    connect?: django_content_typeWhereUniqueInput
    update?: XOR<XOR<django_content_typeUpdateToOneWithWhereWithoutAuth_permissionInput, django_content_typeUpdateWithoutAuth_permissionInput>, django_content_typeUncheckedUpdateWithoutAuth_permissionInput>
  }

  export type auth_user_user_permissionsUpdateManyWithoutAuth_permissionNestedInput = {
    create?: XOR<auth_user_user_permissionsCreateWithoutAuth_permissionInput, auth_user_user_permissionsUncheckedCreateWithoutAuth_permissionInput> | auth_user_user_permissionsCreateWithoutAuth_permissionInput[] | auth_user_user_permissionsUncheckedCreateWithoutAuth_permissionInput[]
    connectOrCreate?: auth_user_user_permissionsCreateOrConnectWithoutAuth_permissionInput | auth_user_user_permissionsCreateOrConnectWithoutAuth_permissionInput[]
    upsert?: auth_user_user_permissionsUpsertWithWhereUniqueWithoutAuth_permissionInput | auth_user_user_permissionsUpsertWithWhereUniqueWithoutAuth_permissionInput[]
    createMany?: auth_user_user_permissionsCreateManyAuth_permissionInputEnvelope
    set?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    disconnect?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    delete?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    connect?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    update?: auth_user_user_permissionsUpdateWithWhereUniqueWithoutAuth_permissionInput | auth_user_user_permissionsUpdateWithWhereUniqueWithoutAuth_permissionInput[]
    updateMany?: auth_user_user_permissionsUpdateManyWithWhereWithoutAuth_permissionInput | auth_user_user_permissionsUpdateManyWithWhereWithoutAuth_permissionInput[]
    deleteMany?: auth_user_user_permissionsScalarWhereInput | auth_user_user_permissionsScalarWhereInput[]
  }

  export type auth_group_permissionsUncheckedUpdateManyWithoutAuth_permissionNestedInput = {
    create?: XOR<auth_group_permissionsCreateWithoutAuth_permissionInput, auth_group_permissionsUncheckedCreateWithoutAuth_permissionInput> | auth_group_permissionsCreateWithoutAuth_permissionInput[] | auth_group_permissionsUncheckedCreateWithoutAuth_permissionInput[]
    connectOrCreate?: auth_group_permissionsCreateOrConnectWithoutAuth_permissionInput | auth_group_permissionsCreateOrConnectWithoutAuth_permissionInput[]
    upsert?: auth_group_permissionsUpsertWithWhereUniqueWithoutAuth_permissionInput | auth_group_permissionsUpsertWithWhereUniqueWithoutAuth_permissionInput[]
    createMany?: auth_group_permissionsCreateManyAuth_permissionInputEnvelope
    set?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    disconnect?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    delete?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    connect?: auth_group_permissionsWhereUniqueInput | auth_group_permissionsWhereUniqueInput[]
    update?: auth_group_permissionsUpdateWithWhereUniqueWithoutAuth_permissionInput | auth_group_permissionsUpdateWithWhereUniqueWithoutAuth_permissionInput[]
    updateMany?: auth_group_permissionsUpdateManyWithWhereWithoutAuth_permissionInput | auth_group_permissionsUpdateManyWithWhereWithoutAuth_permissionInput[]
    deleteMany?: auth_group_permissionsScalarWhereInput | auth_group_permissionsScalarWhereInput[]
  }

  export type auth_user_user_permissionsUncheckedUpdateManyWithoutAuth_permissionNestedInput = {
    create?: XOR<auth_user_user_permissionsCreateWithoutAuth_permissionInput, auth_user_user_permissionsUncheckedCreateWithoutAuth_permissionInput> | auth_user_user_permissionsCreateWithoutAuth_permissionInput[] | auth_user_user_permissionsUncheckedCreateWithoutAuth_permissionInput[]
    connectOrCreate?: auth_user_user_permissionsCreateOrConnectWithoutAuth_permissionInput | auth_user_user_permissionsCreateOrConnectWithoutAuth_permissionInput[]
    upsert?: auth_user_user_permissionsUpsertWithWhereUniqueWithoutAuth_permissionInput | auth_user_user_permissionsUpsertWithWhereUniqueWithoutAuth_permissionInput[]
    createMany?: auth_user_user_permissionsCreateManyAuth_permissionInputEnvelope
    set?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    disconnect?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    delete?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    connect?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    update?: auth_user_user_permissionsUpdateWithWhereUniqueWithoutAuth_permissionInput | auth_user_user_permissionsUpdateWithWhereUniqueWithoutAuth_permissionInput[]
    updateMany?: auth_user_user_permissionsUpdateManyWithWhereWithoutAuth_permissionInput | auth_user_user_permissionsUpdateManyWithWhereWithoutAuth_permissionInput[]
    deleteMany?: auth_user_user_permissionsScalarWhereInput | auth_user_user_permissionsScalarWhereInput[]
  }

  export type auth_user_groupsCreateNestedManyWithoutAuth_userInput = {
    create?: XOR<auth_user_groupsCreateWithoutAuth_userInput, auth_user_groupsUncheckedCreateWithoutAuth_userInput> | auth_user_groupsCreateWithoutAuth_userInput[] | auth_user_groupsUncheckedCreateWithoutAuth_userInput[]
    connectOrCreate?: auth_user_groupsCreateOrConnectWithoutAuth_userInput | auth_user_groupsCreateOrConnectWithoutAuth_userInput[]
    createMany?: auth_user_groupsCreateManyAuth_userInputEnvelope
    connect?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
  }

  export type auth_user_user_permissionsCreateNestedManyWithoutAuth_userInput = {
    create?: XOR<auth_user_user_permissionsCreateWithoutAuth_userInput, auth_user_user_permissionsUncheckedCreateWithoutAuth_userInput> | auth_user_user_permissionsCreateWithoutAuth_userInput[] | auth_user_user_permissionsUncheckedCreateWithoutAuth_userInput[]
    connectOrCreate?: auth_user_user_permissionsCreateOrConnectWithoutAuth_userInput | auth_user_user_permissionsCreateOrConnectWithoutAuth_userInput[]
    createMany?: auth_user_user_permissionsCreateManyAuth_userInputEnvelope
    connect?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
  }

  export type django_admin_logCreateNestedManyWithoutAuth_userInput = {
    create?: XOR<django_admin_logCreateWithoutAuth_userInput, django_admin_logUncheckedCreateWithoutAuth_userInput> | django_admin_logCreateWithoutAuth_userInput[] | django_admin_logUncheckedCreateWithoutAuth_userInput[]
    connectOrCreate?: django_admin_logCreateOrConnectWithoutAuth_userInput | django_admin_logCreateOrConnectWithoutAuth_userInput[]
    createMany?: django_admin_logCreateManyAuth_userInputEnvelope
    connect?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
  }

  export type ProfileCreateNestedOneWithoutAuth_userInput = {
    create?: XOR<ProfileCreateWithoutAuth_userInput, ProfileUncheckedCreateWithoutAuth_userInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutAuth_userInput
    connect?: ProfileWhereUniqueInput
  }

  export type auth_user_groupsUncheckedCreateNestedManyWithoutAuth_userInput = {
    create?: XOR<auth_user_groupsCreateWithoutAuth_userInput, auth_user_groupsUncheckedCreateWithoutAuth_userInput> | auth_user_groupsCreateWithoutAuth_userInput[] | auth_user_groupsUncheckedCreateWithoutAuth_userInput[]
    connectOrCreate?: auth_user_groupsCreateOrConnectWithoutAuth_userInput | auth_user_groupsCreateOrConnectWithoutAuth_userInput[]
    createMany?: auth_user_groupsCreateManyAuth_userInputEnvelope
    connect?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
  }

  export type auth_user_user_permissionsUncheckedCreateNestedManyWithoutAuth_userInput = {
    create?: XOR<auth_user_user_permissionsCreateWithoutAuth_userInput, auth_user_user_permissionsUncheckedCreateWithoutAuth_userInput> | auth_user_user_permissionsCreateWithoutAuth_userInput[] | auth_user_user_permissionsUncheckedCreateWithoutAuth_userInput[]
    connectOrCreate?: auth_user_user_permissionsCreateOrConnectWithoutAuth_userInput | auth_user_user_permissionsCreateOrConnectWithoutAuth_userInput[]
    createMany?: auth_user_user_permissionsCreateManyAuth_userInputEnvelope
    connect?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
  }

  export type django_admin_logUncheckedCreateNestedManyWithoutAuth_userInput = {
    create?: XOR<django_admin_logCreateWithoutAuth_userInput, django_admin_logUncheckedCreateWithoutAuth_userInput> | django_admin_logCreateWithoutAuth_userInput[] | django_admin_logUncheckedCreateWithoutAuth_userInput[]
    connectOrCreate?: django_admin_logCreateOrConnectWithoutAuth_userInput | django_admin_logCreateOrConnectWithoutAuth_userInput[]
    createMany?: django_admin_logCreateManyAuth_userInputEnvelope
    connect?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
  }

  export type ProfileUncheckedCreateNestedOneWithoutAuth_userInput = {
    create?: XOR<ProfileCreateWithoutAuth_userInput, ProfileUncheckedCreateWithoutAuth_userInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutAuth_userInput
    connect?: ProfileWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type auth_user_groupsUpdateManyWithoutAuth_userNestedInput = {
    create?: XOR<auth_user_groupsCreateWithoutAuth_userInput, auth_user_groupsUncheckedCreateWithoutAuth_userInput> | auth_user_groupsCreateWithoutAuth_userInput[] | auth_user_groupsUncheckedCreateWithoutAuth_userInput[]
    connectOrCreate?: auth_user_groupsCreateOrConnectWithoutAuth_userInput | auth_user_groupsCreateOrConnectWithoutAuth_userInput[]
    upsert?: auth_user_groupsUpsertWithWhereUniqueWithoutAuth_userInput | auth_user_groupsUpsertWithWhereUniqueWithoutAuth_userInput[]
    createMany?: auth_user_groupsCreateManyAuth_userInputEnvelope
    set?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    disconnect?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    delete?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    connect?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    update?: auth_user_groupsUpdateWithWhereUniqueWithoutAuth_userInput | auth_user_groupsUpdateWithWhereUniqueWithoutAuth_userInput[]
    updateMany?: auth_user_groupsUpdateManyWithWhereWithoutAuth_userInput | auth_user_groupsUpdateManyWithWhereWithoutAuth_userInput[]
    deleteMany?: auth_user_groupsScalarWhereInput | auth_user_groupsScalarWhereInput[]
  }

  export type auth_user_user_permissionsUpdateManyWithoutAuth_userNestedInput = {
    create?: XOR<auth_user_user_permissionsCreateWithoutAuth_userInput, auth_user_user_permissionsUncheckedCreateWithoutAuth_userInput> | auth_user_user_permissionsCreateWithoutAuth_userInput[] | auth_user_user_permissionsUncheckedCreateWithoutAuth_userInput[]
    connectOrCreate?: auth_user_user_permissionsCreateOrConnectWithoutAuth_userInput | auth_user_user_permissionsCreateOrConnectWithoutAuth_userInput[]
    upsert?: auth_user_user_permissionsUpsertWithWhereUniqueWithoutAuth_userInput | auth_user_user_permissionsUpsertWithWhereUniqueWithoutAuth_userInput[]
    createMany?: auth_user_user_permissionsCreateManyAuth_userInputEnvelope
    set?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    disconnect?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    delete?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    connect?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    update?: auth_user_user_permissionsUpdateWithWhereUniqueWithoutAuth_userInput | auth_user_user_permissionsUpdateWithWhereUniqueWithoutAuth_userInput[]
    updateMany?: auth_user_user_permissionsUpdateManyWithWhereWithoutAuth_userInput | auth_user_user_permissionsUpdateManyWithWhereWithoutAuth_userInput[]
    deleteMany?: auth_user_user_permissionsScalarWhereInput | auth_user_user_permissionsScalarWhereInput[]
  }

  export type django_admin_logUpdateManyWithoutAuth_userNestedInput = {
    create?: XOR<django_admin_logCreateWithoutAuth_userInput, django_admin_logUncheckedCreateWithoutAuth_userInput> | django_admin_logCreateWithoutAuth_userInput[] | django_admin_logUncheckedCreateWithoutAuth_userInput[]
    connectOrCreate?: django_admin_logCreateOrConnectWithoutAuth_userInput | django_admin_logCreateOrConnectWithoutAuth_userInput[]
    upsert?: django_admin_logUpsertWithWhereUniqueWithoutAuth_userInput | django_admin_logUpsertWithWhereUniqueWithoutAuth_userInput[]
    createMany?: django_admin_logCreateManyAuth_userInputEnvelope
    set?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    disconnect?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    delete?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    connect?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    update?: django_admin_logUpdateWithWhereUniqueWithoutAuth_userInput | django_admin_logUpdateWithWhereUniqueWithoutAuth_userInput[]
    updateMany?: django_admin_logUpdateManyWithWhereWithoutAuth_userInput | django_admin_logUpdateManyWithWhereWithoutAuth_userInput[]
    deleteMany?: django_admin_logScalarWhereInput | django_admin_logScalarWhereInput[]
  }

  export type ProfileUpdateOneWithoutAuth_userNestedInput = {
    create?: XOR<ProfileCreateWithoutAuth_userInput, ProfileUncheckedCreateWithoutAuth_userInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutAuth_userInput
    upsert?: ProfileUpsertWithoutAuth_userInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutAuth_userInput, ProfileUpdateWithoutAuth_userInput>, ProfileUncheckedUpdateWithoutAuth_userInput>
  }

  export type auth_user_groupsUncheckedUpdateManyWithoutAuth_userNestedInput = {
    create?: XOR<auth_user_groupsCreateWithoutAuth_userInput, auth_user_groupsUncheckedCreateWithoutAuth_userInput> | auth_user_groupsCreateWithoutAuth_userInput[] | auth_user_groupsUncheckedCreateWithoutAuth_userInput[]
    connectOrCreate?: auth_user_groupsCreateOrConnectWithoutAuth_userInput | auth_user_groupsCreateOrConnectWithoutAuth_userInput[]
    upsert?: auth_user_groupsUpsertWithWhereUniqueWithoutAuth_userInput | auth_user_groupsUpsertWithWhereUniqueWithoutAuth_userInput[]
    createMany?: auth_user_groupsCreateManyAuth_userInputEnvelope
    set?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    disconnect?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    delete?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    connect?: auth_user_groupsWhereUniqueInput | auth_user_groupsWhereUniqueInput[]
    update?: auth_user_groupsUpdateWithWhereUniqueWithoutAuth_userInput | auth_user_groupsUpdateWithWhereUniqueWithoutAuth_userInput[]
    updateMany?: auth_user_groupsUpdateManyWithWhereWithoutAuth_userInput | auth_user_groupsUpdateManyWithWhereWithoutAuth_userInput[]
    deleteMany?: auth_user_groupsScalarWhereInput | auth_user_groupsScalarWhereInput[]
  }

  export type auth_user_user_permissionsUncheckedUpdateManyWithoutAuth_userNestedInput = {
    create?: XOR<auth_user_user_permissionsCreateWithoutAuth_userInput, auth_user_user_permissionsUncheckedCreateWithoutAuth_userInput> | auth_user_user_permissionsCreateWithoutAuth_userInput[] | auth_user_user_permissionsUncheckedCreateWithoutAuth_userInput[]
    connectOrCreate?: auth_user_user_permissionsCreateOrConnectWithoutAuth_userInput | auth_user_user_permissionsCreateOrConnectWithoutAuth_userInput[]
    upsert?: auth_user_user_permissionsUpsertWithWhereUniqueWithoutAuth_userInput | auth_user_user_permissionsUpsertWithWhereUniqueWithoutAuth_userInput[]
    createMany?: auth_user_user_permissionsCreateManyAuth_userInputEnvelope
    set?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    disconnect?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    delete?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    connect?: auth_user_user_permissionsWhereUniqueInput | auth_user_user_permissionsWhereUniqueInput[]
    update?: auth_user_user_permissionsUpdateWithWhereUniqueWithoutAuth_userInput | auth_user_user_permissionsUpdateWithWhereUniqueWithoutAuth_userInput[]
    updateMany?: auth_user_user_permissionsUpdateManyWithWhereWithoutAuth_userInput | auth_user_user_permissionsUpdateManyWithWhereWithoutAuth_userInput[]
    deleteMany?: auth_user_user_permissionsScalarWhereInput | auth_user_user_permissionsScalarWhereInput[]
  }

  export type django_admin_logUncheckedUpdateManyWithoutAuth_userNestedInput = {
    create?: XOR<django_admin_logCreateWithoutAuth_userInput, django_admin_logUncheckedCreateWithoutAuth_userInput> | django_admin_logCreateWithoutAuth_userInput[] | django_admin_logUncheckedCreateWithoutAuth_userInput[]
    connectOrCreate?: django_admin_logCreateOrConnectWithoutAuth_userInput | django_admin_logCreateOrConnectWithoutAuth_userInput[]
    upsert?: django_admin_logUpsertWithWhereUniqueWithoutAuth_userInput | django_admin_logUpsertWithWhereUniqueWithoutAuth_userInput[]
    createMany?: django_admin_logCreateManyAuth_userInputEnvelope
    set?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    disconnect?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    delete?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    connect?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    update?: django_admin_logUpdateWithWhereUniqueWithoutAuth_userInput | django_admin_logUpdateWithWhereUniqueWithoutAuth_userInput[]
    updateMany?: django_admin_logUpdateManyWithWhereWithoutAuth_userInput | django_admin_logUpdateManyWithWhereWithoutAuth_userInput[]
    deleteMany?: django_admin_logScalarWhereInput | django_admin_logScalarWhereInput[]
  }

  export type ProfileUncheckedUpdateOneWithoutAuth_userNestedInput = {
    create?: XOR<ProfileCreateWithoutAuth_userInput, ProfileUncheckedCreateWithoutAuth_userInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutAuth_userInput
    upsert?: ProfileUpsertWithoutAuth_userInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutAuth_userInput, ProfileUpdateWithoutAuth_userInput>, ProfileUncheckedUpdateWithoutAuth_userInput>
  }

  export type auth_groupCreateNestedOneWithoutAuth_user_groupsInput = {
    create?: XOR<auth_groupCreateWithoutAuth_user_groupsInput, auth_groupUncheckedCreateWithoutAuth_user_groupsInput>
    connectOrCreate?: auth_groupCreateOrConnectWithoutAuth_user_groupsInput
    connect?: auth_groupWhereUniqueInput
  }

  export type auth_userCreateNestedOneWithoutAuth_user_groupsInput = {
    create?: XOR<auth_userCreateWithoutAuth_user_groupsInput, auth_userUncheckedCreateWithoutAuth_user_groupsInput>
    connectOrCreate?: auth_userCreateOrConnectWithoutAuth_user_groupsInput
    connect?: auth_userWhereUniqueInput
  }

  export type auth_groupUpdateOneRequiredWithoutAuth_user_groupsNestedInput = {
    create?: XOR<auth_groupCreateWithoutAuth_user_groupsInput, auth_groupUncheckedCreateWithoutAuth_user_groupsInput>
    connectOrCreate?: auth_groupCreateOrConnectWithoutAuth_user_groupsInput
    upsert?: auth_groupUpsertWithoutAuth_user_groupsInput
    connect?: auth_groupWhereUniqueInput
    update?: XOR<XOR<auth_groupUpdateToOneWithWhereWithoutAuth_user_groupsInput, auth_groupUpdateWithoutAuth_user_groupsInput>, auth_groupUncheckedUpdateWithoutAuth_user_groupsInput>
  }

  export type auth_userUpdateOneRequiredWithoutAuth_user_groupsNestedInput = {
    create?: XOR<auth_userCreateWithoutAuth_user_groupsInput, auth_userUncheckedCreateWithoutAuth_user_groupsInput>
    connectOrCreate?: auth_userCreateOrConnectWithoutAuth_user_groupsInput
    upsert?: auth_userUpsertWithoutAuth_user_groupsInput
    connect?: auth_userWhereUniqueInput
    update?: XOR<XOR<auth_userUpdateToOneWithWhereWithoutAuth_user_groupsInput, auth_userUpdateWithoutAuth_user_groupsInput>, auth_userUncheckedUpdateWithoutAuth_user_groupsInput>
  }

  export type auth_permissionCreateNestedOneWithoutAuth_user_user_permissionsInput = {
    create?: XOR<auth_permissionCreateWithoutAuth_user_user_permissionsInput, auth_permissionUncheckedCreateWithoutAuth_user_user_permissionsInput>
    connectOrCreate?: auth_permissionCreateOrConnectWithoutAuth_user_user_permissionsInput
    connect?: auth_permissionWhereUniqueInput
  }

  export type auth_userCreateNestedOneWithoutAuth_user_user_permissionsInput = {
    create?: XOR<auth_userCreateWithoutAuth_user_user_permissionsInput, auth_userUncheckedCreateWithoutAuth_user_user_permissionsInput>
    connectOrCreate?: auth_userCreateOrConnectWithoutAuth_user_user_permissionsInput
    connect?: auth_userWhereUniqueInput
  }

  export type auth_permissionUpdateOneRequiredWithoutAuth_user_user_permissionsNestedInput = {
    create?: XOR<auth_permissionCreateWithoutAuth_user_user_permissionsInput, auth_permissionUncheckedCreateWithoutAuth_user_user_permissionsInput>
    connectOrCreate?: auth_permissionCreateOrConnectWithoutAuth_user_user_permissionsInput
    upsert?: auth_permissionUpsertWithoutAuth_user_user_permissionsInput
    connect?: auth_permissionWhereUniqueInput
    update?: XOR<XOR<auth_permissionUpdateToOneWithWhereWithoutAuth_user_user_permissionsInput, auth_permissionUpdateWithoutAuth_user_user_permissionsInput>, auth_permissionUncheckedUpdateWithoutAuth_user_user_permissionsInput>
  }

  export type auth_userUpdateOneRequiredWithoutAuth_user_user_permissionsNestedInput = {
    create?: XOR<auth_userCreateWithoutAuth_user_user_permissionsInput, auth_userUncheckedCreateWithoutAuth_user_user_permissionsInput>
    connectOrCreate?: auth_userCreateOrConnectWithoutAuth_user_user_permissionsInput
    upsert?: auth_userUpsertWithoutAuth_user_user_permissionsInput
    connect?: auth_userWhereUniqueInput
    update?: XOR<XOR<auth_userUpdateToOneWithWhereWithoutAuth_user_user_permissionsInput, auth_userUpdateWithoutAuth_user_user_permissionsInput>, auth_userUncheckedUpdateWithoutAuth_user_user_permissionsInput>
  }

  export type django_content_typeCreateNestedOneWithoutDjango_admin_logInput = {
    create?: XOR<django_content_typeCreateWithoutDjango_admin_logInput, django_content_typeUncheckedCreateWithoutDjango_admin_logInput>
    connectOrCreate?: django_content_typeCreateOrConnectWithoutDjango_admin_logInput
    connect?: django_content_typeWhereUniqueInput
  }

  export type auth_userCreateNestedOneWithoutDjango_admin_logInput = {
    create?: XOR<auth_userCreateWithoutDjango_admin_logInput, auth_userUncheckedCreateWithoutDjango_admin_logInput>
    connectOrCreate?: auth_userCreateOrConnectWithoutDjango_admin_logInput
    connect?: auth_userWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type django_content_typeUpdateOneWithoutDjango_admin_logNestedInput = {
    create?: XOR<django_content_typeCreateWithoutDjango_admin_logInput, django_content_typeUncheckedCreateWithoutDjango_admin_logInput>
    connectOrCreate?: django_content_typeCreateOrConnectWithoutDjango_admin_logInput
    upsert?: django_content_typeUpsertWithoutDjango_admin_logInput
    disconnect?: django_content_typeWhereInput | boolean
    delete?: django_content_typeWhereInput | boolean
    connect?: django_content_typeWhereUniqueInput
    update?: XOR<XOR<django_content_typeUpdateToOneWithWhereWithoutDjango_admin_logInput, django_content_typeUpdateWithoutDjango_admin_logInput>, django_content_typeUncheckedUpdateWithoutDjango_admin_logInput>
  }

  export type auth_userUpdateOneRequiredWithoutDjango_admin_logNestedInput = {
    create?: XOR<auth_userCreateWithoutDjango_admin_logInput, auth_userUncheckedCreateWithoutDjango_admin_logInput>
    connectOrCreate?: auth_userCreateOrConnectWithoutDjango_admin_logInput
    upsert?: auth_userUpsertWithoutDjango_admin_logInput
    connect?: auth_userWhereUniqueInput
    update?: XOR<XOR<auth_userUpdateToOneWithWhereWithoutDjango_admin_logInput, auth_userUpdateWithoutDjango_admin_logInput>, auth_userUncheckedUpdateWithoutDjango_admin_logInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type auth_permissionCreateNestedManyWithoutDjango_content_typeInput = {
    create?: XOR<auth_permissionCreateWithoutDjango_content_typeInput, auth_permissionUncheckedCreateWithoutDjango_content_typeInput> | auth_permissionCreateWithoutDjango_content_typeInput[] | auth_permissionUncheckedCreateWithoutDjango_content_typeInput[]
    connectOrCreate?: auth_permissionCreateOrConnectWithoutDjango_content_typeInput | auth_permissionCreateOrConnectWithoutDjango_content_typeInput[]
    createMany?: auth_permissionCreateManyDjango_content_typeInputEnvelope
    connect?: auth_permissionWhereUniqueInput | auth_permissionWhereUniqueInput[]
  }

  export type django_admin_logCreateNestedManyWithoutDjango_content_typeInput = {
    create?: XOR<django_admin_logCreateWithoutDjango_content_typeInput, django_admin_logUncheckedCreateWithoutDjango_content_typeInput> | django_admin_logCreateWithoutDjango_content_typeInput[] | django_admin_logUncheckedCreateWithoutDjango_content_typeInput[]
    connectOrCreate?: django_admin_logCreateOrConnectWithoutDjango_content_typeInput | django_admin_logCreateOrConnectWithoutDjango_content_typeInput[]
    createMany?: django_admin_logCreateManyDjango_content_typeInputEnvelope
    connect?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
  }

  export type auth_permissionUncheckedCreateNestedManyWithoutDjango_content_typeInput = {
    create?: XOR<auth_permissionCreateWithoutDjango_content_typeInput, auth_permissionUncheckedCreateWithoutDjango_content_typeInput> | auth_permissionCreateWithoutDjango_content_typeInput[] | auth_permissionUncheckedCreateWithoutDjango_content_typeInput[]
    connectOrCreate?: auth_permissionCreateOrConnectWithoutDjango_content_typeInput | auth_permissionCreateOrConnectWithoutDjango_content_typeInput[]
    createMany?: auth_permissionCreateManyDjango_content_typeInputEnvelope
    connect?: auth_permissionWhereUniqueInput | auth_permissionWhereUniqueInput[]
  }

  export type django_admin_logUncheckedCreateNestedManyWithoutDjango_content_typeInput = {
    create?: XOR<django_admin_logCreateWithoutDjango_content_typeInput, django_admin_logUncheckedCreateWithoutDjango_content_typeInput> | django_admin_logCreateWithoutDjango_content_typeInput[] | django_admin_logUncheckedCreateWithoutDjango_content_typeInput[]
    connectOrCreate?: django_admin_logCreateOrConnectWithoutDjango_content_typeInput | django_admin_logCreateOrConnectWithoutDjango_content_typeInput[]
    createMany?: django_admin_logCreateManyDjango_content_typeInputEnvelope
    connect?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
  }

  export type auth_permissionUpdateManyWithoutDjango_content_typeNestedInput = {
    create?: XOR<auth_permissionCreateWithoutDjango_content_typeInput, auth_permissionUncheckedCreateWithoutDjango_content_typeInput> | auth_permissionCreateWithoutDjango_content_typeInput[] | auth_permissionUncheckedCreateWithoutDjango_content_typeInput[]
    connectOrCreate?: auth_permissionCreateOrConnectWithoutDjango_content_typeInput | auth_permissionCreateOrConnectWithoutDjango_content_typeInput[]
    upsert?: auth_permissionUpsertWithWhereUniqueWithoutDjango_content_typeInput | auth_permissionUpsertWithWhereUniqueWithoutDjango_content_typeInput[]
    createMany?: auth_permissionCreateManyDjango_content_typeInputEnvelope
    set?: auth_permissionWhereUniqueInput | auth_permissionWhereUniqueInput[]
    disconnect?: auth_permissionWhereUniqueInput | auth_permissionWhereUniqueInput[]
    delete?: auth_permissionWhereUniqueInput | auth_permissionWhereUniqueInput[]
    connect?: auth_permissionWhereUniqueInput | auth_permissionWhereUniqueInput[]
    update?: auth_permissionUpdateWithWhereUniqueWithoutDjango_content_typeInput | auth_permissionUpdateWithWhereUniqueWithoutDjango_content_typeInput[]
    updateMany?: auth_permissionUpdateManyWithWhereWithoutDjango_content_typeInput | auth_permissionUpdateManyWithWhereWithoutDjango_content_typeInput[]
    deleteMany?: auth_permissionScalarWhereInput | auth_permissionScalarWhereInput[]
  }

  export type django_admin_logUpdateManyWithoutDjango_content_typeNestedInput = {
    create?: XOR<django_admin_logCreateWithoutDjango_content_typeInput, django_admin_logUncheckedCreateWithoutDjango_content_typeInput> | django_admin_logCreateWithoutDjango_content_typeInput[] | django_admin_logUncheckedCreateWithoutDjango_content_typeInput[]
    connectOrCreate?: django_admin_logCreateOrConnectWithoutDjango_content_typeInput | django_admin_logCreateOrConnectWithoutDjango_content_typeInput[]
    upsert?: django_admin_logUpsertWithWhereUniqueWithoutDjango_content_typeInput | django_admin_logUpsertWithWhereUniqueWithoutDjango_content_typeInput[]
    createMany?: django_admin_logCreateManyDjango_content_typeInputEnvelope
    set?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    disconnect?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    delete?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    connect?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    update?: django_admin_logUpdateWithWhereUniqueWithoutDjango_content_typeInput | django_admin_logUpdateWithWhereUniqueWithoutDjango_content_typeInput[]
    updateMany?: django_admin_logUpdateManyWithWhereWithoutDjango_content_typeInput | django_admin_logUpdateManyWithWhereWithoutDjango_content_typeInput[]
    deleteMany?: django_admin_logScalarWhereInput | django_admin_logScalarWhereInput[]
  }

  export type auth_permissionUncheckedUpdateManyWithoutDjango_content_typeNestedInput = {
    create?: XOR<auth_permissionCreateWithoutDjango_content_typeInput, auth_permissionUncheckedCreateWithoutDjango_content_typeInput> | auth_permissionCreateWithoutDjango_content_typeInput[] | auth_permissionUncheckedCreateWithoutDjango_content_typeInput[]
    connectOrCreate?: auth_permissionCreateOrConnectWithoutDjango_content_typeInput | auth_permissionCreateOrConnectWithoutDjango_content_typeInput[]
    upsert?: auth_permissionUpsertWithWhereUniqueWithoutDjango_content_typeInput | auth_permissionUpsertWithWhereUniqueWithoutDjango_content_typeInput[]
    createMany?: auth_permissionCreateManyDjango_content_typeInputEnvelope
    set?: auth_permissionWhereUniqueInput | auth_permissionWhereUniqueInput[]
    disconnect?: auth_permissionWhereUniqueInput | auth_permissionWhereUniqueInput[]
    delete?: auth_permissionWhereUniqueInput | auth_permissionWhereUniqueInput[]
    connect?: auth_permissionWhereUniqueInput | auth_permissionWhereUniqueInput[]
    update?: auth_permissionUpdateWithWhereUniqueWithoutDjango_content_typeInput | auth_permissionUpdateWithWhereUniqueWithoutDjango_content_typeInput[]
    updateMany?: auth_permissionUpdateManyWithWhereWithoutDjango_content_typeInput | auth_permissionUpdateManyWithWhereWithoutDjango_content_typeInput[]
    deleteMany?: auth_permissionScalarWhereInput | auth_permissionScalarWhereInput[]
  }

  export type django_admin_logUncheckedUpdateManyWithoutDjango_content_typeNestedInput = {
    create?: XOR<django_admin_logCreateWithoutDjango_content_typeInput, django_admin_logUncheckedCreateWithoutDjango_content_typeInput> | django_admin_logCreateWithoutDjango_content_typeInput[] | django_admin_logUncheckedCreateWithoutDjango_content_typeInput[]
    connectOrCreate?: django_admin_logCreateOrConnectWithoutDjango_content_typeInput | django_admin_logCreateOrConnectWithoutDjango_content_typeInput[]
    upsert?: django_admin_logUpsertWithWhereUniqueWithoutDjango_content_typeInput | django_admin_logUpsertWithWhereUniqueWithoutDjango_content_typeInput[]
    createMany?: django_admin_logCreateManyDjango_content_typeInputEnvelope
    set?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    disconnect?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    delete?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    connect?: django_admin_logWhereUniqueInput | django_admin_logWhereUniqueInput[]
    update?: django_admin_logUpdateWithWhereUniqueWithoutDjango_content_typeInput | django_admin_logUpdateWithWhereUniqueWithoutDjango_content_typeInput[]
    updateMany?: django_admin_logUpdateManyWithWhereWithoutDjango_content_typeInput | django_admin_logUpdateManyWithWhereWithoutDjango_content_typeInput[]
    deleteMany?: django_admin_logScalarWhereInput | django_admin_logScalarWhereInput[]
  }

  export type ImageCreateNestedOneWithoutPost_app_post_imagesInput = {
    create?: XOR<ImageCreateWithoutPost_app_post_imagesInput, ImageUncheckedCreateWithoutPost_app_post_imagesInput>
    connectOrCreate?: ImageCreateOrConnectWithoutPost_app_post_imagesInput
    connect?: ImageWhereUniqueInput
  }

  export type PostCreateNestedOneWithoutPost_app_post_imagesInput = {
    create?: XOR<PostCreateWithoutPost_app_post_imagesInput, PostUncheckedCreateWithoutPost_app_post_imagesInput>
    connectOrCreate?: PostCreateOrConnectWithoutPost_app_post_imagesInput
    connect?: PostWhereUniqueInput
  }

  export type ImageUpdateOneRequiredWithoutPost_app_post_imagesNestedInput = {
    create?: XOR<ImageCreateWithoutPost_app_post_imagesInput, ImageUncheckedCreateWithoutPost_app_post_imagesInput>
    connectOrCreate?: ImageCreateOrConnectWithoutPost_app_post_imagesInput
    upsert?: ImageUpsertWithoutPost_app_post_imagesInput
    connect?: ImageWhereUniqueInput
    update?: XOR<XOR<ImageUpdateToOneWithWhereWithoutPost_app_post_imagesInput, ImageUpdateWithoutPost_app_post_imagesInput>, ImageUncheckedUpdateWithoutPost_app_post_imagesInput>
  }

  export type PostUpdateOneRequiredWithoutPost_app_post_imagesNestedInput = {
    create?: XOR<PostCreateWithoutPost_app_post_imagesInput, PostUncheckedCreateWithoutPost_app_post_imagesInput>
    connectOrCreate?: PostCreateOrConnectWithoutPost_app_post_imagesInput
    upsert?: PostUpsertWithoutPost_app_post_imagesInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutPost_app_post_imagesInput, PostUpdateWithoutPost_app_post_imagesInput>, PostUncheckedUpdateWithoutPost_app_post_imagesInput>
  }

  export type PostCreateNestedOneWithoutPost_app_post_tagsInput = {
    create?: XOR<PostCreateWithoutPost_app_post_tagsInput, PostUncheckedCreateWithoutPost_app_post_tagsInput>
    connectOrCreate?: PostCreateOrConnectWithoutPost_app_post_tagsInput
    connect?: PostWhereUniqueInput
  }

  export type TagsCreateNestedOneWithoutPost_app_post_tagsInput = {
    create?: XOR<TagsCreateWithoutPost_app_post_tagsInput, TagsUncheckedCreateWithoutPost_app_post_tagsInput>
    connectOrCreate?: TagsCreateOrConnectWithoutPost_app_post_tagsInput
    connect?: TagsWhereUniqueInput
  }

  export type PostUpdateOneRequiredWithoutPost_app_post_tagsNestedInput = {
    create?: XOR<PostCreateWithoutPost_app_post_tagsInput, PostUncheckedCreateWithoutPost_app_post_tagsInput>
    connectOrCreate?: PostCreateOrConnectWithoutPost_app_post_tagsInput
    upsert?: PostUpsertWithoutPost_app_post_tagsInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutPost_app_post_tagsInput, PostUpdateWithoutPost_app_post_tagsInput>, PostUncheckedUpdateWithoutPost_app_post_tagsInput>
  }

  export type TagsUpdateOneRequiredWithoutPost_app_post_tagsNestedInput = {
    create?: XOR<TagsCreateWithoutPost_app_post_tagsInput, TagsUncheckedCreateWithoutPost_app_post_tagsInput>
    connectOrCreate?: TagsCreateOrConnectWithoutPost_app_post_tagsInput
    upsert?: TagsUpsertWithoutPost_app_post_tagsInput
    connect?: TagsWhereUniqueInput
    update?: XOR<XOR<TagsUpdateToOneWithWhereWithoutPost_app_post_tagsInput, TagsUpdateWithoutPost_app_post_tagsInput>, TagsUncheckedUpdateWithoutPost_app_post_tagsInput>
  }

  export type ProfileCreateNestedOneWithoutAlbumInput = {
    create?: XOR<ProfileCreateWithoutAlbumInput, ProfileUncheckedCreateWithoutAlbumInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutAlbumInput
    connect?: ProfileWhereUniqueInput
  }

  export type TagsCreateNestedOneWithoutPost_app_albumInput = {
    create?: XOR<TagsCreateWithoutPost_app_albumInput, TagsUncheckedCreateWithoutPost_app_albumInput>
    connectOrCreate?: TagsCreateOrConnectWithoutPost_app_albumInput
    connect?: TagsWhereUniqueInput
  }

  export type post_app_album_imagesCreateNestedManyWithoutAlbumInput = {
    create?: XOR<post_app_album_imagesCreateWithoutAlbumInput, post_app_album_imagesUncheckedCreateWithoutAlbumInput> | post_app_album_imagesCreateWithoutAlbumInput[] | post_app_album_imagesUncheckedCreateWithoutAlbumInput[]
    connectOrCreate?: post_app_album_imagesCreateOrConnectWithoutAlbumInput | post_app_album_imagesCreateOrConnectWithoutAlbumInput[]
    createMany?: post_app_album_imagesCreateManyAlbumInputEnvelope
    connect?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
  }

  export type post_app_album_imagesUncheckedCreateNestedManyWithoutAlbumInput = {
    create?: XOR<post_app_album_imagesCreateWithoutAlbumInput, post_app_album_imagesUncheckedCreateWithoutAlbumInput> | post_app_album_imagesCreateWithoutAlbumInput[] | post_app_album_imagesUncheckedCreateWithoutAlbumInput[]
    connectOrCreate?: post_app_album_imagesCreateOrConnectWithoutAlbumInput | post_app_album_imagesCreateOrConnectWithoutAlbumInput[]
    createMany?: post_app_album_imagesCreateManyAlbumInputEnvelope
    connect?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
  }

  export type ProfileUpdateOneRequiredWithoutAlbumNestedInput = {
    create?: XOR<ProfileCreateWithoutAlbumInput, ProfileUncheckedCreateWithoutAlbumInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutAlbumInput
    upsert?: ProfileUpsertWithoutAlbumInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutAlbumInput, ProfileUpdateWithoutAlbumInput>, ProfileUncheckedUpdateWithoutAlbumInput>
  }

  export type TagsUpdateOneRequiredWithoutPost_app_albumNestedInput = {
    create?: XOR<TagsCreateWithoutPost_app_albumInput, TagsUncheckedCreateWithoutPost_app_albumInput>
    connectOrCreate?: TagsCreateOrConnectWithoutPost_app_albumInput
    upsert?: TagsUpsertWithoutPost_app_albumInput
    connect?: TagsWhereUniqueInput
    update?: XOR<XOR<TagsUpdateToOneWithWhereWithoutPost_app_albumInput, TagsUpdateWithoutPost_app_albumInput>, TagsUncheckedUpdateWithoutPost_app_albumInput>
  }

  export type post_app_album_imagesUpdateManyWithoutAlbumNestedInput = {
    create?: XOR<post_app_album_imagesCreateWithoutAlbumInput, post_app_album_imagesUncheckedCreateWithoutAlbumInput> | post_app_album_imagesCreateWithoutAlbumInput[] | post_app_album_imagesUncheckedCreateWithoutAlbumInput[]
    connectOrCreate?: post_app_album_imagesCreateOrConnectWithoutAlbumInput | post_app_album_imagesCreateOrConnectWithoutAlbumInput[]
    upsert?: post_app_album_imagesUpsertWithWhereUniqueWithoutAlbumInput | post_app_album_imagesUpsertWithWhereUniqueWithoutAlbumInput[]
    createMany?: post_app_album_imagesCreateManyAlbumInputEnvelope
    set?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    disconnect?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    delete?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    connect?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    update?: post_app_album_imagesUpdateWithWhereUniqueWithoutAlbumInput | post_app_album_imagesUpdateWithWhereUniqueWithoutAlbumInput[]
    updateMany?: post_app_album_imagesUpdateManyWithWhereWithoutAlbumInput | post_app_album_imagesUpdateManyWithWhereWithoutAlbumInput[]
    deleteMany?: post_app_album_imagesScalarWhereInput | post_app_album_imagesScalarWhereInput[]
  }

  export type post_app_album_imagesUncheckedUpdateManyWithoutAlbumNestedInput = {
    create?: XOR<post_app_album_imagesCreateWithoutAlbumInput, post_app_album_imagesUncheckedCreateWithoutAlbumInput> | post_app_album_imagesCreateWithoutAlbumInput[] | post_app_album_imagesUncheckedCreateWithoutAlbumInput[]
    connectOrCreate?: post_app_album_imagesCreateOrConnectWithoutAlbumInput | post_app_album_imagesCreateOrConnectWithoutAlbumInput[]
    upsert?: post_app_album_imagesUpsertWithWhereUniqueWithoutAlbumInput | post_app_album_imagesUpsertWithWhereUniqueWithoutAlbumInput[]
    createMany?: post_app_album_imagesCreateManyAlbumInputEnvelope
    set?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    disconnect?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    delete?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    connect?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    update?: post_app_album_imagesUpdateWithWhereUniqueWithoutAlbumInput | post_app_album_imagesUpdateWithWhereUniqueWithoutAlbumInput[]
    updateMany?: post_app_album_imagesUpdateManyWithWhereWithoutAlbumInput | post_app_album_imagesUpdateManyWithWhereWithoutAlbumInput[]
    deleteMany?: post_app_album_imagesScalarWhereInput | post_app_album_imagesScalarWhereInput[]
  }

  export type AlbumCreateNestedOneWithoutImagesInput = {
    create?: XOR<AlbumCreateWithoutImagesInput, AlbumUncheckedCreateWithoutImagesInput>
    connectOrCreate?: AlbumCreateOrConnectWithoutImagesInput
    connect?: AlbumWhereUniqueInput
  }

  export type ImageCreateNestedOneWithoutAlbum_imagesInput = {
    create?: XOR<ImageCreateWithoutAlbum_imagesInput, ImageUncheckedCreateWithoutAlbum_imagesInput>
    connectOrCreate?: ImageCreateOrConnectWithoutAlbum_imagesInput
    connect?: ImageWhereUniqueInput
  }

  export type AlbumUpdateOneRequiredWithoutImagesNestedInput = {
    create?: XOR<AlbumCreateWithoutImagesInput, AlbumUncheckedCreateWithoutImagesInput>
    connectOrCreate?: AlbumCreateOrConnectWithoutImagesInput
    upsert?: AlbumUpsertWithoutImagesInput
    connect?: AlbumWhereUniqueInput
    update?: XOR<XOR<AlbumUpdateToOneWithWhereWithoutImagesInput, AlbumUpdateWithoutImagesInput>, AlbumUncheckedUpdateWithoutImagesInput>
  }

  export type ImageUpdateOneRequiredWithoutAlbum_imagesNestedInput = {
    create?: XOR<ImageCreateWithoutAlbum_imagesInput, ImageUncheckedCreateWithoutAlbum_imagesInput>
    connectOrCreate?: ImageCreateOrConnectWithoutAlbum_imagesInput
    upsert?: ImageUpsertWithoutAlbum_imagesInput
    connect?: ImageWhereUniqueInput
    update?: XOR<XOR<ImageUpdateToOneWithWhereWithoutAlbum_imagesInput, ImageUpdateWithoutAlbum_imagesInput>, ImageUncheckedUpdateWithoutAlbum_imagesInput>
  }

  export type ProfileCreateNestedOneWithoutAdministered_groupsInput = {
    create?: XOR<ProfileCreateWithoutAdministered_groupsInput, ProfileUncheckedCreateWithoutAdministered_groupsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutAdministered_groupsInput
    connect?: ProfileWhereUniqueInput
  }

  export type chat_app_chatgroup_membersCreateNestedManyWithoutChat_app_chatgroupInput = {
    create?: XOR<chat_app_chatgroup_membersCreateWithoutChat_app_chatgroupInput, chat_app_chatgroup_membersUncheckedCreateWithoutChat_app_chatgroupInput> | chat_app_chatgroup_membersCreateWithoutChat_app_chatgroupInput[] | chat_app_chatgroup_membersUncheckedCreateWithoutChat_app_chatgroupInput[]
    connectOrCreate?: chat_app_chatgroup_membersCreateOrConnectWithoutChat_app_chatgroupInput | chat_app_chatgroup_membersCreateOrConnectWithoutChat_app_chatgroupInput[]
    createMany?: chat_app_chatgroup_membersCreateManyChat_app_chatgroupInputEnvelope
    connect?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
  }

  export type ChatMessageCreateNestedManyWithoutChat_app_chatgroupInput = {
    create?: XOR<ChatMessageCreateWithoutChat_app_chatgroupInput, ChatMessageUncheckedCreateWithoutChat_app_chatgroupInput> | ChatMessageCreateWithoutChat_app_chatgroupInput[] | ChatMessageUncheckedCreateWithoutChat_app_chatgroupInput[]
    connectOrCreate?: ChatMessageCreateOrConnectWithoutChat_app_chatgroupInput | ChatMessageCreateOrConnectWithoutChat_app_chatgroupInput[]
    createMany?: ChatMessageCreateManyChat_app_chatgroupInputEnvelope
    connect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
  }

  export type chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutChat_app_chatgroupInput = {
    create?: XOR<chat_app_chatgroup_membersCreateWithoutChat_app_chatgroupInput, chat_app_chatgroup_membersUncheckedCreateWithoutChat_app_chatgroupInput> | chat_app_chatgroup_membersCreateWithoutChat_app_chatgroupInput[] | chat_app_chatgroup_membersUncheckedCreateWithoutChat_app_chatgroupInput[]
    connectOrCreate?: chat_app_chatgroup_membersCreateOrConnectWithoutChat_app_chatgroupInput | chat_app_chatgroup_membersCreateOrConnectWithoutChat_app_chatgroupInput[]
    createMany?: chat_app_chatgroup_membersCreateManyChat_app_chatgroupInputEnvelope
    connect?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
  }

  export type ChatMessageUncheckedCreateNestedManyWithoutChat_app_chatgroupInput = {
    create?: XOR<ChatMessageCreateWithoutChat_app_chatgroupInput, ChatMessageUncheckedCreateWithoutChat_app_chatgroupInput> | ChatMessageCreateWithoutChat_app_chatgroupInput[] | ChatMessageUncheckedCreateWithoutChat_app_chatgroupInput[]
    connectOrCreate?: ChatMessageCreateOrConnectWithoutChat_app_chatgroupInput | ChatMessageCreateOrConnectWithoutChat_app_chatgroupInput[]
    createMany?: ChatMessageCreateManyChat_app_chatgroupInputEnvelope
    connect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
  }

  export type ProfileUpdateOneRequiredWithoutAdministered_groupsNestedInput = {
    create?: XOR<ProfileCreateWithoutAdministered_groupsInput, ProfileUncheckedCreateWithoutAdministered_groupsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutAdministered_groupsInput
    upsert?: ProfileUpsertWithoutAdministered_groupsInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutAdministered_groupsInput, ProfileUpdateWithoutAdministered_groupsInput>, ProfileUncheckedUpdateWithoutAdministered_groupsInput>
  }

  export type chat_app_chatgroup_membersUpdateManyWithoutChat_app_chatgroupNestedInput = {
    create?: XOR<chat_app_chatgroup_membersCreateWithoutChat_app_chatgroupInput, chat_app_chatgroup_membersUncheckedCreateWithoutChat_app_chatgroupInput> | chat_app_chatgroup_membersCreateWithoutChat_app_chatgroupInput[] | chat_app_chatgroup_membersUncheckedCreateWithoutChat_app_chatgroupInput[]
    connectOrCreate?: chat_app_chatgroup_membersCreateOrConnectWithoutChat_app_chatgroupInput | chat_app_chatgroup_membersCreateOrConnectWithoutChat_app_chatgroupInput[]
    upsert?: chat_app_chatgroup_membersUpsertWithWhereUniqueWithoutChat_app_chatgroupInput | chat_app_chatgroup_membersUpsertWithWhereUniqueWithoutChat_app_chatgroupInput[]
    createMany?: chat_app_chatgroup_membersCreateManyChat_app_chatgroupInputEnvelope
    set?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    disconnect?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    delete?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    connect?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    update?: chat_app_chatgroup_membersUpdateWithWhereUniqueWithoutChat_app_chatgroupInput | chat_app_chatgroup_membersUpdateWithWhereUniqueWithoutChat_app_chatgroupInput[]
    updateMany?: chat_app_chatgroup_membersUpdateManyWithWhereWithoutChat_app_chatgroupInput | chat_app_chatgroup_membersUpdateManyWithWhereWithoutChat_app_chatgroupInput[]
    deleteMany?: chat_app_chatgroup_membersScalarWhereInput | chat_app_chatgroup_membersScalarWhereInput[]
  }

  export type ChatMessageUpdateManyWithoutChat_app_chatgroupNestedInput = {
    create?: XOR<ChatMessageCreateWithoutChat_app_chatgroupInput, ChatMessageUncheckedCreateWithoutChat_app_chatgroupInput> | ChatMessageCreateWithoutChat_app_chatgroupInput[] | ChatMessageUncheckedCreateWithoutChat_app_chatgroupInput[]
    connectOrCreate?: ChatMessageCreateOrConnectWithoutChat_app_chatgroupInput | ChatMessageCreateOrConnectWithoutChat_app_chatgroupInput[]
    upsert?: ChatMessageUpsertWithWhereUniqueWithoutChat_app_chatgroupInput | ChatMessageUpsertWithWhereUniqueWithoutChat_app_chatgroupInput[]
    createMany?: ChatMessageCreateManyChat_app_chatgroupInputEnvelope
    set?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    disconnect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    delete?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    connect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    update?: ChatMessageUpdateWithWhereUniqueWithoutChat_app_chatgroupInput | ChatMessageUpdateWithWhereUniqueWithoutChat_app_chatgroupInput[]
    updateMany?: ChatMessageUpdateManyWithWhereWithoutChat_app_chatgroupInput | ChatMessageUpdateManyWithWhereWithoutChat_app_chatgroupInput[]
    deleteMany?: ChatMessageScalarWhereInput | ChatMessageScalarWhereInput[]
  }

  export type chat_app_chatgroup_membersUncheckedUpdateManyWithoutChat_app_chatgroupNestedInput = {
    create?: XOR<chat_app_chatgroup_membersCreateWithoutChat_app_chatgroupInput, chat_app_chatgroup_membersUncheckedCreateWithoutChat_app_chatgroupInput> | chat_app_chatgroup_membersCreateWithoutChat_app_chatgroupInput[] | chat_app_chatgroup_membersUncheckedCreateWithoutChat_app_chatgroupInput[]
    connectOrCreate?: chat_app_chatgroup_membersCreateOrConnectWithoutChat_app_chatgroupInput | chat_app_chatgroup_membersCreateOrConnectWithoutChat_app_chatgroupInput[]
    upsert?: chat_app_chatgroup_membersUpsertWithWhereUniqueWithoutChat_app_chatgroupInput | chat_app_chatgroup_membersUpsertWithWhereUniqueWithoutChat_app_chatgroupInput[]
    createMany?: chat_app_chatgroup_membersCreateManyChat_app_chatgroupInputEnvelope
    set?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    disconnect?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    delete?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    connect?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    update?: chat_app_chatgroup_membersUpdateWithWhereUniqueWithoutChat_app_chatgroupInput | chat_app_chatgroup_membersUpdateWithWhereUniqueWithoutChat_app_chatgroupInput[]
    updateMany?: chat_app_chatgroup_membersUpdateManyWithWhereWithoutChat_app_chatgroupInput | chat_app_chatgroup_membersUpdateManyWithWhereWithoutChat_app_chatgroupInput[]
    deleteMany?: chat_app_chatgroup_membersScalarWhereInput | chat_app_chatgroup_membersScalarWhereInput[]
  }

  export type ChatMessageUncheckedUpdateManyWithoutChat_app_chatgroupNestedInput = {
    create?: XOR<ChatMessageCreateWithoutChat_app_chatgroupInput, ChatMessageUncheckedCreateWithoutChat_app_chatgroupInput> | ChatMessageCreateWithoutChat_app_chatgroupInput[] | ChatMessageUncheckedCreateWithoutChat_app_chatgroupInput[]
    connectOrCreate?: ChatMessageCreateOrConnectWithoutChat_app_chatgroupInput | ChatMessageCreateOrConnectWithoutChat_app_chatgroupInput[]
    upsert?: ChatMessageUpsertWithWhereUniqueWithoutChat_app_chatgroupInput | ChatMessageUpsertWithWhereUniqueWithoutChat_app_chatgroupInput[]
    createMany?: ChatMessageCreateManyChat_app_chatgroupInputEnvelope
    set?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    disconnect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    delete?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    connect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    update?: ChatMessageUpdateWithWhereUniqueWithoutChat_app_chatgroupInput | ChatMessageUpdateWithWhereUniqueWithoutChat_app_chatgroupInput[]
    updateMany?: ChatMessageUpdateManyWithWhereWithoutChat_app_chatgroupInput | ChatMessageUpdateManyWithWhereWithoutChat_app_chatgroupInput[]
    deleteMany?: ChatMessageScalarWhereInput | ChatMessageScalarWhereInput[]
  }

  export type ProfileCreateNestedOneWithoutChat_messagesInput = {
    create?: XOR<ProfileCreateWithoutChat_messagesInput, ProfileUncheckedCreateWithoutChat_messagesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutChat_messagesInput
    connect?: ProfileWhereUniqueInput
  }

  export type ChatGroupCreateNestedOneWithoutChat_app_chatmessageInput = {
    create?: XOR<ChatGroupCreateWithoutChat_app_chatmessageInput, ChatGroupUncheckedCreateWithoutChat_app_chatmessageInput>
    connectOrCreate?: ChatGroupCreateOrConnectWithoutChat_app_chatmessageInput
    connect?: ChatGroupWhereUniqueInput
  }

  export type ProfileUpdateOneRequiredWithoutChat_messagesNestedInput = {
    create?: XOR<ProfileCreateWithoutChat_messagesInput, ProfileUncheckedCreateWithoutChat_messagesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutChat_messagesInput
    upsert?: ProfileUpsertWithoutChat_messagesInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutChat_messagesInput, ProfileUpdateWithoutChat_messagesInput>, ProfileUncheckedUpdateWithoutChat_messagesInput>
  }

  export type ChatGroupUpdateOneRequiredWithoutChat_app_chatmessageNestedInput = {
    create?: XOR<ChatGroupCreateWithoutChat_app_chatmessageInput, ChatGroupUncheckedCreateWithoutChat_app_chatmessageInput>
    connectOrCreate?: ChatGroupCreateOrConnectWithoutChat_app_chatmessageInput
    upsert?: ChatGroupUpsertWithoutChat_app_chatmessageInput
    connect?: ChatGroupWhereUniqueInput
    update?: XOR<XOR<ChatGroupUpdateToOneWithWhereWithoutChat_app_chatmessageInput, ChatGroupUpdateWithoutChat_app_chatmessageInput>, ChatGroupUncheckedUpdateWithoutChat_app_chatmessageInput>
  }

  export type ChatGroupCreateNestedOneWithoutChat_app_chatgroup_membersInput = {
    create?: XOR<ChatGroupCreateWithoutChat_app_chatgroup_membersInput, ChatGroupUncheckedCreateWithoutChat_app_chatgroup_membersInput>
    connectOrCreate?: ChatGroupCreateOrConnectWithoutChat_app_chatgroup_membersInput
    connect?: ChatGroupWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutChat_group_membersInput = {
    create?: XOR<ProfileCreateWithoutChat_group_membersInput, ProfileUncheckedCreateWithoutChat_group_membersInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutChat_group_membersInput
    connect?: ProfileWhereUniqueInput
  }

  export type ChatGroupUpdateOneRequiredWithoutChat_app_chatgroup_membersNestedInput = {
    create?: XOR<ChatGroupCreateWithoutChat_app_chatgroup_membersInput, ChatGroupUncheckedCreateWithoutChat_app_chatgroup_membersInput>
    connectOrCreate?: ChatGroupCreateOrConnectWithoutChat_app_chatgroup_membersInput
    upsert?: ChatGroupUpsertWithoutChat_app_chatgroup_membersInput
    connect?: ChatGroupWhereUniqueInput
    update?: XOR<XOR<ChatGroupUpdateToOneWithWhereWithoutChat_app_chatgroup_membersInput, ChatGroupUpdateWithoutChat_app_chatgroup_membersInput>, ChatGroupUncheckedUpdateWithoutChat_app_chatgroup_membersInput>
  }

  export type ProfileUpdateOneRequiredWithoutChat_group_membersNestedInput = {
    create?: XOR<ProfileCreateWithoutChat_group_membersInput, ProfileUncheckedCreateWithoutChat_group_membersInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutChat_group_membersInput
    upsert?: ProfileUpsertWithoutChat_group_membersInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutChat_group_membersInput, ProfileUpdateWithoutChat_group_membersInput>, ProfileUncheckedUpdateWithoutChat_group_membersInput>
  }

  export type ProfileCreateNestedOneWithoutFriendship_fromInput = {
    create?: XOR<ProfileCreateWithoutFriendship_fromInput, ProfileUncheckedCreateWithoutFriendship_fromInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutFriendship_fromInput
    connect?: ProfileWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutFriendship_toInput = {
    create?: XOR<ProfileCreateWithoutFriendship_toInput, ProfileUncheckedCreateWithoutFriendship_toInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutFriendship_toInput
    connect?: ProfileWhereUniqueInput
  }

  export type ProfileUpdateOneRequiredWithoutFriendship_fromNestedInput = {
    create?: XOR<ProfileCreateWithoutFriendship_fromInput, ProfileUncheckedCreateWithoutFriendship_fromInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutFriendship_fromInput
    upsert?: ProfileUpsertWithoutFriendship_fromInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutFriendship_fromInput, ProfileUpdateWithoutFriendship_fromInput>, ProfileUncheckedUpdateWithoutFriendship_fromInput>
  }

  export type ProfileUpdateOneRequiredWithoutFriendship_toNestedInput = {
    create?: XOR<ProfileCreateWithoutFriendship_toInput, ProfileUncheckedCreateWithoutFriendship_toInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutFriendship_toInput
    upsert?: ProfileUpsertWithoutFriendship_toInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutFriendship_toInput, ProfileUpdateWithoutFriendship_toInput>, ProfileUncheckedUpdateWithoutFriendship_toInput>
  }

  export type post_app_album_imagesCreateNestedManyWithoutImageInput = {
    create?: XOR<post_app_album_imagesCreateWithoutImageInput, post_app_album_imagesUncheckedCreateWithoutImageInput> | post_app_album_imagesCreateWithoutImageInput[] | post_app_album_imagesUncheckedCreateWithoutImageInput[]
    connectOrCreate?: post_app_album_imagesCreateOrConnectWithoutImageInput | post_app_album_imagesCreateOrConnectWithoutImageInput[]
    createMany?: post_app_album_imagesCreateManyImageInputEnvelope
    connect?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
  }

  export type post_app_post_imagesCreateNestedManyWithoutPost_app_imageInput = {
    create?: XOR<post_app_post_imagesCreateWithoutPost_app_imageInput, post_app_post_imagesUncheckedCreateWithoutPost_app_imageInput> | post_app_post_imagesCreateWithoutPost_app_imageInput[] | post_app_post_imagesUncheckedCreateWithoutPost_app_imageInput[]
    connectOrCreate?: post_app_post_imagesCreateOrConnectWithoutPost_app_imageInput | post_app_post_imagesCreateOrConnectWithoutPost_app_imageInput[]
    createMany?: post_app_post_imagesCreateManyPost_app_imageInputEnvelope
    connect?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
  }

  export type post_app_album_imagesUncheckedCreateNestedManyWithoutImageInput = {
    create?: XOR<post_app_album_imagesCreateWithoutImageInput, post_app_album_imagesUncheckedCreateWithoutImageInput> | post_app_album_imagesCreateWithoutImageInput[] | post_app_album_imagesUncheckedCreateWithoutImageInput[]
    connectOrCreate?: post_app_album_imagesCreateOrConnectWithoutImageInput | post_app_album_imagesCreateOrConnectWithoutImageInput[]
    createMany?: post_app_album_imagesCreateManyImageInputEnvelope
    connect?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
  }

  export type post_app_post_imagesUncheckedCreateNestedManyWithoutPost_app_imageInput = {
    create?: XOR<post_app_post_imagesCreateWithoutPost_app_imageInput, post_app_post_imagesUncheckedCreateWithoutPost_app_imageInput> | post_app_post_imagesCreateWithoutPost_app_imageInput[] | post_app_post_imagesUncheckedCreateWithoutPost_app_imageInput[]
    connectOrCreate?: post_app_post_imagesCreateOrConnectWithoutPost_app_imageInput | post_app_post_imagesCreateOrConnectWithoutPost_app_imageInput[]
    createMany?: post_app_post_imagesCreateManyPost_app_imageInputEnvelope
    connect?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
  }

  export type post_app_album_imagesUpdateManyWithoutImageNestedInput = {
    create?: XOR<post_app_album_imagesCreateWithoutImageInput, post_app_album_imagesUncheckedCreateWithoutImageInput> | post_app_album_imagesCreateWithoutImageInput[] | post_app_album_imagesUncheckedCreateWithoutImageInput[]
    connectOrCreate?: post_app_album_imagesCreateOrConnectWithoutImageInput | post_app_album_imagesCreateOrConnectWithoutImageInput[]
    upsert?: post_app_album_imagesUpsertWithWhereUniqueWithoutImageInput | post_app_album_imagesUpsertWithWhereUniqueWithoutImageInput[]
    createMany?: post_app_album_imagesCreateManyImageInputEnvelope
    set?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    disconnect?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    delete?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    connect?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    update?: post_app_album_imagesUpdateWithWhereUniqueWithoutImageInput | post_app_album_imagesUpdateWithWhereUniqueWithoutImageInput[]
    updateMany?: post_app_album_imagesUpdateManyWithWhereWithoutImageInput | post_app_album_imagesUpdateManyWithWhereWithoutImageInput[]
    deleteMany?: post_app_album_imagesScalarWhereInput | post_app_album_imagesScalarWhereInput[]
  }

  export type post_app_post_imagesUpdateManyWithoutPost_app_imageNestedInput = {
    create?: XOR<post_app_post_imagesCreateWithoutPost_app_imageInput, post_app_post_imagesUncheckedCreateWithoutPost_app_imageInput> | post_app_post_imagesCreateWithoutPost_app_imageInput[] | post_app_post_imagesUncheckedCreateWithoutPost_app_imageInput[]
    connectOrCreate?: post_app_post_imagesCreateOrConnectWithoutPost_app_imageInput | post_app_post_imagesCreateOrConnectWithoutPost_app_imageInput[]
    upsert?: post_app_post_imagesUpsertWithWhereUniqueWithoutPost_app_imageInput | post_app_post_imagesUpsertWithWhereUniqueWithoutPost_app_imageInput[]
    createMany?: post_app_post_imagesCreateManyPost_app_imageInputEnvelope
    set?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    disconnect?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    delete?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    connect?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    update?: post_app_post_imagesUpdateWithWhereUniqueWithoutPost_app_imageInput | post_app_post_imagesUpdateWithWhereUniqueWithoutPost_app_imageInput[]
    updateMany?: post_app_post_imagesUpdateManyWithWhereWithoutPost_app_imageInput | post_app_post_imagesUpdateManyWithWhereWithoutPost_app_imageInput[]
    deleteMany?: post_app_post_imagesScalarWhereInput | post_app_post_imagesScalarWhereInput[]
  }

  export type post_app_album_imagesUncheckedUpdateManyWithoutImageNestedInput = {
    create?: XOR<post_app_album_imagesCreateWithoutImageInput, post_app_album_imagesUncheckedCreateWithoutImageInput> | post_app_album_imagesCreateWithoutImageInput[] | post_app_album_imagesUncheckedCreateWithoutImageInput[]
    connectOrCreate?: post_app_album_imagesCreateOrConnectWithoutImageInput | post_app_album_imagesCreateOrConnectWithoutImageInput[]
    upsert?: post_app_album_imagesUpsertWithWhereUniqueWithoutImageInput | post_app_album_imagesUpsertWithWhereUniqueWithoutImageInput[]
    createMany?: post_app_album_imagesCreateManyImageInputEnvelope
    set?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    disconnect?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    delete?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    connect?: post_app_album_imagesWhereUniqueInput | post_app_album_imagesWhereUniqueInput[]
    update?: post_app_album_imagesUpdateWithWhereUniqueWithoutImageInput | post_app_album_imagesUpdateWithWhereUniqueWithoutImageInput[]
    updateMany?: post_app_album_imagesUpdateManyWithWhereWithoutImageInput | post_app_album_imagesUpdateManyWithWhereWithoutImageInput[]
    deleteMany?: post_app_album_imagesScalarWhereInput | post_app_album_imagesScalarWhereInput[]
  }

  export type post_app_post_imagesUncheckedUpdateManyWithoutPost_app_imageNestedInput = {
    create?: XOR<post_app_post_imagesCreateWithoutPost_app_imageInput, post_app_post_imagesUncheckedCreateWithoutPost_app_imageInput> | post_app_post_imagesCreateWithoutPost_app_imageInput[] | post_app_post_imagesUncheckedCreateWithoutPost_app_imageInput[]
    connectOrCreate?: post_app_post_imagesCreateOrConnectWithoutPost_app_imageInput | post_app_post_imagesCreateOrConnectWithoutPost_app_imageInput[]
    upsert?: post_app_post_imagesUpsertWithWhereUniqueWithoutPost_app_imageInput | post_app_post_imagesUpsertWithWhereUniqueWithoutPost_app_imageInput[]
    createMany?: post_app_post_imagesCreateManyPost_app_imageInputEnvelope
    set?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    disconnect?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    delete?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    connect?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    update?: post_app_post_imagesUpdateWithWhereUniqueWithoutPost_app_imageInput | post_app_post_imagesUpdateWithWhereUniqueWithoutPost_app_imageInput[]
    updateMany?: post_app_post_imagesUpdateManyWithWhereWithoutPost_app_imageInput | post_app_post_imagesUpdateManyWithWhereWithoutPost_app_imageInput[]
    deleteMany?: post_app_post_imagesScalarWhereInput | post_app_post_imagesScalarWhereInput[]
  }

  export type LinkCreateNestedManyWithoutPost_app_postInput = {
    create?: XOR<LinkCreateWithoutPost_app_postInput, LinkUncheckedCreateWithoutPost_app_postInput> | LinkCreateWithoutPost_app_postInput[] | LinkUncheckedCreateWithoutPost_app_postInput[]
    connectOrCreate?: LinkCreateOrConnectWithoutPost_app_postInput | LinkCreateOrConnectWithoutPost_app_postInput[]
    createMany?: LinkCreateManyPost_app_postInputEnvelope
    connect?: LinkWhereUniqueInput | LinkWhereUniqueInput[]
  }

  export type ProfileCreateNestedOneWithoutPostInput = {
    create?: XOR<ProfileCreateWithoutPostInput, ProfileUncheckedCreateWithoutPostInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutPostInput
    connect?: ProfileWhereUniqueInput
  }

  export type post_app_post_imagesCreateNestedManyWithoutPost_app_postInput = {
    create?: XOR<post_app_post_imagesCreateWithoutPost_app_postInput, post_app_post_imagesUncheckedCreateWithoutPost_app_postInput> | post_app_post_imagesCreateWithoutPost_app_postInput[] | post_app_post_imagesUncheckedCreateWithoutPost_app_postInput[]
    connectOrCreate?: post_app_post_imagesCreateOrConnectWithoutPost_app_postInput | post_app_post_imagesCreateOrConnectWithoutPost_app_postInput[]
    createMany?: post_app_post_imagesCreateManyPost_app_postInputEnvelope
    connect?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
  }

  export type post_app_post_likesCreateNestedManyWithoutPostInput = {
    create?: XOR<post_app_post_likesCreateWithoutPostInput, post_app_post_likesUncheckedCreateWithoutPostInput> | post_app_post_likesCreateWithoutPostInput[] | post_app_post_likesUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_app_post_likesCreateOrConnectWithoutPostInput | post_app_post_likesCreateOrConnectWithoutPostInput[]
    createMany?: post_app_post_likesCreateManyPostInputEnvelope
    connect?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
  }

  export type post_app_post_tagsCreateNestedManyWithoutPost_app_postInput = {
    create?: XOR<post_app_post_tagsCreateWithoutPost_app_postInput, post_app_post_tagsUncheckedCreateWithoutPost_app_postInput> | post_app_post_tagsCreateWithoutPost_app_postInput[] | post_app_post_tagsUncheckedCreateWithoutPost_app_postInput[]
    connectOrCreate?: post_app_post_tagsCreateOrConnectWithoutPost_app_postInput | post_app_post_tagsCreateOrConnectWithoutPost_app_postInput[]
    createMany?: post_app_post_tagsCreateManyPost_app_postInputEnvelope
    connect?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
  }

  export type post_app_post_viewsCreateNestedManyWithoutPostInput = {
    create?: XOR<post_app_post_viewsCreateWithoutPostInput, post_app_post_viewsUncheckedCreateWithoutPostInput> | post_app_post_viewsCreateWithoutPostInput[] | post_app_post_viewsUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_app_post_viewsCreateOrConnectWithoutPostInput | post_app_post_viewsCreateOrConnectWithoutPostInput[]
    createMany?: post_app_post_viewsCreateManyPostInputEnvelope
    connect?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
  }

  export type LinkUncheckedCreateNestedManyWithoutPost_app_postInput = {
    create?: XOR<LinkCreateWithoutPost_app_postInput, LinkUncheckedCreateWithoutPost_app_postInput> | LinkCreateWithoutPost_app_postInput[] | LinkUncheckedCreateWithoutPost_app_postInput[]
    connectOrCreate?: LinkCreateOrConnectWithoutPost_app_postInput | LinkCreateOrConnectWithoutPost_app_postInput[]
    createMany?: LinkCreateManyPost_app_postInputEnvelope
    connect?: LinkWhereUniqueInput | LinkWhereUniqueInput[]
  }

  export type post_app_post_imagesUncheckedCreateNestedManyWithoutPost_app_postInput = {
    create?: XOR<post_app_post_imagesCreateWithoutPost_app_postInput, post_app_post_imagesUncheckedCreateWithoutPost_app_postInput> | post_app_post_imagesCreateWithoutPost_app_postInput[] | post_app_post_imagesUncheckedCreateWithoutPost_app_postInput[]
    connectOrCreate?: post_app_post_imagesCreateOrConnectWithoutPost_app_postInput | post_app_post_imagesCreateOrConnectWithoutPost_app_postInput[]
    createMany?: post_app_post_imagesCreateManyPost_app_postInputEnvelope
    connect?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
  }

  export type post_app_post_likesUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<post_app_post_likesCreateWithoutPostInput, post_app_post_likesUncheckedCreateWithoutPostInput> | post_app_post_likesCreateWithoutPostInput[] | post_app_post_likesUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_app_post_likesCreateOrConnectWithoutPostInput | post_app_post_likesCreateOrConnectWithoutPostInput[]
    createMany?: post_app_post_likesCreateManyPostInputEnvelope
    connect?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
  }

  export type post_app_post_tagsUncheckedCreateNestedManyWithoutPost_app_postInput = {
    create?: XOR<post_app_post_tagsCreateWithoutPost_app_postInput, post_app_post_tagsUncheckedCreateWithoutPost_app_postInput> | post_app_post_tagsCreateWithoutPost_app_postInput[] | post_app_post_tagsUncheckedCreateWithoutPost_app_postInput[]
    connectOrCreate?: post_app_post_tagsCreateOrConnectWithoutPost_app_postInput | post_app_post_tagsCreateOrConnectWithoutPost_app_postInput[]
    createMany?: post_app_post_tagsCreateManyPost_app_postInputEnvelope
    connect?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
  }

  export type post_app_post_viewsUncheckedCreateNestedManyWithoutPostInput = {
    create?: XOR<post_app_post_viewsCreateWithoutPostInput, post_app_post_viewsUncheckedCreateWithoutPostInput> | post_app_post_viewsCreateWithoutPostInput[] | post_app_post_viewsUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_app_post_viewsCreateOrConnectWithoutPostInput | post_app_post_viewsCreateOrConnectWithoutPostInput[]
    createMany?: post_app_post_viewsCreateManyPostInputEnvelope
    connect?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
  }

  export type LinkUpdateManyWithoutPost_app_postNestedInput = {
    create?: XOR<LinkCreateWithoutPost_app_postInput, LinkUncheckedCreateWithoutPost_app_postInput> | LinkCreateWithoutPost_app_postInput[] | LinkUncheckedCreateWithoutPost_app_postInput[]
    connectOrCreate?: LinkCreateOrConnectWithoutPost_app_postInput | LinkCreateOrConnectWithoutPost_app_postInput[]
    upsert?: LinkUpsertWithWhereUniqueWithoutPost_app_postInput | LinkUpsertWithWhereUniqueWithoutPost_app_postInput[]
    createMany?: LinkCreateManyPost_app_postInputEnvelope
    set?: LinkWhereUniqueInput | LinkWhereUniqueInput[]
    disconnect?: LinkWhereUniqueInput | LinkWhereUniqueInput[]
    delete?: LinkWhereUniqueInput | LinkWhereUniqueInput[]
    connect?: LinkWhereUniqueInput | LinkWhereUniqueInput[]
    update?: LinkUpdateWithWhereUniqueWithoutPost_app_postInput | LinkUpdateWithWhereUniqueWithoutPost_app_postInput[]
    updateMany?: LinkUpdateManyWithWhereWithoutPost_app_postInput | LinkUpdateManyWithWhereWithoutPost_app_postInput[]
    deleteMany?: LinkScalarWhereInput | LinkScalarWhereInput[]
  }

  export type ProfileUpdateOneRequiredWithoutPostNestedInput = {
    create?: XOR<ProfileCreateWithoutPostInput, ProfileUncheckedCreateWithoutPostInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutPostInput
    upsert?: ProfileUpsertWithoutPostInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutPostInput, ProfileUpdateWithoutPostInput>, ProfileUncheckedUpdateWithoutPostInput>
  }

  export type post_app_post_imagesUpdateManyWithoutPost_app_postNestedInput = {
    create?: XOR<post_app_post_imagesCreateWithoutPost_app_postInput, post_app_post_imagesUncheckedCreateWithoutPost_app_postInput> | post_app_post_imagesCreateWithoutPost_app_postInput[] | post_app_post_imagesUncheckedCreateWithoutPost_app_postInput[]
    connectOrCreate?: post_app_post_imagesCreateOrConnectWithoutPost_app_postInput | post_app_post_imagesCreateOrConnectWithoutPost_app_postInput[]
    upsert?: post_app_post_imagesUpsertWithWhereUniqueWithoutPost_app_postInput | post_app_post_imagesUpsertWithWhereUniqueWithoutPost_app_postInput[]
    createMany?: post_app_post_imagesCreateManyPost_app_postInputEnvelope
    set?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    disconnect?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    delete?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    connect?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    update?: post_app_post_imagesUpdateWithWhereUniqueWithoutPost_app_postInput | post_app_post_imagesUpdateWithWhereUniqueWithoutPost_app_postInput[]
    updateMany?: post_app_post_imagesUpdateManyWithWhereWithoutPost_app_postInput | post_app_post_imagesUpdateManyWithWhereWithoutPost_app_postInput[]
    deleteMany?: post_app_post_imagesScalarWhereInput | post_app_post_imagesScalarWhereInput[]
  }

  export type post_app_post_likesUpdateManyWithoutPostNestedInput = {
    create?: XOR<post_app_post_likesCreateWithoutPostInput, post_app_post_likesUncheckedCreateWithoutPostInput> | post_app_post_likesCreateWithoutPostInput[] | post_app_post_likesUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_app_post_likesCreateOrConnectWithoutPostInput | post_app_post_likesCreateOrConnectWithoutPostInput[]
    upsert?: post_app_post_likesUpsertWithWhereUniqueWithoutPostInput | post_app_post_likesUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: post_app_post_likesCreateManyPostInputEnvelope
    set?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    disconnect?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    delete?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    connect?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    update?: post_app_post_likesUpdateWithWhereUniqueWithoutPostInput | post_app_post_likesUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: post_app_post_likesUpdateManyWithWhereWithoutPostInput | post_app_post_likesUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: post_app_post_likesScalarWhereInput | post_app_post_likesScalarWhereInput[]
  }

  export type post_app_post_tagsUpdateManyWithoutPost_app_postNestedInput = {
    create?: XOR<post_app_post_tagsCreateWithoutPost_app_postInput, post_app_post_tagsUncheckedCreateWithoutPost_app_postInput> | post_app_post_tagsCreateWithoutPost_app_postInput[] | post_app_post_tagsUncheckedCreateWithoutPost_app_postInput[]
    connectOrCreate?: post_app_post_tagsCreateOrConnectWithoutPost_app_postInput | post_app_post_tagsCreateOrConnectWithoutPost_app_postInput[]
    upsert?: post_app_post_tagsUpsertWithWhereUniqueWithoutPost_app_postInput | post_app_post_tagsUpsertWithWhereUniqueWithoutPost_app_postInput[]
    createMany?: post_app_post_tagsCreateManyPost_app_postInputEnvelope
    set?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    disconnect?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    delete?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    connect?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    update?: post_app_post_tagsUpdateWithWhereUniqueWithoutPost_app_postInput | post_app_post_tagsUpdateWithWhereUniqueWithoutPost_app_postInput[]
    updateMany?: post_app_post_tagsUpdateManyWithWhereWithoutPost_app_postInput | post_app_post_tagsUpdateManyWithWhereWithoutPost_app_postInput[]
    deleteMany?: post_app_post_tagsScalarWhereInput | post_app_post_tagsScalarWhereInput[]
  }

  export type post_app_post_viewsUpdateManyWithoutPostNestedInput = {
    create?: XOR<post_app_post_viewsCreateWithoutPostInput, post_app_post_viewsUncheckedCreateWithoutPostInput> | post_app_post_viewsCreateWithoutPostInput[] | post_app_post_viewsUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_app_post_viewsCreateOrConnectWithoutPostInput | post_app_post_viewsCreateOrConnectWithoutPostInput[]
    upsert?: post_app_post_viewsUpsertWithWhereUniqueWithoutPostInput | post_app_post_viewsUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: post_app_post_viewsCreateManyPostInputEnvelope
    set?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    disconnect?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    delete?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    connect?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    update?: post_app_post_viewsUpdateWithWhereUniqueWithoutPostInput | post_app_post_viewsUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: post_app_post_viewsUpdateManyWithWhereWithoutPostInput | post_app_post_viewsUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: post_app_post_viewsScalarWhereInput | post_app_post_viewsScalarWhereInput[]
  }

  export type LinkUncheckedUpdateManyWithoutPost_app_postNestedInput = {
    create?: XOR<LinkCreateWithoutPost_app_postInput, LinkUncheckedCreateWithoutPost_app_postInput> | LinkCreateWithoutPost_app_postInput[] | LinkUncheckedCreateWithoutPost_app_postInput[]
    connectOrCreate?: LinkCreateOrConnectWithoutPost_app_postInput | LinkCreateOrConnectWithoutPost_app_postInput[]
    upsert?: LinkUpsertWithWhereUniqueWithoutPost_app_postInput | LinkUpsertWithWhereUniqueWithoutPost_app_postInput[]
    createMany?: LinkCreateManyPost_app_postInputEnvelope
    set?: LinkWhereUniqueInput | LinkWhereUniqueInput[]
    disconnect?: LinkWhereUniqueInput | LinkWhereUniqueInput[]
    delete?: LinkWhereUniqueInput | LinkWhereUniqueInput[]
    connect?: LinkWhereUniqueInput | LinkWhereUniqueInput[]
    update?: LinkUpdateWithWhereUniqueWithoutPost_app_postInput | LinkUpdateWithWhereUniqueWithoutPost_app_postInput[]
    updateMany?: LinkUpdateManyWithWhereWithoutPost_app_postInput | LinkUpdateManyWithWhereWithoutPost_app_postInput[]
    deleteMany?: LinkScalarWhereInput | LinkScalarWhereInput[]
  }

  export type post_app_post_imagesUncheckedUpdateManyWithoutPost_app_postNestedInput = {
    create?: XOR<post_app_post_imagesCreateWithoutPost_app_postInput, post_app_post_imagesUncheckedCreateWithoutPost_app_postInput> | post_app_post_imagesCreateWithoutPost_app_postInput[] | post_app_post_imagesUncheckedCreateWithoutPost_app_postInput[]
    connectOrCreate?: post_app_post_imagesCreateOrConnectWithoutPost_app_postInput | post_app_post_imagesCreateOrConnectWithoutPost_app_postInput[]
    upsert?: post_app_post_imagesUpsertWithWhereUniqueWithoutPost_app_postInput | post_app_post_imagesUpsertWithWhereUniqueWithoutPost_app_postInput[]
    createMany?: post_app_post_imagesCreateManyPost_app_postInputEnvelope
    set?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    disconnect?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    delete?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    connect?: post_app_post_imagesWhereUniqueInput | post_app_post_imagesWhereUniqueInput[]
    update?: post_app_post_imagesUpdateWithWhereUniqueWithoutPost_app_postInput | post_app_post_imagesUpdateWithWhereUniqueWithoutPost_app_postInput[]
    updateMany?: post_app_post_imagesUpdateManyWithWhereWithoutPost_app_postInput | post_app_post_imagesUpdateManyWithWhereWithoutPost_app_postInput[]
    deleteMany?: post_app_post_imagesScalarWhereInput | post_app_post_imagesScalarWhereInput[]
  }

  export type post_app_post_likesUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<post_app_post_likesCreateWithoutPostInput, post_app_post_likesUncheckedCreateWithoutPostInput> | post_app_post_likesCreateWithoutPostInput[] | post_app_post_likesUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_app_post_likesCreateOrConnectWithoutPostInput | post_app_post_likesCreateOrConnectWithoutPostInput[]
    upsert?: post_app_post_likesUpsertWithWhereUniqueWithoutPostInput | post_app_post_likesUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: post_app_post_likesCreateManyPostInputEnvelope
    set?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    disconnect?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    delete?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    connect?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    update?: post_app_post_likesUpdateWithWhereUniqueWithoutPostInput | post_app_post_likesUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: post_app_post_likesUpdateManyWithWhereWithoutPostInput | post_app_post_likesUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: post_app_post_likesScalarWhereInput | post_app_post_likesScalarWhereInput[]
  }

  export type post_app_post_tagsUncheckedUpdateManyWithoutPost_app_postNestedInput = {
    create?: XOR<post_app_post_tagsCreateWithoutPost_app_postInput, post_app_post_tagsUncheckedCreateWithoutPost_app_postInput> | post_app_post_tagsCreateWithoutPost_app_postInput[] | post_app_post_tagsUncheckedCreateWithoutPost_app_postInput[]
    connectOrCreate?: post_app_post_tagsCreateOrConnectWithoutPost_app_postInput | post_app_post_tagsCreateOrConnectWithoutPost_app_postInput[]
    upsert?: post_app_post_tagsUpsertWithWhereUniqueWithoutPost_app_postInput | post_app_post_tagsUpsertWithWhereUniqueWithoutPost_app_postInput[]
    createMany?: post_app_post_tagsCreateManyPost_app_postInputEnvelope
    set?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    disconnect?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    delete?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    connect?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    update?: post_app_post_tagsUpdateWithWhereUniqueWithoutPost_app_postInput | post_app_post_tagsUpdateWithWhereUniqueWithoutPost_app_postInput[]
    updateMany?: post_app_post_tagsUpdateManyWithWhereWithoutPost_app_postInput | post_app_post_tagsUpdateManyWithWhereWithoutPost_app_postInput[]
    deleteMany?: post_app_post_tagsScalarWhereInput | post_app_post_tagsScalarWhereInput[]
  }

  export type post_app_post_viewsUncheckedUpdateManyWithoutPostNestedInput = {
    create?: XOR<post_app_post_viewsCreateWithoutPostInput, post_app_post_viewsUncheckedCreateWithoutPostInput> | post_app_post_viewsCreateWithoutPostInput[] | post_app_post_viewsUncheckedCreateWithoutPostInput[]
    connectOrCreate?: post_app_post_viewsCreateOrConnectWithoutPostInput | post_app_post_viewsCreateOrConnectWithoutPostInput[]
    upsert?: post_app_post_viewsUpsertWithWhereUniqueWithoutPostInput | post_app_post_viewsUpsertWithWhereUniqueWithoutPostInput[]
    createMany?: post_app_post_viewsCreateManyPostInputEnvelope
    set?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    disconnect?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    delete?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    connect?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    update?: post_app_post_viewsUpdateWithWhereUniqueWithoutPostInput | post_app_post_viewsUpdateWithWhereUniqueWithoutPostInput[]
    updateMany?: post_app_post_viewsUpdateManyWithWhereWithoutPostInput | post_app_post_viewsUpdateManyWithWhereWithoutPostInput[]
    deleteMany?: post_app_post_viewsScalarWhereInput | post_app_post_viewsScalarWhereInput[]
  }

  export type AlbumCreateNestedManyWithoutPost_app_tagInput = {
    create?: XOR<AlbumCreateWithoutPost_app_tagInput, AlbumUncheckedCreateWithoutPost_app_tagInput> | AlbumCreateWithoutPost_app_tagInput[] | AlbumUncheckedCreateWithoutPost_app_tagInput[]
    connectOrCreate?: AlbumCreateOrConnectWithoutPost_app_tagInput | AlbumCreateOrConnectWithoutPost_app_tagInput[]
    createMany?: AlbumCreateManyPost_app_tagInputEnvelope
    connect?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
  }

  export type post_app_post_tagsCreateNestedManyWithoutPost_app_tagInput = {
    create?: XOR<post_app_post_tagsCreateWithoutPost_app_tagInput, post_app_post_tagsUncheckedCreateWithoutPost_app_tagInput> | post_app_post_tagsCreateWithoutPost_app_tagInput[] | post_app_post_tagsUncheckedCreateWithoutPost_app_tagInput[]
    connectOrCreate?: post_app_post_tagsCreateOrConnectWithoutPost_app_tagInput | post_app_post_tagsCreateOrConnectWithoutPost_app_tagInput[]
    createMany?: post_app_post_tagsCreateManyPost_app_tagInputEnvelope
    connect?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
  }

  export type AlbumUncheckedCreateNestedManyWithoutPost_app_tagInput = {
    create?: XOR<AlbumCreateWithoutPost_app_tagInput, AlbumUncheckedCreateWithoutPost_app_tagInput> | AlbumCreateWithoutPost_app_tagInput[] | AlbumUncheckedCreateWithoutPost_app_tagInput[]
    connectOrCreate?: AlbumCreateOrConnectWithoutPost_app_tagInput | AlbumCreateOrConnectWithoutPost_app_tagInput[]
    createMany?: AlbumCreateManyPost_app_tagInputEnvelope
    connect?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
  }

  export type post_app_post_tagsUncheckedCreateNestedManyWithoutPost_app_tagInput = {
    create?: XOR<post_app_post_tagsCreateWithoutPost_app_tagInput, post_app_post_tagsUncheckedCreateWithoutPost_app_tagInput> | post_app_post_tagsCreateWithoutPost_app_tagInput[] | post_app_post_tagsUncheckedCreateWithoutPost_app_tagInput[]
    connectOrCreate?: post_app_post_tagsCreateOrConnectWithoutPost_app_tagInput | post_app_post_tagsCreateOrConnectWithoutPost_app_tagInput[]
    createMany?: post_app_post_tagsCreateManyPost_app_tagInputEnvelope
    connect?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
  }

  export type AlbumUpdateManyWithoutPost_app_tagNestedInput = {
    create?: XOR<AlbumCreateWithoutPost_app_tagInput, AlbumUncheckedCreateWithoutPost_app_tagInput> | AlbumCreateWithoutPost_app_tagInput[] | AlbumUncheckedCreateWithoutPost_app_tagInput[]
    connectOrCreate?: AlbumCreateOrConnectWithoutPost_app_tagInput | AlbumCreateOrConnectWithoutPost_app_tagInput[]
    upsert?: AlbumUpsertWithWhereUniqueWithoutPost_app_tagInput | AlbumUpsertWithWhereUniqueWithoutPost_app_tagInput[]
    createMany?: AlbumCreateManyPost_app_tagInputEnvelope
    set?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    disconnect?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    delete?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    connect?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    update?: AlbumUpdateWithWhereUniqueWithoutPost_app_tagInput | AlbumUpdateWithWhereUniqueWithoutPost_app_tagInput[]
    updateMany?: AlbumUpdateManyWithWhereWithoutPost_app_tagInput | AlbumUpdateManyWithWhereWithoutPost_app_tagInput[]
    deleteMany?: AlbumScalarWhereInput | AlbumScalarWhereInput[]
  }

  export type post_app_post_tagsUpdateManyWithoutPost_app_tagNestedInput = {
    create?: XOR<post_app_post_tagsCreateWithoutPost_app_tagInput, post_app_post_tagsUncheckedCreateWithoutPost_app_tagInput> | post_app_post_tagsCreateWithoutPost_app_tagInput[] | post_app_post_tagsUncheckedCreateWithoutPost_app_tagInput[]
    connectOrCreate?: post_app_post_tagsCreateOrConnectWithoutPost_app_tagInput | post_app_post_tagsCreateOrConnectWithoutPost_app_tagInput[]
    upsert?: post_app_post_tagsUpsertWithWhereUniqueWithoutPost_app_tagInput | post_app_post_tagsUpsertWithWhereUniqueWithoutPost_app_tagInput[]
    createMany?: post_app_post_tagsCreateManyPost_app_tagInputEnvelope
    set?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    disconnect?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    delete?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    connect?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    update?: post_app_post_tagsUpdateWithWhereUniqueWithoutPost_app_tagInput | post_app_post_tagsUpdateWithWhereUniqueWithoutPost_app_tagInput[]
    updateMany?: post_app_post_tagsUpdateManyWithWhereWithoutPost_app_tagInput | post_app_post_tagsUpdateManyWithWhereWithoutPost_app_tagInput[]
    deleteMany?: post_app_post_tagsScalarWhereInput | post_app_post_tagsScalarWhereInput[]
  }

  export type AlbumUncheckedUpdateManyWithoutPost_app_tagNestedInput = {
    create?: XOR<AlbumCreateWithoutPost_app_tagInput, AlbumUncheckedCreateWithoutPost_app_tagInput> | AlbumCreateWithoutPost_app_tagInput[] | AlbumUncheckedCreateWithoutPost_app_tagInput[]
    connectOrCreate?: AlbumCreateOrConnectWithoutPost_app_tagInput | AlbumCreateOrConnectWithoutPost_app_tagInput[]
    upsert?: AlbumUpsertWithWhereUniqueWithoutPost_app_tagInput | AlbumUpsertWithWhereUniqueWithoutPost_app_tagInput[]
    createMany?: AlbumCreateManyPost_app_tagInputEnvelope
    set?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    disconnect?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    delete?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    connect?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    update?: AlbumUpdateWithWhereUniqueWithoutPost_app_tagInput | AlbumUpdateWithWhereUniqueWithoutPost_app_tagInput[]
    updateMany?: AlbumUpdateManyWithWhereWithoutPost_app_tagInput | AlbumUpdateManyWithWhereWithoutPost_app_tagInput[]
    deleteMany?: AlbumScalarWhereInput | AlbumScalarWhereInput[]
  }

  export type post_app_post_tagsUncheckedUpdateManyWithoutPost_app_tagNestedInput = {
    create?: XOR<post_app_post_tagsCreateWithoutPost_app_tagInput, post_app_post_tagsUncheckedCreateWithoutPost_app_tagInput> | post_app_post_tagsCreateWithoutPost_app_tagInput[] | post_app_post_tagsUncheckedCreateWithoutPost_app_tagInput[]
    connectOrCreate?: post_app_post_tagsCreateOrConnectWithoutPost_app_tagInput | post_app_post_tagsCreateOrConnectWithoutPost_app_tagInput[]
    upsert?: post_app_post_tagsUpsertWithWhereUniqueWithoutPost_app_tagInput | post_app_post_tagsUpsertWithWhereUniqueWithoutPost_app_tagInput[]
    createMany?: post_app_post_tagsCreateManyPost_app_tagInputEnvelope
    set?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    disconnect?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    delete?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    connect?: post_app_post_tagsWhereUniqueInput | post_app_post_tagsWhereUniqueInput[]
    update?: post_app_post_tagsUpdateWithWhereUniqueWithoutPost_app_tagInput | post_app_post_tagsUpdateWithWhereUniqueWithoutPost_app_tagInput[]
    updateMany?: post_app_post_tagsUpdateManyWithWhereWithoutPost_app_tagInput | post_app_post_tagsUpdateManyWithWhereWithoutPost_app_tagInput[]
    deleteMany?: post_app_post_tagsScalarWhereInput | post_app_post_tagsScalarWhereInput[]
  }

  export type PostCreateNestedOneWithoutPost_app_linkInput = {
    create?: XOR<PostCreateWithoutPost_app_linkInput, PostUncheckedCreateWithoutPost_app_linkInput>
    connectOrCreate?: PostCreateOrConnectWithoutPost_app_linkInput
    connect?: PostWhereUniqueInput
  }

  export type PostUpdateOneRequiredWithoutPost_app_linkNestedInput = {
    create?: XOR<PostCreateWithoutPost_app_linkInput, PostUncheckedCreateWithoutPost_app_linkInput>
    connectOrCreate?: PostCreateOrConnectWithoutPost_app_linkInput
    upsert?: PostUpsertWithoutPost_app_linkInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutPost_app_linkInput, PostUpdateWithoutPost_app_linkInput>, PostUncheckedUpdateWithoutPost_app_linkInput>
  }

  export type PostCreateNestedOneWithoutLikesInput = {
    create?: XOR<PostCreateWithoutLikesInput, PostUncheckedCreateWithoutLikesInput>
    connectOrCreate?: PostCreateOrConnectWithoutLikesInput
    connect?: PostWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutPost_app_post_likesInput = {
    create?: XOR<ProfileCreateWithoutPost_app_post_likesInput, ProfileUncheckedCreateWithoutPost_app_post_likesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutPost_app_post_likesInput
    connect?: ProfileWhereUniqueInput
  }

  export type PostUpdateOneRequiredWithoutLikesNestedInput = {
    create?: XOR<PostCreateWithoutLikesInput, PostUncheckedCreateWithoutLikesInput>
    connectOrCreate?: PostCreateOrConnectWithoutLikesInput
    upsert?: PostUpsertWithoutLikesInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutLikesInput, PostUpdateWithoutLikesInput>, PostUncheckedUpdateWithoutLikesInput>
  }

  export type ProfileUpdateOneRequiredWithoutPost_app_post_likesNestedInput = {
    create?: XOR<ProfileCreateWithoutPost_app_post_likesInput, ProfileUncheckedCreateWithoutPost_app_post_likesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutPost_app_post_likesInput
    upsert?: ProfileUpsertWithoutPost_app_post_likesInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutPost_app_post_likesInput, ProfileUpdateWithoutPost_app_post_likesInput>, ProfileUncheckedUpdateWithoutPost_app_post_likesInput>
  }

  export type PostCreateNestedOneWithoutViewsInput = {
    create?: XOR<PostCreateWithoutViewsInput, PostUncheckedCreateWithoutViewsInput>
    connectOrCreate?: PostCreateOrConnectWithoutViewsInput
    connect?: PostWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutPost_app_post_viewsInput = {
    create?: XOR<ProfileCreateWithoutPost_app_post_viewsInput, ProfileUncheckedCreateWithoutPost_app_post_viewsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutPost_app_post_viewsInput
    connect?: ProfileWhereUniqueInput
  }

  export type PostUpdateOneRequiredWithoutViewsNestedInput = {
    create?: XOR<PostCreateWithoutViewsInput, PostUncheckedCreateWithoutViewsInput>
    connectOrCreate?: PostCreateOrConnectWithoutViewsInput
    upsert?: PostUpsertWithoutViewsInput
    connect?: PostWhereUniqueInput
    update?: XOR<XOR<PostUpdateToOneWithWhereWithoutViewsInput, PostUpdateWithoutViewsInput>, PostUncheckedUpdateWithoutViewsInput>
  }

  export type ProfileUpdateOneRequiredWithoutPost_app_post_viewsNestedInput = {
    create?: XOR<ProfileCreateWithoutPost_app_post_viewsInput, ProfileUncheckedCreateWithoutPost_app_post_viewsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutPost_app_post_viewsInput
    upsert?: ProfileUpsertWithoutPost_app_post_viewsInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutPost_app_post_viewsInput, ProfileUpdateWithoutPost_app_post_viewsInput>, ProfileUncheckedUpdateWithoutPost_app_post_viewsInput>
  }

  export type ChatGroupCreateNestedManyWithoutAdminInput = {
    create?: XOR<ChatGroupCreateWithoutAdminInput, ChatGroupUncheckedCreateWithoutAdminInput> | ChatGroupCreateWithoutAdminInput[] | ChatGroupUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: ChatGroupCreateOrConnectWithoutAdminInput | ChatGroupCreateOrConnectWithoutAdminInput[]
    createMany?: ChatGroupCreateManyAdminInputEnvelope
    connect?: ChatGroupWhereUniqueInput | ChatGroupWhereUniqueInput[]
  }

  export type chat_app_chatgroup_membersCreateNestedManyWithoutProfileInput = {
    create?: XOR<chat_app_chatgroup_membersCreateWithoutProfileInput, chat_app_chatgroup_membersUncheckedCreateWithoutProfileInput> | chat_app_chatgroup_membersCreateWithoutProfileInput[] | chat_app_chatgroup_membersUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: chat_app_chatgroup_membersCreateOrConnectWithoutProfileInput | chat_app_chatgroup_membersCreateOrConnectWithoutProfileInput[]
    createMany?: chat_app_chatgroup_membersCreateManyProfileInputEnvelope
    connect?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
  }

  export type ChatMessageCreateNestedManyWithoutAuthorInput = {
    create?: XOR<ChatMessageCreateWithoutAuthorInput, ChatMessageUncheckedCreateWithoutAuthorInput> | ChatMessageCreateWithoutAuthorInput[] | ChatMessageUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ChatMessageCreateOrConnectWithoutAuthorInput | ChatMessageCreateOrConnectWithoutAuthorInput[]
    createMany?: ChatMessageCreateManyAuthorInputEnvelope
    connect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
  }

  export type AlbumCreateNestedManyWithoutAuthorInput = {
    create?: XOR<AlbumCreateWithoutAuthorInput, AlbumUncheckedCreateWithoutAuthorInput> | AlbumCreateWithoutAuthorInput[] | AlbumUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: AlbumCreateOrConnectWithoutAuthorInput | AlbumCreateOrConnectWithoutAuthorInput[]
    createMany?: AlbumCreateManyAuthorInputEnvelope
    connect?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
  }

  export type PostCreateNestedManyWithoutAuthorInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type post_app_post_likesCreateNestedManyWithoutUser_app_profileInput = {
    create?: XOR<post_app_post_likesCreateWithoutUser_app_profileInput, post_app_post_likesUncheckedCreateWithoutUser_app_profileInput> | post_app_post_likesCreateWithoutUser_app_profileInput[] | post_app_post_likesUncheckedCreateWithoutUser_app_profileInput[]
    connectOrCreate?: post_app_post_likesCreateOrConnectWithoutUser_app_profileInput | post_app_post_likesCreateOrConnectWithoutUser_app_profileInput[]
    createMany?: post_app_post_likesCreateManyUser_app_profileInputEnvelope
    connect?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
  }

  export type post_app_post_viewsCreateNestedManyWithoutUser_app_profileInput = {
    create?: XOR<post_app_post_viewsCreateWithoutUser_app_profileInput, post_app_post_viewsUncheckedCreateWithoutUser_app_profileInput> | post_app_post_viewsCreateWithoutUser_app_profileInput[] | post_app_post_viewsUncheckedCreateWithoutUser_app_profileInput[]
    connectOrCreate?: post_app_post_viewsCreateOrConnectWithoutUser_app_profileInput | post_app_post_viewsCreateOrConnectWithoutUser_app_profileInput[]
    createMany?: post_app_post_viewsCreateManyUser_app_profileInputEnvelope
    connect?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
  }

  export type AvatarCreateNestedManyWithoutProfileInput = {
    create?: XOR<AvatarCreateWithoutProfileInput, AvatarUncheckedCreateWithoutProfileInput> | AvatarCreateWithoutProfileInput[] | AvatarUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: AvatarCreateOrConnectWithoutProfileInput | AvatarCreateOrConnectWithoutProfileInput[]
    createMany?: AvatarCreateManyProfileInputEnvelope
    connect?: AvatarWhereUniqueInput | AvatarWhereUniqueInput[]
  }

  export type FriendshipCreateNestedManyWithoutProfile1Input = {
    create?: XOR<FriendshipCreateWithoutProfile1Input, FriendshipUncheckedCreateWithoutProfile1Input> | FriendshipCreateWithoutProfile1Input[] | FriendshipUncheckedCreateWithoutProfile1Input[]
    connectOrCreate?: FriendshipCreateOrConnectWithoutProfile1Input | FriendshipCreateOrConnectWithoutProfile1Input[]
    createMany?: FriendshipCreateManyProfile1InputEnvelope
    connect?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
  }

  export type FriendshipCreateNestedManyWithoutProfile2Input = {
    create?: XOR<FriendshipCreateWithoutProfile2Input, FriendshipUncheckedCreateWithoutProfile2Input> | FriendshipCreateWithoutProfile2Input[] | FriendshipUncheckedCreateWithoutProfile2Input[]
    connectOrCreate?: FriendshipCreateOrConnectWithoutProfile2Input | FriendshipCreateOrConnectWithoutProfile2Input[]
    createMany?: FriendshipCreateManyProfile2InputEnvelope
    connect?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
  }

  export type auth_userCreateNestedOneWithoutUser_app_profileInput = {
create?: XOR<auth_userCreateWithoutUser_app_profileInput, auth_userUncheckedCreateWithoutUser_app_profileInput>
    connectOrCreate?: auth_userCreateOrConnectWithoutUser_app_profileInput
    connect?: auth_userWhereUniqueInput
  }

  export type ChatGroupUncheckedCreateNestedManyWithoutAdminInput = {
    create?: XOR<ChatGroupCreateWithoutAdminInput, ChatGroupUncheckedCreateWithoutAdminInput> | ChatGroupCreateWithoutAdminInput[] | ChatGroupUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: ChatGroupCreateOrConnectWithoutAdminInput | ChatGroupCreateOrConnectWithoutAdminInput[]
    createMany?: ChatGroupCreateManyAdminInputEnvelope
    connect?: ChatGroupWhereUniqueInput | ChatGroupWhereUniqueInput[]
  }

  export type chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutProfileInput = {
    create?: XOR<chat_app_chatgroup_membersCreateWithoutProfileInput, chat_app_chatgroup_membersUncheckedCreateWithoutProfileInput> | chat_app_chatgroup_membersCreateWithoutProfileInput[] | chat_app_chatgroup_membersUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: chat_app_chatgroup_membersCreateOrConnectWithoutProfileInput | chat_app_chatgroup_membersCreateOrConnectWithoutProfileInput[]
    createMany?: chat_app_chatgroup_membersCreateManyProfileInputEnvelope
    connect?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
  }

  export type ChatMessageUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<ChatMessageCreateWithoutAuthorInput, ChatMessageUncheckedCreateWithoutAuthorInput> | ChatMessageCreateWithoutAuthorInput[] | ChatMessageUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ChatMessageCreateOrConnectWithoutAuthorInput | ChatMessageCreateOrConnectWithoutAuthorInput[]
    createMany?: ChatMessageCreateManyAuthorInputEnvelope
    connect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
  }

  export type AlbumUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<AlbumCreateWithoutAuthorInput, AlbumUncheckedCreateWithoutAuthorInput> | AlbumCreateWithoutAuthorInput[] | AlbumUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: AlbumCreateOrConnectWithoutAuthorInput | AlbumCreateOrConnectWithoutAuthorInput[]
    createMany?: AlbumCreateManyAuthorInputEnvelope
    connect?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
  }

  export type PostUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
  }

  export type post_app_post_likesUncheckedCreateNestedManyWithoutUser_app_profileInput = {
    create?: XOR<post_app_post_likesCreateWithoutUser_app_profileInput, post_app_post_likesUncheckedCreateWithoutUser_app_profileInput> | post_app_post_likesCreateWithoutUser_app_profileInput[] | post_app_post_likesUncheckedCreateWithoutUser_app_profileInput[]
    connectOrCreate?: post_app_post_likesCreateOrConnectWithoutUser_app_profileInput | post_app_post_likesCreateOrConnectWithoutUser_app_profileInput[]
    createMany?: post_app_post_likesCreateManyUser_app_profileInputEnvelope
    connect?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
  }

  export type post_app_post_viewsUncheckedCreateNestedManyWithoutUser_app_profileInput = {
    create?: XOR<post_app_post_viewsCreateWithoutUser_app_profileInput, post_app_post_viewsUncheckedCreateWithoutUser_app_profileInput> | post_app_post_viewsCreateWithoutUser_app_profileInput[] | post_app_post_viewsUncheckedCreateWithoutUser_app_profileInput[]
    connectOrCreate?: post_app_post_viewsCreateOrConnectWithoutUser_app_profileInput | post_app_post_viewsCreateOrConnectWithoutUser_app_profileInput[]
    createMany?: post_app_post_viewsCreateManyUser_app_profileInputEnvelope
    connect?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
  }

  export type AvatarUncheckedCreateNestedManyWithoutProfileInput = {
    create?: XOR<AvatarCreateWithoutProfileInput, AvatarUncheckedCreateWithoutProfileInput> | AvatarCreateWithoutProfileInput[] | AvatarUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: AvatarCreateOrConnectWithoutProfileInput | AvatarCreateOrConnectWithoutProfileInput[]
    createMany?: AvatarCreateManyProfileInputEnvelope
    connect?: AvatarWhereUniqueInput | AvatarWhereUniqueInput[]
  }

  export type FriendshipUncheckedCreateNestedManyWithoutProfile1Input = {
    create?: XOR<FriendshipCreateWithoutProfile1Input, FriendshipUncheckedCreateWithoutProfile1Input> | FriendshipCreateWithoutProfile1Input[] | FriendshipUncheckedCreateWithoutProfile1Input[]
    connectOrCreate?: FriendshipCreateOrConnectWithoutProfile1Input | FriendshipCreateOrConnectWithoutProfile1Input[]
    createMany?: FriendshipCreateManyProfile1InputEnvelope
    connect?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
  }

  export type FriendshipUncheckedCreateNestedManyWithoutProfile2Input = {
    create?: XOR<FriendshipCreateWithoutProfile2Input, FriendshipUncheckedCreateWithoutProfile2Input> | FriendshipCreateWithoutProfile2Input[] | FriendshipUncheckedCreateWithoutProfile2Input[]
    connectOrCreate?: FriendshipCreateOrConnectWithoutProfile2Input | FriendshipCreateOrConnectWithoutProfile2Input[]
    createMany?: FriendshipCreateManyProfile2InputEnvelope
    connect?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
  }

  export type ChatGroupUpdateManyWithoutAdminNestedInput = {
    create?: XOR<ChatGroupCreateWithoutAdminInput, ChatGroupUncheckedCreateWithoutAdminInput> | ChatGroupCreateWithoutAdminInput[] | ChatGroupUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: ChatGroupCreateOrConnectWithoutAdminInput | ChatGroupCreateOrConnectWithoutAdminInput[]
    upsert?: ChatGroupUpsertWithWhereUniqueWithoutAdminInput | ChatGroupUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: ChatGroupCreateManyAdminInputEnvelope
    set?: ChatGroupWhereUniqueInput | ChatGroupWhereUniqueInput[]
    disconnect?: ChatGroupWhereUniqueInput | ChatGroupWhereUniqueInput[]
    delete?: ChatGroupWhereUniqueInput | ChatGroupWhereUniqueInput[]
    connect?: ChatGroupWhereUniqueInput | ChatGroupWhereUniqueInput[]
    update?: ChatGroupUpdateWithWhereUniqueWithoutAdminInput | ChatGroupUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: ChatGroupUpdateManyWithWhereWithoutAdminInput | ChatGroupUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: ChatGroupScalarWhereInput | ChatGroupScalarWhereInput[]
  }

  export type chat_app_chatgroup_membersUpdateManyWithoutProfileNestedInput = {
    create?: XOR<chat_app_chatgroup_membersCreateWithoutProfileInput, chat_app_chatgroup_membersUncheckedCreateWithoutProfileInput> | chat_app_chatgroup_membersCreateWithoutProfileInput[] | chat_app_chatgroup_membersUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: chat_app_chatgroup_membersCreateOrConnectWithoutProfileInput | chat_app_chatgroup_membersCreateOrConnectWithoutProfileInput[]
    upsert?: chat_app_chatgroup_membersUpsertWithWhereUniqueWithoutProfileInput | chat_app_chatgroup_membersUpsertWithWhereUniqueWithoutProfileInput[]
    createMany?: chat_app_chatgroup_membersCreateManyProfileInputEnvelope
    set?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    disconnect?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    delete?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    connect?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    update?: chat_app_chatgroup_membersUpdateWithWhereUniqueWithoutProfileInput | chat_app_chatgroup_membersUpdateWithWhereUniqueWithoutProfileInput[]
    updateMany?: chat_app_chatgroup_membersUpdateManyWithWhereWithoutProfileInput | chat_app_chatgroup_membersUpdateManyWithWhereWithoutProfileInput[]
    deleteMany?: chat_app_chatgroup_membersScalarWhereInput | chat_app_chatgroup_membersScalarWhereInput[]
  }

  export type ChatMessageUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<ChatMessageCreateWithoutAuthorInput, ChatMessageUncheckedCreateWithoutAuthorInput> | ChatMessageCreateWithoutAuthorInput[] | ChatMessageUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ChatMessageCreateOrConnectWithoutAuthorInput | ChatMessageCreateOrConnectWithoutAuthorInput[]
    upsert?: ChatMessageUpsertWithWhereUniqueWithoutAuthorInput | ChatMessageUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: ChatMessageCreateManyAuthorInputEnvelope
    set?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    disconnect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    delete?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    connect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    update?: ChatMessageUpdateWithWhereUniqueWithoutAuthorInput | ChatMessageUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: ChatMessageUpdateManyWithWhereWithoutAuthorInput | ChatMessageUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: ChatMessageScalarWhereInput | ChatMessageScalarWhereInput[]
  }

  export type AlbumUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<AlbumCreateWithoutAuthorInput, AlbumUncheckedCreateWithoutAuthorInput> | AlbumCreateWithoutAuthorInput[] | AlbumUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: AlbumCreateOrConnectWithoutAuthorInput | AlbumCreateOrConnectWithoutAuthorInput[]
    upsert?: AlbumUpsertWithWhereUniqueWithoutAuthorInput | AlbumUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: AlbumCreateManyAuthorInputEnvelope
    set?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    disconnect?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    delete?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    connect?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    update?: AlbumUpdateWithWhereUniqueWithoutAuthorInput | AlbumUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: AlbumUpdateManyWithWhereWithoutAuthorInput | AlbumUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: AlbumScalarWhereInput | AlbumScalarWhereInput[]
  }

  export type PostUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutAuthorInput | PostUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutAuthorInput | PostUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: PostUpdateManyWithWhereWithoutAuthorInput | PostUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type post_app_post_likesUpdateManyWithoutUser_app_profileNestedInput = {
    create?: XOR<post_app_post_likesCreateWithoutUser_app_profileInput, post_app_post_likesUncheckedCreateWithoutUser_app_profileInput> | post_app_post_likesCreateWithoutUser_app_profileInput[] | post_app_post_likesUncheckedCreateWithoutUser_app_profileInput[]
    connectOrCreate?: post_app_post_likesCreateOrConnectWithoutUser_app_profileInput | post_app_post_likesCreateOrConnectWithoutUser_app_profileInput[]
    upsert?: post_app_post_likesUpsertWithWhereUniqueWithoutUser_app_profileInput | post_app_post_likesUpsertWithWhereUniqueWithoutUser_app_profileInput[]
    createMany?: post_app_post_likesCreateManyUser_app_profileInputEnvelope
    set?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    disconnect?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    delete?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    connect?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    update?: post_app_post_likesUpdateWithWhereUniqueWithoutUser_app_profileInput | post_app_post_likesUpdateWithWhereUniqueWithoutUser_app_profileInput[]
    updateMany?: post_app_post_likesUpdateManyWithWhereWithoutUser_app_profileInput | post_app_post_likesUpdateManyWithWhereWithoutUser_app_profileInput[]
    deleteMany?: post_app_post_likesScalarWhereInput | post_app_post_likesScalarWhereInput[]
  }

  export type post_app_post_viewsUpdateManyWithoutUser_app_profileNestedInput = {
    create?: XOR<post_app_post_viewsCreateWithoutUser_app_profileInput, post_app_post_viewsUncheckedCreateWithoutUser_app_profileInput> | post_app_post_viewsCreateWithoutUser_app_profileInput[] | post_app_post_viewsUncheckedCreateWithoutUser_app_profileInput[]
    connectOrCreate?: post_app_post_viewsCreateOrConnectWithoutUser_app_profileInput | post_app_post_viewsCreateOrConnectWithoutUser_app_profileInput[]
    upsert?: post_app_post_viewsUpsertWithWhereUniqueWithoutUser_app_profileInput | post_app_post_viewsUpsertWithWhereUniqueWithoutUser_app_profileInput[]
    createMany?: post_app_post_viewsCreateManyUser_app_profileInputEnvelope
    set?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    disconnect?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    delete?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    connect?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    update?: post_app_post_viewsUpdateWithWhereUniqueWithoutUser_app_profileInput | post_app_post_viewsUpdateWithWhereUniqueWithoutUser_app_profileInput[]
    updateMany?: post_app_post_viewsUpdateManyWithWhereWithoutUser_app_profileInput | post_app_post_viewsUpdateManyWithWhereWithoutUser_app_profileInput[]
    deleteMany?: post_app_post_viewsScalarWhereInput | post_app_post_viewsScalarWhereInput[]
  }

  export type AvatarUpdateManyWithoutProfileNestedInput = {
    create?: XOR<AvatarCreateWithoutProfileInput, AvatarUncheckedCreateWithoutProfileInput> | AvatarCreateWithoutProfileInput[] | AvatarUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: AvatarCreateOrConnectWithoutProfileInput | AvatarCreateOrConnectWithoutProfileInput[]
    upsert?: AvatarUpsertWithWhereUniqueWithoutProfileInput | AvatarUpsertWithWhereUniqueWithoutProfileInput[]
    createMany?: AvatarCreateManyProfileInputEnvelope
    set?: AvatarWhereUniqueInput | AvatarWhereUniqueInput[]
    disconnect?: AvatarWhereUniqueInput | AvatarWhereUniqueInput[]
    delete?: AvatarWhereUniqueInput | AvatarWhereUniqueInput[]
    connect?: AvatarWhereUniqueInput | AvatarWhereUniqueInput[]
    update?: AvatarUpdateWithWhereUniqueWithoutProfileInput | AvatarUpdateWithWhereUniqueWithoutProfileInput[]
    updateMany?: AvatarUpdateManyWithWhereWithoutProfileInput | AvatarUpdateManyWithWhereWithoutProfileInput[]
    deleteMany?: AvatarScalarWhereInput | AvatarScalarWhereInput[]
  }

  export type FriendshipUpdateManyWithoutProfile1NestedInput = {
    create?: XOR<FriendshipCreateWithoutProfile1Input, FriendshipUncheckedCreateWithoutProfile1Input> | FriendshipCreateWithoutProfile1Input[] | FriendshipUncheckedCreateWithoutProfile1Input[]
    connectOrCreate?: FriendshipCreateOrConnectWithoutProfile1Input | FriendshipCreateOrConnectWithoutProfile1Input[]
    upsert?: FriendshipUpsertWithWhereUniqueWithoutProfile1Input | FriendshipUpsertWithWhereUniqueWithoutProfile1Input[]
    createMany?: FriendshipCreateManyProfile1InputEnvelope
    set?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    disconnect?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    delete?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    connect?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    update?: FriendshipUpdateWithWhereUniqueWithoutProfile1Input | FriendshipUpdateWithWhereUniqueWithoutProfile1Input[]
    updateMany?: FriendshipUpdateManyWithWhereWithoutProfile1Input | FriendshipUpdateManyWithWhereWithoutProfile1Input[]
    deleteMany?: FriendshipScalarWhereInput | FriendshipScalarWhereInput[]
  }

  export type FriendshipUpdateManyWithoutProfile2NestedInput = {
    create?: XOR<FriendshipCreateWithoutProfile2Input, FriendshipUncheckedCreateWithoutProfile2Input> | FriendshipCreateWithoutProfile2Input[] | FriendshipUncheckedCreateWithoutProfile2Input[]
    connectOrCreate?: FriendshipCreateOrConnectWithoutProfile2Input | FriendshipCreateOrConnectWithoutProfile2Input[]
    upsert?: FriendshipUpsertWithWhereUniqueWithoutProfile2Input | FriendshipUpsertWithWhereUniqueWithoutProfile2Input[]
    createMany?: FriendshipCreateManyProfile2InputEnvelope
    set?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    disconnect?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    delete?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    connect?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    update?: FriendshipUpdateWithWhereUniqueWithoutProfile2Input | FriendshipUpdateWithWhereUniqueWithoutProfile2Input[]
    updateMany?: FriendshipUpdateManyWithWhereWithoutProfile2Input | FriendshipUpdateManyWithWhereWithoutProfile2Input[]
    deleteMany?: FriendshipScalarWhereInput | FriendshipScalarWhereInput[]
  }

  export type auth_userUpdateOneRequiredWithoutUser_app_profileNestedInput = {
    create?: XOR<auth_userCreateWithoutUser_app_profileInput, auth_userUncheckedCreateWithoutUser_app_profileInput>
    connectOrCreate?: auth_userCreateOrConnectWithoutUser_app_profileInput
    upsert?: auth_userUpsertWithoutUser_app_profileInput
    connect?: auth_userWhereUniqueInput
    update?: XOR<XOR<auth_userUpdateToOneWithWhereWithoutUser_app_profileInput, auth_userUpdateWithoutUser_app_profileInput>, auth_userUncheckedUpdateWithoutUser_app_profileInput>
  }

  export type ChatGroupUncheckedUpdateManyWithoutAdminNestedInput = {
    create?: XOR<ChatGroupCreateWithoutAdminInput, ChatGroupUncheckedCreateWithoutAdminInput> | ChatGroupCreateWithoutAdminInput[] | ChatGroupUncheckedCreateWithoutAdminInput[]
    connectOrCreate?: ChatGroupCreateOrConnectWithoutAdminInput | ChatGroupCreateOrConnectWithoutAdminInput[]
    upsert?: ChatGroupUpsertWithWhereUniqueWithoutAdminInput | ChatGroupUpsertWithWhereUniqueWithoutAdminInput[]
    createMany?: ChatGroupCreateManyAdminInputEnvelope
    set?: ChatGroupWhereUniqueInput | ChatGroupWhereUniqueInput[]
    disconnect?: ChatGroupWhereUniqueInput | ChatGroupWhereUniqueInput[]
    delete?: ChatGroupWhereUniqueInput | ChatGroupWhereUniqueInput[]
    connect?: ChatGroupWhereUniqueInput | ChatGroupWhereUniqueInput[]
    update?: ChatGroupUpdateWithWhereUniqueWithoutAdminInput | ChatGroupUpdateWithWhereUniqueWithoutAdminInput[]
    updateMany?: ChatGroupUpdateManyWithWhereWithoutAdminInput | ChatGroupUpdateManyWithWhereWithoutAdminInput[]
    deleteMany?: ChatGroupScalarWhereInput | ChatGroupScalarWhereInput[]
  }

  export type chat_app_chatgroup_membersUncheckedUpdateManyWithoutProfileNestedInput = {
    create?: XOR<chat_app_chatgroup_membersCreateWithoutProfileInput, chat_app_chatgroup_membersUncheckedCreateWithoutProfileInput> | chat_app_chatgroup_membersCreateWithoutProfileInput[] | chat_app_chatgroup_membersUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: chat_app_chatgroup_membersCreateOrConnectWithoutProfileInput | chat_app_chatgroup_membersCreateOrConnectWithoutProfileInput[]
    upsert?: chat_app_chatgroup_membersUpsertWithWhereUniqueWithoutProfileInput | chat_app_chatgroup_membersUpsertWithWhereUniqueWithoutProfileInput[]
    createMany?: chat_app_chatgroup_membersCreateManyProfileInputEnvelope
    set?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    disconnect?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    delete?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    connect?: chat_app_chatgroup_membersWhereUniqueInput | chat_app_chatgroup_membersWhereUniqueInput[]
    update?: chat_app_chatgroup_membersUpdateWithWhereUniqueWithoutProfileInput | chat_app_chatgroup_membersUpdateWithWhereUniqueWithoutProfileInput[]
    updateMany?: chat_app_chatgroup_membersUpdateManyWithWhereWithoutProfileInput | chat_app_chatgroup_membersUpdateManyWithWhereWithoutProfileInput[]
    deleteMany?: chat_app_chatgroup_membersScalarWhereInput | chat_app_chatgroup_membersScalarWhereInput[]
  }

  export type ChatMessageUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<ChatMessageCreateWithoutAuthorInput, ChatMessageUncheckedCreateWithoutAuthorInput> | ChatMessageCreateWithoutAuthorInput[] | ChatMessageUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: ChatMessageCreateOrConnectWithoutAuthorInput | ChatMessageCreateOrConnectWithoutAuthorInput[]
    upsert?: ChatMessageUpsertWithWhereUniqueWithoutAuthorInput | ChatMessageUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: ChatMessageCreateManyAuthorInputEnvelope
    set?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    disconnect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    delete?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    connect?: ChatMessageWhereUniqueInput | ChatMessageWhereUniqueInput[]
    update?: ChatMessageUpdateWithWhereUniqueWithoutAuthorInput | ChatMessageUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: ChatMessageUpdateManyWithWhereWithoutAuthorInput | ChatMessageUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: ChatMessageScalarWhereInput | ChatMessageScalarWhereInput[]
  }

  export type AlbumUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<AlbumCreateWithoutAuthorInput, AlbumUncheckedCreateWithoutAuthorInput> | AlbumCreateWithoutAuthorInput[] | AlbumUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: AlbumCreateOrConnectWithoutAuthorInput | AlbumCreateOrConnectWithoutAuthorInput[]
    upsert?: AlbumUpsertWithWhereUniqueWithoutAuthorInput | AlbumUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: AlbumCreateManyAuthorInputEnvelope
    set?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    disconnect?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    delete?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    connect?: AlbumWhereUniqueInput | AlbumWhereUniqueInput[]
    update?: AlbumUpdateWithWhereUniqueWithoutAuthorInput | AlbumUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: AlbumUpdateManyWithWhereWithoutAuthorInput | AlbumUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: AlbumScalarWhereInput | AlbumScalarWhereInput[]
  }

  export type PostUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput> | PostCreateWithoutAuthorInput[] | PostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: PostCreateOrConnectWithoutAuthorInput | PostCreateOrConnectWithoutAuthorInput[]
    upsert?: PostUpsertWithWhereUniqueWithoutAuthorInput | PostUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: PostCreateManyAuthorInputEnvelope
    set?: PostWhereUniqueInput | PostWhereUniqueInput[]
    disconnect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    delete?: PostWhereUniqueInput | PostWhereUniqueInput[]
    connect?: PostWhereUniqueInput | PostWhereUniqueInput[]
    update?: PostUpdateWithWhereUniqueWithoutAuthorInput | PostUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: PostUpdateManyWithWhereWithoutAuthorInput | PostUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: PostScalarWhereInput | PostScalarWhereInput[]
  }

  export type post_app_post_likesUncheckedUpdateManyWithoutUser_app_profileNestedInput = {
    create?: XOR<post_app_post_likesCreateWithoutUser_app_profileInput, post_app_post_likesUncheckedCreateWithoutUser_app_profileInput> | post_app_post_likesCreateWithoutUser_app_profileInput[] | post_app_post_likesUncheckedCreateWithoutUser_app_profileInput[]
    connectOrCreate?: post_app_post_likesCreateOrConnectWithoutUser_app_profileInput | post_app_post_likesCreateOrConnectWithoutUser_app_profileInput[]
    upsert?: post_app_post_likesUpsertWithWhereUniqueWithoutUser_app_profileInput | post_app_post_likesUpsertWithWhereUniqueWithoutUser_app_profileInput[]
    createMany?: post_app_post_likesCreateManyUser_app_profileInputEnvelope
    set?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    disconnect?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    delete?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    connect?: post_app_post_likesWhereUniqueInput | post_app_post_likesWhereUniqueInput[]
    update?: post_app_post_likesUpdateWithWhereUniqueWithoutUser_app_profileInput | post_app_post_likesUpdateWithWhereUniqueWithoutUser_app_profileInput[]
    updateMany?: post_app_post_likesUpdateManyWithWhereWithoutUser_app_profileInput | post_app_post_likesUpdateManyWithWhereWithoutUser_app_profileInput[]
    deleteMany?: post_app_post_likesScalarWhereInput | post_app_post_likesScalarWhereInput[]
  }

  export type post_app_post_viewsUncheckedUpdateManyWithoutUser_app_profileNestedInput = {
    create?: XOR<post_app_post_viewsCreateWithoutUser_app_profileInput, post_app_post_viewsUncheckedCreateWithoutUser_app_profileInput> | post_app_post_viewsCreateWithoutUser_app_profileInput[] | post_app_post_viewsUncheckedCreateWithoutUser_app_profileInput[]
    connectOrCreate?: post_app_post_viewsCreateOrConnectWithoutUser_app_profileInput | post_app_post_viewsCreateOrConnectWithoutUser_app_profileInput[]
    upsert?: post_app_post_viewsUpsertWithWhereUniqueWithoutUser_app_profileInput | post_app_post_viewsUpsertWithWhereUniqueWithoutUser_app_profileInput[]
    createMany?: post_app_post_viewsCreateManyUser_app_profileInputEnvelope
    set?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    disconnect?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    delete?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    connect?: post_app_post_viewsWhereUniqueInput | post_app_post_viewsWhereUniqueInput[]
    update?: post_app_post_viewsUpdateWithWhereUniqueWithoutUser_app_profileInput | post_app_post_viewsUpdateWithWhereUniqueWithoutUser_app_profileInput[]
    updateMany?: post_app_post_viewsUpdateManyWithWhereWithoutUser_app_profileInput | post_app_post_viewsUpdateManyWithWhereWithoutUser_app_profileInput[]
    deleteMany?: post_app_post_viewsScalarWhereInput | post_app_post_viewsScalarWhereInput[]
  }

  export type AvatarUncheckedUpdateManyWithoutProfileNestedInput = {
    create?: XOR<AvatarCreateWithoutProfileInput, AvatarUncheckedCreateWithoutProfileInput> | AvatarCreateWithoutProfileInput[] | AvatarUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: AvatarCreateOrConnectWithoutProfileInput | AvatarCreateOrConnectWithoutProfileInput[]
    upsert?: AvatarUpsertWithWhereUniqueWithoutProfileInput | AvatarUpsertWithWhereUniqueWithoutProfileInput[]
    createMany?: AvatarCreateManyProfileInputEnvelope
    set?: AvatarWhereUniqueInput | AvatarWhereUniqueInput[]
    disconnect?: AvatarWhereUniqueInput | AvatarWhereUniqueInput[]
    delete?: AvatarWhereUniqueInput | AvatarWhereUniqueInput[]
    connect?: AvatarWhereUniqueInput | AvatarWhereUniqueInput[]
    update?: AvatarUpdateWithWhereUniqueWithoutProfileInput | AvatarUpdateWithWhereUniqueWithoutProfileInput[]
    updateMany?: AvatarUpdateManyWithWhereWithoutProfileInput | AvatarUpdateManyWithWhereWithoutProfileInput[]
    deleteMany?: AvatarScalarWhereInput | AvatarScalarWhereInput[]
  }

  export type FriendshipUncheckedUpdateManyWithoutProfile1NestedInput = {
    create?: XOR<FriendshipCreateWithoutProfile1Input, FriendshipUncheckedCreateWithoutProfile1Input> | FriendshipCreateWithoutProfile1Input[] | FriendshipUncheckedCreateWithoutProfile1Input[]
    connectOrCreate?: FriendshipCreateOrConnectWithoutProfile1Input | FriendshipCreateOrConnectWithoutProfile1Input[]
    upsert?: FriendshipUpsertWithWhereUniqueWithoutProfile1Input | FriendshipUpsertWithWhereUniqueWithoutProfile1Input[]
    createMany?: FriendshipCreateManyProfile1InputEnvelope
    set?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    disconnect?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    delete?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    connect?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    update?: FriendshipUpdateWithWhereUniqueWithoutProfile1Input | FriendshipUpdateWithWhereUniqueWithoutProfile1Input[]
    updateMany?: FriendshipUpdateManyWithWhereWithoutProfile1Input | FriendshipUpdateManyWithWhereWithoutProfile1Input[]
    deleteMany?: FriendshipScalarWhereInput | FriendshipScalarWhereInput[]
  }

  export type FriendshipUncheckedUpdateManyWithoutProfile2NestedInput = {
    create?: XOR<FriendshipCreateWithoutProfile2Input, FriendshipUncheckedCreateWithoutProfile2Input> | FriendshipCreateWithoutProfile2Input[] | FriendshipUncheckedCreateWithoutProfile2Input[]
    connectOrCreate?: FriendshipCreateOrConnectWithoutProfile2Input | FriendshipCreateOrConnectWithoutProfile2Input[]
    upsert?: FriendshipUpsertWithWhereUniqueWithoutProfile2Input | FriendshipUpsertWithWhereUniqueWithoutProfile2Input[]
    createMany?: FriendshipCreateManyProfile2InputEnvelope
    set?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    disconnect?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    delete?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    connect?: FriendshipWhereUniqueInput | FriendshipWhereUniqueInput[]
    update?: FriendshipUpdateWithWhereUniqueWithoutProfile2Input | FriendshipUpdateWithWhereUniqueWithoutProfile2Input[]
    updateMany?: FriendshipUpdateManyWithWhereWithoutProfile2Input | FriendshipUpdateManyWithWhereWithoutProfile2Input[]
    deleteMany?: FriendshipScalarWhereInput | FriendshipScalarWhereInput[]
  }

  export type ProfileCreateNestedOneWithoutAvatarInput = {
    create?: XOR<ProfileCreateWithoutAvatarInput, ProfileUncheckedCreateWithoutAvatarInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutAvatarInput
    connect?: ProfileWhereUniqueInput
  }

  export type ProfileUpdateOneRequiredWithoutAvatarNestedInput = {
    create?: XOR<ProfileCreateWithoutAvatarInput, ProfileUncheckedCreateWithoutAvatarInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutAvatarInput
    upsert?: ProfileUpsertWithoutAvatarInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutAvatarInput, ProfileUpdateWithoutAvatarInput>, ProfileUncheckedUpdateWithoutAvatarInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type auth_group_permissionsCreateWithoutAuth_groupInput = {
    id?: bigint | number
    auth_permission: auth_permissionCreateNestedOneWithoutAuth_group_permissionsInput
  }

  export type auth_group_permissionsUncheckedCreateWithoutAuth_groupInput = {
    id?: bigint | number
    permission_id: number
  }

  export type auth_group_permissionsCreateOrConnectWithoutAuth_groupInput = {
    where: auth_group_permissionsWhereUniqueInput
    create: XOR<auth_group_permissionsCreateWithoutAuth_groupInput, auth_group_permissionsUncheckedCreateWithoutAuth_groupInput>
  }

  export type auth_group_permissionsCreateManyAuth_groupInputEnvelope = {
    data: auth_group_permissionsCreateManyAuth_groupInput | auth_group_permissionsCreateManyAuth_groupInput[]
    skipDuplicates?: boolean
  }

  export type auth_user_groupsCreateWithoutAuth_groupInput = {
    id?: bigint | number
    auth_user: auth_userCreateNestedOneWithoutAuth_user_groupsInput
  }

  export type auth_user_groupsUncheckedCreateWithoutAuth_groupInput = {
    id?: bigint | number
    user_id: number
  }

  export type auth_user_groupsCreateOrConnectWithoutAuth_groupInput = {
    where: auth_user_groupsWhereUniqueInput
    create: XOR<auth_user_groupsCreateWithoutAuth_groupInput, auth_user_groupsUncheckedCreateWithoutAuth_groupInput>
  }

  export type auth_user_groupsCreateManyAuth_groupInputEnvelope = {
    data: auth_user_groupsCreateManyAuth_groupInput | auth_user_groupsCreateManyAuth_groupInput[]
    skipDuplicates?: boolean
  }

  export type auth_group_permissionsUpsertWithWhereUniqueWithoutAuth_groupInput = {
    where: auth_group_permissionsWhereUniqueInput
    update: XOR<auth_group_permissionsUpdateWithoutAuth_groupInput, auth_group_permissionsUncheckedUpdateWithoutAuth_groupInput>
    create: XOR<auth_group_permissionsCreateWithoutAuth_groupInput, auth_group_permissionsUncheckedCreateWithoutAuth_groupInput>
  }

  export type auth_group_permissionsUpdateWithWhereUniqueWithoutAuth_groupInput = {
    where: auth_group_permissionsWhereUniqueInput
    data: XOR<auth_group_permissionsUpdateWithoutAuth_groupInput, auth_group_permissionsUncheckedUpdateWithoutAuth_groupInput>
  }

  export type auth_group_permissionsUpdateManyWithWhereWithoutAuth_groupInput = {
    where: auth_group_permissionsScalarWhereInput
    data: XOR<auth_group_permissionsUpdateManyMutationInput, auth_group_permissionsUncheckedUpdateManyWithoutAuth_groupInput>
  }

  export type auth_group_permissionsScalarWhereInput = {
    AND?: auth_group_permissionsScalarWhereInput | auth_group_permissionsScalarWhereInput[]
    OR?: auth_group_permissionsScalarWhereInput[]
    NOT?: auth_group_permissionsScalarWhereInput | auth_group_permissionsScalarWhereInput[]
    id?: BigIntFilter<"auth_group_permissions"> | bigint | number
    group_id?: IntFilter<"auth_group_permissions"> | number
    permission_id?: IntFilter<"auth_group_permissions"> | number
  }

  export type auth_user_groupsUpsertWithWhereUniqueWithoutAuth_groupInput = {
    where: auth_user_groupsWhereUniqueInput
    update: XOR<auth_user_groupsUpdateWithoutAuth_groupInput, auth_user_groupsUncheckedUpdateWithoutAuth_groupInput>
    create: XOR<auth_user_groupsCreateWithoutAuth_groupInput, auth_user_groupsUncheckedCreateWithoutAuth_groupInput>
  }

  export type auth_user_groupsUpdateWithWhereUniqueWithoutAuth_groupInput = {
    where: auth_user_groupsWhereUniqueInput
    data: XOR<auth_user_groupsUpdateWithoutAuth_groupInput, auth_user_groupsUncheckedUpdateWithoutAuth_groupInput>
  }

  export type auth_user_groupsUpdateManyWithWhereWithoutAuth_groupInput = {
    where: auth_user_groupsScalarWhereInput
    data: XOR<auth_user_groupsUpdateManyMutationInput, auth_user_groupsUncheckedUpdateManyWithoutAuth_groupInput>
  }

  export type auth_user_groupsScalarWhereInput = {
    AND?: auth_user_groupsScalarWhereInput | auth_user_groupsScalarWhereInput[]
    OR?: auth_user_groupsScalarWhereInput[]
    NOT?: auth_user_groupsScalarWhereInput | auth_user_groupsScalarWhereInput[]
    id?: BigIntFilter<"auth_user_groups"> | bigint | number
    user_id?: IntFilter<"auth_user_groups"> | number
    group_id?: IntFilter<"auth_user_groups"> | number
  }

  export type auth_permissionCreateWithoutAuth_group_permissionsInput = {
    name: string
    codename: string
    django_content_type: django_content_typeCreateNestedOneWithoutAuth_permissionInput
    auth_user_user_permissions?: auth_user_user_permissionsCreateNestedManyWithoutAuth_permissionInput
  }

  export type auth_permissionUncheckedCreateWithoutAuth_group_permissionsInput = {
    id?: number
    name: string
    content_type_id: number
    codename: string
    auth_user_user_permissions?: auth_user_user_permissionsUncheckedCreateNestedManyWithoutAuth_permissionInput
  }

  export type auth_permissionCreateOrConnectWithoutAuth_group_permissionsInput = {
    where: auth_permissionWhereUniqueInput
    create: XOR<auth_permissionCreateWithoutAuth_group_permissionsInput, auth_permissionUncheckedCreateWithoutAuth_group_permissionsInput>
  }

  export type auth_groupCreateWithoutAuth_group_permissionsInput = {
    name: string
    auth_user_groups?: auth_user_groupsCreateNestedManyWithoutAuth_groupInput
  }

  export type auth_groupUncheckedCreateWithoutAuth_group_permissionsInput = {
    id?: number
    name: string
    auth_user_groups?: auth_user_groupsUncheckedCreateNestedManyWithoutAuth_groupInput
  }

  export type auth_groupCreateOrConnectWithoutAuth_group_permissionsInput = {
    where: auth_groupWhereUniqueInput
    create: XOR<auth_groupCreateWithoutAuth_group_permissionsInput, auth_groupUncheckedCreateWithoutAuth_group_permissionsInput>
  }

  export type auth_permissionUpsertWithoutAuth_group_permissionsInput = {
    update: XOR<auth_permissionUpdateWithoutAuth_group_permissionsInput, auth_permissionUncheckedUpdateWithoutAuth_group_permissionsInput>
    create: XOR<auth_permissionCreateWithoutAuth_group_permissionsInput, auth_permissionUncheckedCreateWithoutAuth_group_permissionsInput>
    where?: auth_permissionWhereInput
  }

  export type auth_permissionUpdateToOneWithWhereWithoutAuth_group_permissionsInput = {
    where?: auth_permissionWhereInput
    data: XOR<auth_permissionUpdateWithoutAuth_group_permissionsInput, auth_permissionUncheckedUpdateWithoutAuth_group_permissionsInput>
  }

  export type auth_permissionUpdateWithoutAuth_group_permissionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    codename?: StringFieldUpdateOperationsInput | string
    django_content_type?: django_content_typeUpdateOneRequiredWithoutAuth_permissionNestedInput
    auth_user_user_permissions?: auth_user_user_permissionsUpdateManyWithoutAuth_permissionNestedInput
  }

  export type auth_permissionUncheckedUpdateWithoutAuth_group_permissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    content_type_id?: IntFieldUpdateOperationsInput | number
    codename?: StringFieldUpdateOperationsInput | string
    auth_user_user_permissions?: auth_user_user_permissionsUncheckedUpdateManyWithoutAuth_permissionNestedInput
  }

  export type auth_groupUpsertWithoutAuth_group_permissionsInput = {
    update: XOR<auth_groupUpdateWithoutAuth_group_permissionsInput, auth_groupUncheckedUpdateWithoutAuth_group_permissionsInput>
    create: XOR<auth_groupCreateWithoutAuth_group_permissionsInput, auth_groupUncheckedCreateWithoutAuth_group_permissionsInput>
    where?: auth_groupWhereInput
  }

  export type auth_groupUpdateToOneWithWhereWithoutAuth_group_permissionsInput = {
    where?: auth_groupWhereInput
    data: XOR<auth_groupUpdateWithoutAuth_group_permissionsInput, auth_groupUncheckedUpdateWithoutAuth_group_permissionsInput>
  }

  export type auth_groupUpdateWithoutAuth_group_permissionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    auth_user_groups?: auth_user_groupsUpdateManyWithoutAuth_groupNestedInput
  }

  export type auth_groupUncheckedUpdateWithoutAuth_group_permissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    auth_user_groups?: auth_user_groupsUncheckedUpdateManyWithoutAuth_groupNestedInput
  }

  export type auth_group_permissionsCreateWithoutAuth_permissionInput = {
    id?: bigint | number
    auth_group: auth_groupCreateNestedOneWithoutAuth_group_permissionsInput
  }

  export type auth_group_permissionsUncheckedCreateWithoutAuth_permissionInput = {
    id?: bigint | number
    group_id: number
  }

  export type auth_group_permissionsCreateOrConnectWithoutAuth_permissionInput = {
    where: auth_group_permissionsWhereUniqueInput
    create: XOR<auth_group_permissionsCreateWithoutAuth_permissionInput, auth_group_permissionsUncheckedCreateWithoutAuth_permissionInput>
  }

  export type auth_group_permissionsCreateManyAuth_permissionInputEnvelope = {
    data: auth_group_permissionsCreateManyAuth_permissionInput | auth_group_permissionsCreateManyAuth_permissionInput[]
    skipDuplicates?: boolean
  }

  export type django_content_typeCreateWithoutAuth_permissionInput = {
    app_label: string
    model: string
    django_admin_log?: django_admin_logCreateNestedManyWithoutDjango_content_typeInput
  }

  export type django_content_typeUncheckedCreateWithoutAuth_permissionInput = {
    id?: number
    app_label: string
    model: string
    django_admin_log?: django_admin_logUncheckedCreateNestedManyWithoutDjango_content_typeInput
  }

  export type django_content_typeCreateOrConnectWithoutAuth_permissionInput = {
    where: django_content_typeWhereUniqueInput
    create: XOR<django_content_typeCreateWithoutAuth_permissionInput, django_content_typeUncheckedCreateWithoutAuth_permissionInput>
  }

  export type auth_user_user_permissionsCreateWithoutAuth_permissionInput = {
    id?: bigint | number
    auth_user: auth_userCreateNestedOneWithoutAuth_user_user_permissionsInput
  }

  export type auth_user_user_permissionsUncheckedCreateWithoutAuth_permissionInput = {
    id?: bigint | number
    user_id: number
  }

  export type auth_user_user_permissionsCreateOrConnectWithoutAuth_permissionInput = {
    where: auth_user_user_permissionsWhereUniqueInput
    create: XOR<auth_user_user_permissionsCreateWithoutAuth_permissionInput, auth_user_user_permissionsUncheckedCreateWithoutAuth_permissionInput>
  }

  export type auth_user_user_permissionsCreateManyAuth_permissionInputEnvelope = {
    data: auth_user_user_permissionsCreateManyAuth_permissionInput | auth_user_user_permissionsCreateManyAuth_permissionInput[]
    skipDuplicates?: boolean
  }

  export type auth_group_permissionsUpsertWithWhereUniqueWithoutAuth_permissionInput = {
    where: auth_group_permissionsWhereUniqueInput
    update: XOR<auth_group_permissionsUpdateWithoutAuth_permissionInput, auth_group_permissionsUncheckedUpdateWithoutAuth_permissionInput>
    create: XOR<auth_group_permissionsCreateWithoutAuth_permissionInput, auth_group_permissionsUncheckedCreateWithoutAuth_permissionInput>
  }

  export type auth_group_permissionsUpdateWithWhereUniqueWithoutAuth_permissionInput = {
    where: auth_group_permissionsWhereUniqueInput
    data: XOR<auth_group_permissionsUpdateWithoutAuth_permissionInput, auth_group_permissionsUncheckedUpdateWithoutAuth_permissionInput>
  }

  export type auth_group_permissionsUpdateManyWithWhereWithoutAuth_permissionInput = {
    where: auth_group_permissionsScalarWhereInput
    data: XOR<auth_group_permissionsUpdateManyMutationInput, auth_group_permissionsUncheckedUpdateManyWithoutAuth_permissionInput>
  }

  export type django_content_typeUpsertWithoutAuth_permissionInput = {
    update: XOR<django_content_typeUpdateWithoutAuth_permissionInput, django_content_typeUncheckedUpdateWithoutAuth_permissionInput>
    create: XOR<django_content_typeCreateWithoutAuth_permissionInput, django_content_typeUncheckedCreateWithoutAuth_permissionInput>
    where?: django_content_typeWhereInput
  }

  export type django_content_typeUpdateToOneWithWhereWithoutAuth_permissionInput = {
    where?: django_content_typeWhereInput
    data: XOR<django_content_typeUpdateWithoutAuth_permissionInput, django_content_typeUncheckedUpdateWithoutAuth_permissionInput>
  }

  export type django_content_typeUpdateWithoutAuth_permissionInput = {
    app_label?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    django_admin_log?: django_admin_logUpdateManyWithoutDjango_content_typeNestedInput
  }

  export type django_content_typeUncheckedUpdateWithoutAuth_permissionInput = {
    id?: IntFieldUpdateOperationsInput | number
    app_label?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    django_admin_log?: django_admin_logUncheckedUpdateManyWithoutDjango_content_typeNestedInput
  }

  export type auth_user_user_permissionsUpsertWithWhereUniqueWithoutAuth_permissionInput = {
    where: auth_user_user_permissionsWhereUniqueInput
    update: XOR<auth_user_user_permissionsUpdateWithoutAuth_permissionInput, auth_user_user_permissionsUncheckedUpdateWithoutAuth_permissionInput>
    create: XOR<auth_user_user_permissionsCreateWithoutAuth_permissionInput, auth_user_user_permissionsUncheckedCreateWithoutAuth_permissionInput>
  }

  export type auth_user_user_permissionsUpdateWithWhereUniqueWithoutAuth_permissionInput = {
    where: auth_user_user_permissionsWhereUniqueInput
    data: XOR<auth_user_user_permissionsUpdateWithoutAuth_permissionInput, auth_user_user_permissionsUncheckedUpdateWithoutAuth_permissionInput>
  }

  export type auth_user_user_permissionsUpdateManyWithWhereWithoutAuth_permissionInput = {
    where: auth_user_user_permissionsScalarWhereInput
    data: XOR<auth_user_user_permissionsUpdateManyMutationInput, auth_user_user_permissionsUncheckedUpdateManyWithoutAuth_permissionInput>
  }

  export type auth_user_user_permissionsScalarWhereInput = {
    AND?: auth_user_user_permissionsScalarWhereInput | auth_user_user_permissionsScalarWhereInput[]
    OR?: auth_user_user_permissionsScalarWhereInput[]
    NOT?: auth_user_user_permissionsScalarWhereInput | auth_user_user_permissionsScalarWhereInput[]
    id?: BigIntFilter<"auth_user_user_permissions"> | bigint | number
    user_id?: IntFilter<"auth_user_user_permissions"> | number
    permission_id?: IntFilter<"auth_user_user_permissions"> | number
  }

  export type auth_user_groupsCreateWithoutAuth_userInput = {
    id?: bigint | number
    auth_group: auth_groupCreateNestedOneWithoutAuth_user_groupsInput
  }

  export type auth_user_groupsUncheckedCreateWithoutAuth_userInput = {
    id?: bigint | number
    group_id: number
  }

  export type auth_user_groupsCreateOrConnectWithoutAuth_userInput = {
    where: auth_user_groupsWhereUniqueInput
    create: XOR<auth_user_groupsCreateWithoutAuth_userInput, auth_user_groupsUncheckedCreateWithoutAuth_userInput>
  }

  export type auth_user_groupsCreateManyAuth_userInputEnvelope = {
    data: auth_user_groupsCreateManyAuth_userInput | auth_user_groupsCreateManyAuth_userInput[]
    skipDuplicates?: boolean
  }

  export type auth_user_user_permissionsCreateWithoutAuth_userInput = {
    id?: bigint | number
    auth_permission: auth_permissionCreateNestedOneWithoutAuth_user_user_permissionsInput
  }

  export type auth_user_user_permissionsUncheckedCreateWithoutAuth_userInput = {
    id?: bigint | number
    permission_id: number
  }

  export type auth_user_user_permissionsCreateOrConnectWithoutAuth_userInput = {
    where: auth_user_user_permissionsWhereUniqueInput
    create: XOR<auth_user_user_permissionsCreateWithoutAuth_userInput, auth_user_user_permissionsUncheckedCreateWithoutAuth_userInput>
  }

  export type auth_user_user_permissionsCreateManyAuth_userInputEnvelope = {
    data: auth_user_user_permissionsCreateManyAuth_userInput | auth_user_user_permissionsCreateManyAuth_userInput[]
    skipDuplicates?: boolean
  }

  export type django_admin_logCreateWithoutAuth_userInput = {
    action_time: Date | string
    object_id?: string | null
    object_repr: string
    action_flag: number
    change_message: string
    django_content_type?: django_content_typeCreateNestedOneWithoutDjango_admin_logInput
  }

  export type django_admin_logUncheckedCreateWithoutAuth_userInput = {
    id?: number
    action_time: Date | string
    object_id?: string | null
    object_repr: string
    action_flag: number
    change_message: string
    content_type_id?: number | null
  }

  export type django_admin_logCreateOrConnectWithoutAuth_userInput = {
    where: django_admin_logWhereUniqueInput
    create: XOR<django_admin_logCreateWithoutAuth_userInput, django_admin_logUncheckedCreateWithoutAuth_userInput>
  }

  export type django_admin_logCreateManyAuth_userInputEnvelope = {
    data: django_admin_logCreateManyAuth_userInput | django_admin_logCreateManyAuth_userInput[]
    skipDuplicates?: boolean
  }

  export type ProfileCreateWithoutAuth_userInput = {
    id?: bigint | number
    date_of_birth: Date | string
    signature?: string | null
    administered_groups?: ChatGroupCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageCreateNestedManyWithoutAuthorInput
    album?: AlbumCreateNestedManyWithoutAuthorInput
    post?: PostCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipCreateNestedManyWithoutProfile2Input
  }

  export type ProfileUncheckedCreateWithoutAuth_userInput = {
    id?: bigint | number
    date_of_birth: Date | string
    signature?: string | null
    administered_groups?: ChatGroupUncheckedCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageUncheckedCreateNestedManyWithoutAuthorInput
    album?: AlbumUncheckedCreateNestedManyWithoutAuthorInput
    post?: PostUncheckedCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesUncheckedCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsUncheckedCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarUncheckedCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipUncheckedCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipUncheckedCreateNestedManyWithoutProfile2Input
  }

  export type ProfileCreateOrConnectWithoutAuth_userInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutAuth_userInput, ProfileUncheckedCreateWithoutAuth_userInput>
  }

  export type auth_user_groupsUpsertWithWhereUniqueWithoutAuth_userInput = {
    where: auth_user_groupsWhereUniqueInput
    update: XOR<auth_user_groupsUpdateWithoutAuth_userInput, auth_user_groupsUncheckedUpdateWithoutAuth_userInput>
    create: XOR<auth_user_groupsCreateWithoutAuth_userInput, auth_user_groupsUncheckedCreateWithoutAuth_userInput>
  }

  export type auth_user_groupsUpdateWithWhereUniqueWithoutAuth_userInput = {
    where: auth_user_groupsWhereUniqueInput
    data: XOR<auth_user_groupsUpdateWithoutAuth_userInput, auth_user_groupsUncheckedUpdateWithoutAuth_userInput>
  }

  export type auth_user_groupsUpdateManyWithWhereWithoutAuth_userInput = {
    where: auth_user_groupsScalarWhereInput
    data: XOR<auth_user_groupsUpdateManyMutationInput, auth_user_groupsUncheckedUpdateManyWithoutAuth_userInput>
  }

  export type auth_user_user_permissionsUpsertWithWhereUniqueWithoutAuth_userInput = {
    where: auth_user_user_permissionsWhereUniqueInput
    update: XOR<auth_user_user_permissionsUpdateWithoutAuth_userInput, auth_user_user_permissionsUncheckedUpdateWithoutAuth_userInput>
    create: XOR<auth_user_user_permissionsCreateWithoutAuth_userInput, auth_user_user_permissionsUncheckedCreateWithoutAuth_userInput>
  }

  export type auth_user_user_permissionsUpdateWithWhereUniqueWithoutAuth_userInput = {
    where: auth_user_user_permissionsWhereUniqueInput
    data: XOR<auth_user_user_permissionsUpdateWithoutAuth_userInput, auth_user_user_permissionsUncheckedUpdateWithoutAuth_userInput>
  }

  export type auth_user_user_permissionsUpdateManyWithWhereWithoutAuth_userInput = {
    where: auth_user_user_permissionsScalarWhereInput
    data: XOR<auth_user_user_permissionsUpdateManyMutationInput, auth_user_user_permissionsUncheckedUpdateManyWithoutAuth_userInput>
  }

  export type django_admin_logUpsertWithWhereUniqueWithoutAuth_userInput = {
    where: django_admin_logWhereUniqueInput
    update: XOR<django_admin_logUpdateWithoutAuth_userInput, django_admin_logUncheckedUpdateWithoutAuth_userInput>
    create: XOR<django_admin_logCreateWithoutAuth_userInput, django_admin_logUncheckedCreateWithoutAuth_userInput>
  }

  export type django_admin_logUpdateWithWhereUniqueWithoutAuth_userInput = {
    where: django_admin_logWhereUniqueInput
    data: XOR<django_admin_logUpdateWithoutAuth_userInput, django_admin_logUncheckedUpdateWithoutAuth_userInput>
  }

  export type django_admin_logUpdateManyWithWhereWithoutAuth_userInput = {
    where: django_admin_logScalarWhereInput
    data: XOR<django_admin_logUpdateManyMutationInput, django_admin_logUncheckedUpdateManyWithoutAuth_userInput>
  }

  export type django_admin_logScalarWhereInput = {
    AND?: django_admin_logScalarWhereInput | django_admin_logScalarWhereInput[]
    OR?: django_admin_logScalarWhereInput[]
    NOT?: django_admin_logScalarWhereInput | django_admin_logScalarWhereInput[]
    id?: IntFilter<"django_admin_log"> | number
    action_time?: DateTimeFilter<"django_admin_log"> | Date | string
    object_id?: StringNullableFilter<"django_admin_log"> | string | null
    object_repr?: StringFilter<"django_admin_log"> | string
    action_flag?: IntFilter<"django_admin_log"> | number
    change_message?: StringFilter<"django_admin_log"> | string
    content_type_id?: IntNullableFilter<"django_admin_log"> | number | null
    user_id?: IntFilter<"django_admin_log"> | number
  }

  export type ProfileUpsertWithoutAuth_userInput = {
    update: XOR<ProfileUpdateWithoutAuth_userInput, ProfileUncheckedUpdateWithoutAuth_userInput>
    create: XOR<ProfileCreateWithoutAuth_userInput, ProfileUncheckedCreateWithoutAuth_userInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutAuth_userInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutAuth_userInput, ProfileUncheckedUpdateWithoutAuth_userInput>
  }

  export type ProfileUpdateWithoutAuth_userInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUpdateManyWithoutAuthorNestedInput
    album?: AlbumUpdateManyWithoutAuthorNestedInput
    post?: PostUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUpdateManyWithoutProfile2NestedInput
  }

  export type ProfileUncheckedUpdateWithoutAuth_userInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUncheckedUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUncheckedUpdateManyWithoutAuthorNestedInput
    album?: AlbumUncheckedUpdateManyWithoutAuthorNestedInput
    post?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUncheckedUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUncheckedUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUncheckedUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUncheckedUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUncheckedUpdateManyWithoutProfile2NestedInput
  }

  export type auth_groupCreateWithoutAuth_user_groupsInput = {
    name: string
    auth_group_permissions?: auth_group_permissionsCreateNestedManyWithoutAuth_groupInput
  }

  export type auth_groupUncheckedCreateWithoutAuth_user_groupsInput = {
    id?: number
    name: string
    auth_group_permissions?: auth_group_permissionsUncheckedCreateNestedManyWithoutAuth_groupInput
  }

  export type auth_groupCreateOrConnectWithoutAuth_user_groupsInput = {
    where: auth_groupWhereUniqueInput
    create: XOR<auth_groupCreateWithoutAuth_user_groupsInput, auth_groupUncheckedCreateWithoutAuth_user_groupsInput>
  }

  export type auth_userCreateWithoutAuth_user_groupsInput = {
    password: string
    last_login?: Date | string | null
    is_superuser: boolean
    username: string
    first_name: string
    last_name: string
    email: string
    is_staff: boolean
    is_active: boolean
    date_joined: Date | string
    auth_user_user_permissions?: auth_user_user_permissionsCreateNestedManyWithoutAuth_userInput
    django_admin_log?: django_admin_logCreateNestedManyWithoutAuth_userInput
    user_app_profile?: ProfileCreateNestedOneWithoutAuth_userInput
  }

  export type auth_userUncheckedCreateWithoutAuth_user_groupsInput = {
    id?: number
    password: string
    last_login?: Date | string | null
    is_superuser: boolean
    username: string
    first_name: string
    last_name: string
    email: string
    is_staff: boolean
    is_active: boolean
    date_joined: Date | string
    auth_user_user_permissions?: auth_user_user_permissionsUncheckedCreateNestedManyWithoutAuth_userInput
    django_admin_log?: django_admin_logUncheckedCreateNestedManyWithoutAuth_userInput
    user_app_profile?: ProfileUncheckedCreateNestedOneWithoutAuth_userInput
  }

  export type auth_userCreateOrConnectWithoutAuth_user_groupsInput = {
    where: auth_userWhereUniqueInput
    create: XOR<auth_userCreateWithoutAuth_user_groupsInput, auth_userUncheckedCreateWithoutAuth_user_groupsInput>
  }

  export type auth_groupUpsertWithoutAuth_user_groupsInput = {
    update: XOR<auth_groupUpdateWithoutAuth_user_groupsInput, auth_groupUncheckedUpdateWithoutAuth_user_groupsInput>
    create: XOR<auth_groupCreateWithoutAuth_user_groupsInput, auth_groupUncheckedCreateWithoutAuth_user_groupsInput>
    where?: auth_groupWhereInput
  }

  export type auth_groupUpdateToOneWithWhereWithoutAuth_user_groupsInput = {
    where?: auth_groupWhereInput
    data: XOR<auth_groupUpdateWithoutAuth_user_groupsInput, auth_groupUncheckedUpdateWithoutAuth_user_groupsInput>
  }

  export type auth_groupUpdateWithoutAuth_user_groupsInput = {
    name?: StringFieldUpdateOperationsInput | string
    auth_group_permissions?: auth_group_permissionsUpdateManyWithoutAuth_groupNestedInput
  }

  export type auth_groupUncheckedUpdateWithoutAuth_user_groupsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    auth_group_permissions?: auth_group_permissionsUncheckedUpdateManyWithoutAuth_groupNestedInput
  }

  export type auth_userUpsertWithoutAuth_user_groupsInput = {
    update: XOR<auth_userUpdateWithoutAuth_user_groupsInput, auth_userUncheckedUpdateWithoutAuth_user_groupsInput>
    create: XOR<auth_userCreateWithoutAuth_user_groupsInput, auth_userUncheckedCreateWithoutAuth_user_groupsInput>
    where?: auth_userWhereInput
  }

  export type auth_userUpdateToOneWithWhereWithoutAuth_user_groupsInput = {
    where?: auth_userWhereInput
    data: XOR<auth_userUpdateWithoutAuth_user_groupsInput, auth_userUncheckedUpdateWithoutAuth_user_groupsInput>
  }

  export type auth_userUpdateWithoutAuth_user_groupsInput = {
    password?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_superuser?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    is_staff?: BoolFieldUpdateOperationsInput | boolean
    is_active?: BoolFieldUpdateOperationsInput | boolean
    date_joined?: DateTimeFieldUpdateOperationsInput | Date | string
    auth_user_user_permissions?: auth_user_user_permissionsUpdateManyWithoutAuth_userNestedInput
    django_admin_log?: django_admin_logUpdateManyWithoutAuth_userNestedInput
    user_app_profile?: ProfileUpdateOneWithoutAuth_userNestedInput
  }

  export type auth_userUncheckedUpdateWithoutAuth_user_groupsInput = {
    id?: IntFieldUpdateOperationsInput | number
    password?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_superuser?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    is_staff?: BoolFieldUpdateOperationsInput | boolean
    is_active?: BoolFieldUpdateOperationsInput | boolean
    date_joined?: DateTimeFieldUpdateOperationsInput | Date | string
    auth_user_user_permissions?: auth_user_user_permissionsUncheckedUpdateManyWithoutAuth_userNestedInput
    django_admin_log?: django_admin_logUncheckedUpdateManyWithoutAuth_userNestedInput
    user_app_profile?: ProfileUncheckedUpdateOneWithoutAuth_userNestedInput
  }

  export type auth_permissionCreateWithoutAuth_user_user_permissionsInput = {
    name: string
    codename: string
    auth_group_permissions?: auth_group_permissionsCreateNestedManyWithoutAuth_permissionInput
    django_content_type: django_content_typeCreateNestedOneWithoutAuth_permissionInput
  }

  export type auth_permissionUncheckedCreateWithoutAuth_user_user_permissionsInput = {
    id?: number
    name: string
    content_type_id: number
    codename: string
    auth_group_permissions?: auth_group_permissionsUncheckedCreateNestedManyWithoutAuth_permissionInput
  }

  export type auth_permissionCreateOrConnectWithoutAuth_user_user_permissionsInput = {
    where: auth_permissionWhereUniqueInput
    create: XOR<auth_permissionCreateWithoutAuth_user_user_permissionsInput, auth_permissionUncheckedCreateWithoutAuth_user_user_permissionsInput>
  }

  export type auth_userCreateWithoutAuth_user_user_permissionsInput = {
    password: string
    last_login?: Date | string | null
    is_superuser: boolean
    username: string
    first_name: string
    last_name: string
    email: string
    is_staff: boolean
    is_active: boolean
    date_joined: Date | string
    auth_user_groups?: auth_user_groupsCreateNestedManyWithoutAuth_userInput
    django_admin_log?: django_admin_logCreateNestedManyWithoutAuth_userInput
    user_app_profile?: ProfileCreateNestedOneWithoutAuth_userInput
  }

  export type auth_userUncheckedCreateWithoutAuth_user_user_permissionsInput = {
    id?: number
    password: string
    last_login?: Date | string | null
    is_superuser: boolean
    username: string
    first_name: string
    last_name: string
    email: string
    is_staff: boolean
    is_active: boolean
    date_joined: Date | string
    auth_user_groups?: auth_user_groupsUncheckedCreateNestedManyWithoutAuth_userInput
    django_admin_log?: django_admin_logUncheckedCreateNestedManyWithoutAuth_userInput
    user_app_profile?: ProfileUncheckedCreateNestedOneWithoutAuth_userInput
  }

  export type auth_userCreateOrConnectWithoutAuth_user_user_permissionsInput = {
    where: auth_userWhereUniqueInput
    create: XOR<auth_userCreateWithoutAuth_user_user_permissionsInput, auth_userUncheckedCreateWithoutAuth_user_user_permissionsInput>
  }

  export type auth_permissionUpsertWithoutAuth_user_user_permissionsInput = {
    update: XOR<auth_permissionUpdateWithoutAuth_user_user_permissionsInput, auth_permissionUncheckedUpdateWithoutAuth_user_user_permissionsInput>
    create: XOR<auth_permissionCreateWithoutAuth_user_user_permissionsInput, auth_permissionUncheckedCreateWithoutAuth_user_user_permissionsInput>
    where?: auth_permissionWhereInput
  }

  export type auth_permissionUpdateToOneWithWhereWithoutAuth_user_user_permissionsInput = {
    where?: auth_permissionWhereInput
    data: XOR<auth_permissionUpdateWithoutAuth_user_user_permissionsInput, auth_permissionUncheckedUpdateWithoutAuth_user_user_permissionsInput>
  }

  export type auth_permissionUpdateWithoutAuth_user_user_permissionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    codename?: StringFieldUpdateOperationsInput | string
    auth_group_permissions?: auth_group_permissionsUpdateManyWithoutAuth_permissionNestedInput
    django_content_type?: django_content_typeUpdateOneRequiredWithoutAuth_permissionNestedInput
  }

  export type auth_permissionUncheckedUpdateWithoutAuth_user_user_permissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    content_type_id?: IntFieldUpdateOperationsInput | number
    codename?: StringFieldUpdateOperationsInput | string
    auth_group_permissions?: auth_group_permissionsUncheckedUpdateManyWithoutAuth_permissionNestedInput
  }

  export type auth_userUpsertWithoutAuth_user_user_permissionsInput = {
    update: XOR<auth_userUpdateWithoutAuth_user_user_permissionsInput, auth_userUncheckedUpdateWithoutAuth_user_user_permissionsInput>
    create: XOR<auth_userCreateWithoutAuth_user_user_permissionsInput, auth_userUncheckedCreateWithoutAuth_user_user_permissionsInput>
    where?: auth_userWhereInput
  }

  export type auth_userUpdateToOneWithWhereWithoutAuth_user_user_permissionsInput = {
    where?: auth_userWhereInput
    data: XOR<auth_userUpdateWithoutAuth_user_user_permissionsInput, auth_userUncheckedUpdateWithoutAuth_user_user_permissionsInput>
  }

  export type auth_userUpdateWithoutAuth_user_user_permissionsInput = {
    password?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_superuser?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    is_staff?: BoolFieldUpdateOperationsInput | boolean
    is_active?: BoolFieldUpdateOperationsInput | boolean
    date_joined?: DateTimeFieldUpdateOperationsInput | Date | string
    auth_user_groups?: auth_user_groupsUpdateManyWithoutAuth_userNestedInput
    django_admin_log?: django_admin_logUpdateManyWithoutAuth_userNestedInput
    user_app_profile?: ProfileUpdateOneWithoutAuth_userNestedInput
  }

  export type auth_userUncheckedUpdateWithoutAuth_user_user_permissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    password?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_superuser?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    is_staff?: BoolFieldUpdateOperationsInput | boolean
    is_active?: BoolFieldUpdateOperationsInput | boolean
    date_joined?: DateTimeFieldUpdateOperationsInput | Date | string
    auth_user_groups?: auth_user_groupsUncheckedUpdateManyWithoutAuth_userNestedInput
    django_admin_log?: django_admin_logUncheckedUpdateManyWithoutAuth_userNestedInput
    user_app_profile?: ProfileUncheckedUpdateOneWithoutAuth_userNestedInput
  }

  export type django_content_typeCreateWithoutDjango_admin_logInput = {
    app_label: string
    model: string
    auth_permission?: auth_permissionCreateNestedManyWithoutDjango_content_typeInput
  }

  export type django_content_typeUncheckedCreateWithoutDjango_admin_logInput = {
    id?: number
    app_label: string
    model: string
    auth_permission?: auth_permissionUncheckedCreateNestedManyWithoutDjango_content_typeInput
  }

  export type django_content_typeCreateOrConnectWithoutDjango_admin_logInput = {
    where: django_content_typeWhereUniqueInput
    create: XOR<django_content_typeCreateWithoutDjango_admin_logInput, django_content_typeUncheckedCreateWithoutDjango_admin_logInput>
  }

  export type auth_userCreateWithoutDjango_admin_logInput = {
    password: string
    last_login?: Date | string | null
    is_superuser: boolean
    username: string
    first_name: string
    last_name: string
    email: string
    is_staff: boolean
    is_active: boolean
    date_joined: Date | string
    auth_user_groups?: auth_user_groupsCreateNestedManyWithoutAuth_userInput
    auth_user_user_permissions?: auth_user_user_permissionsCreateNestedManyWithoutAuth_userInput
    user_app_profile?: ProfileCreateNestedOneWithoutAuth_userInput
  }

  export type auth_userUncheckedCreateWithoutDjango_admin_logInput = {
    id?: number
    password: string
    last_login?: Date | string | null
    is_superuser: boolean
    username: string
    first_name: string
    last_name: string
    email: string
    is_staff: boolean
    is_active: boolean
    date_joined: Date | string
    auth_user_groups?: auth_user_groupsUncheckedCreateNestedManyWithoutAuth_userInput
    auth_user_user_permissions?: auth_user_user_permissionsUncheckedCreateNestedManyWithoutAuth_userInput
    user_app_profile?: ProfileUncheckedCreateNestedOneWithoutAuth_userInput
  }

  export type auth_userCreateOrConnectWithoutDjango_admin_logInput = {
    where: auth_userWhereUniqueInput
    create: XOR<auth_userCreateWithoutDjango_admin_logInput, auth_userUncheckedCreateWithoutDjango_admin_logInput>
  }

  export type django_content_typeUpsertWithoutDjango_admin_logInput = {
    update: XOR<django_content_typeUpdateWithoutDjango_admin_logInput, django_content_typeUncheckedUpdateWithoutDjango_admin_logInput>
    create: XOR<django_content_typeCreateWithoutDjango_admin_logInput, django_content_typeUncheckedCreateWithoutDjango_admin_logInput>
    where?: django_content_typeWhereInput
  }

  export type django_content_typeUpdateToOneWithWhereWithoutDjango_admin_logInput = {
    where?: django_content_typeWhereInput
    data: XOR<django_content_typeUpdateWithoutDjango_admin_logInput, django_content_typeUncheckedUpdateWithoutDjango_admin_logInput>
  }

  export type django_content_typeUpdateWithoutDjango_admin_logInput = {
    app_label?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    auth_permission?: auth_permissionUpdateManyWithoutDjango_content_typeNestedInput
  }

  export type django_content_typeUncheckedUpdateWithoutDjango_admin_logInput = {
    id?: IntFieldUpdateOperationsInput | number
    app_label?: StringFieldUpdateOperationsInput | string
    model?: StringFieldUpdateOperationsInput | string
    auth_permission?: auth_permissionUncheckedUpdateManyWithoutDjango_content_typeNestedInput
  }

  export type auth_userUpsertWithoutDjango_admin_logInput = {
    update: XOR<auth_userUpdateWithoutDjango_admin_logInput, auth_userUncheckedUpdateWithoutDjango_admin_logInput>
    create: XOR<auth_userCreateWithoutDjango_admin_logInput, auth_userUncheckedCreateWithoutDjango_admin_logInput>
    where?: auth_userWhereInput
  }

  export type auth_userUpdateToOneWithWhereWithoutDjango_admin_logInput = {
    where?: auth_userWhereInput
    data: XOR<auth_userUpdateWithoutDjango_admin_logInput, auth_userUncheckedUpdateWithoutDjango_admin_logInput>
  }

  export type auth_userUpdateWithoutDjango_admin_logInput = {
    password?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_superuser?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    is_staff?: BoolFieldUpdateOperationsInput | boolean
    is_active?: BoolFieldUpdateOperationsInput | boolean
    date_joined?: DateTimeFieldUpdateOperationsInput | Date | string
    auth_user_groups?: auth_user_groupsUpdateManyWithoutAuth_userNestedInput
    auth_user_user_permissions?: auth_user_user_permissionsUpdateManyWithoutAuth_userNestedInput
    user_app_profile?: ProfileUpdateOneWithoutAuth_userNestedInput
  }

  export type auth_userUncheckedUpdateWithoutDjango_admin_logInput = {
    id?: IntFieldUpdateOperationsInput | number
    password?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_superuser?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    is_staff?: BoolFieldUpdateOperationsInput | boolean
    is_active?: BoolFieldUpdateOperationsInput | boolean
    date_joined?: DateTimeFieldUpdateOperationsInput | Date | string
    auth_user_groups?: auth_user_groupsUncheckedUpdateManyWithoutAuth_userNestedInput
    auth_user_user_permissions?: auth_user_user_permissionsUncheckedUpdateManyWithoutAuth_userNestedInput
    user_app_profile?: ProfileUncheckedUpdateOneWithoutAuth_userNestedInput
  }

  export type auth_permissionCreateWithoutDjango_content_typeInput = {
    name: string
    codename: string
    auth_group_permissions?: auth_group_permissionsCreateNestedManyWithoutAuth_permissionInput
    auth_user_user_permissions?: auth_user_user_permissionsCreateNestedManyWithoutAuth_permissionInput
  }

  export type auth_permissionUncheckedCreateWithoutDjango_content_typeInput = {
    id?: number
    name: string
    codename: string
    auth_group_permissions?: auth_group_permissionsUncheckedCreateNestedManyWithoutAuth_permissionInput
    auth_user_user_permissions?: auth_user_user_permissionsUncheckedCreateNestedManyWithoutAuth_permissionInput
  }

  export type auth_permissionCreateOrConnectWithoutDjango_content_typeInput = {
    where: auth_permissionWhereUniqueInput
    create: XOR<auth_permissionCreateWithoutDjango_content_typeInput, auth_permissionUncheckedCreateWithoutDjango_content_typeInput>
  }

  export type auth_permissionCreateManyDjango_content_typeInputEnvelope = {
    data: auth_permissionCreateManyDjango_content_typeInput | auth_permissionCreateManyDjango_content_typeInput[]
    skipDuplicates?: boolean
  }

  export type django_admin_logCreateWithoutDjango_content_typeInput = {
    action_time: Date | string
    object_id?: string | null
    object_repr: string
    action_flag: number
    change_message: string
    auth_user: auth_userCreateNestedOneWithoutDjango_admin_logInput
  }

  export type django_admin_logUncheckedCreateWithoutDjango_content_typeInput = {
    id?: number
    action_time: Date | string
    object_id?: string | null
    object_repr: string
    action_flag: number
    change_message: string
    user_id: number
  }

  export type django_admin_logCreateOrConnectWithoutDjango_content_typeInput = {
    where: django_admin_logWhereUniqueInput
    create: XOR<django_admin_logCreateWithoutDjango_content_typeInput, django_admin_logUncheckedCreateWithoutDjango_content_typeInput>
  }

  export type django_admin_logCreateManyDjango_content_typeInputEnvelope = {
    data: django_admin_logCreateManyDjango_content_typeInput | django_admin_logCreateManyDjango_content_typeInput[]
    skipDuplicates?: boolean
  }

  export type auth_permissionUpsertWithWhereUniqueWithoutDjango_content_typeInput = {
    where: auth_permissionWhereUniqueInput
    update: XOR<auth_permissionUpdateWithoutDjango_content_typeInput, auth_permissionUncheckedUpdateWithoutDjango_content_typeInput>
    create: XOR<auth_permissionCreateWithoutDjango_content_typeInput, auth_permissionUncheckedCreateWithoutDjango_content_typeInput>
  }

  export type auth_permissionUpdateWithWhereUniqueWithoutDjango_content_typeInput = {
    where: auth_permissionWhereUniqueInput
    data: XOR<auth_permissionUpdateWithoutDjango_content_typeInput, auth_permissionUncheckedUpdateWithoutDjango_content_typeInput>
  }

  export type auth_permissionUpdateManyWithWhereWithoutDjango_content_typeInput = {
    where: auth_permissionScalarWhereInput
    data: XOR<auth_permissionUpdateManyMutationInput, auth_permissionUncheckedUpdateManyWithoutDjango_content_typeInput>
  }

  export type auth_permissionScalarWhereInput = {
    AND?: auth_permissionScalarWhereInput | auth_permissionScalarWhereInput[]
    OR?: auth_permissionScalarWhereInput[]
    NOT?: auth_permissionScalarWhereInput | auth_permissionScalarWhereInput[]
    id?: IntFilter<"auth_permission"> | number
    name?: StringFilter<"auth_permission"> | string
    content_type_id?: IntFilter<"auth_permission"> | number
    codename?: StringFilter<"auth_permission"> | string
  }

  export type django_admin_logUpsertWithWhereUniqueWithoutDjango_content_typeInput = {
    where: django_admin_logWhereUniqueInput
    update: XOR<django_admin_logUpdateWithoutDjango_content_typeInput, django_admin_logUncheckedUpdateWithoutDjango_content_typeInput>
    create: XOR<django_admin_logCreateWithoutDjango_content_typeInput, django_admin_logUncheckedCreateWithoutDjango_content_typeInput>
  }

  export type django_admin_logUpdateWithWhereUniqueWithoutDjango_content_typeInput = {
    where: django_admin_logWhereUniqueInput
    data: XOR<django_admin_logUpdateWithoutDjango_content_typeInput, django_admin_logUncheckedUpdateWithoutDjango_content_typeInput>
  }

  export type django_admin_logUpdateManyWithWhereWithoutDjango_content_typeInput = {
    where: django_admin_logScalarWhereInput
    data: XOR<django_admin_logUpdateManyMutationInput, django_admin_logUncheckedUpdateManyWithoutDjango_content_typeInput>
  }

  export type ImageCreateWithoutPost_app_post_imagesInput = {
    id?: bigint | number
    filename: string
    file: string
    uploaded_at: Date | string
    album_images?: post_app_album_imagesCreateNestedManyWithoutImageInput
  }

  export type ImageUncheckedCreateWithoutPost_app_post_imagesInput = {
    id?: bigint | number
    filename: string
    file: string
    uploaded_at: Date | string
    album_images?: post_app_album_imagesUncheckedCreateNestedManyWithoutImageInput
  }

  export type ImageCreateOrConnectWithoutPost_app_post_imagesInput = {
    where: ImageWhereUniqueInput
    create: XOR<ImageCreateWithoutPost_app_post_imagesInput, ImageUncheckedCreateWithoutPost_app_post_imagesInput>
  }

  export type PostCreateWithoutPost_app_post_imagesInput = {
    id?: bigint | number
    title: string
    content: string
    topic: string
    post_app_link?: LinkCreateNestedManyWithoutPost_app_postInput
    author: ProfileCreateNestedOneWithoutPostInput
    likes?: post_app_post_likesCreateNestedManyWithoutPostInput
    post_app_post_tags?: post_app_post_tagsCreateNestedManyWithoutPost_app_postInput
    views?: post_app_post_viewsCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutPost_app_post_imagesInput = {
    id?: bigint | number
    title: string
    content: string
    author_id: bigint | number
    topic: string
    post_app_link?: LinkUncheckedCreateNestedManyWithoutPost_app_postInput
    likes?: post_app_post_likesUncheckedCreateNestedManyWithoutPostInput
    post_app_post_tags?: post_app_post_tagsUncheckedCreateNestedManyWithoutPost_app_postInput
    views?: post_app_post_viewsUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutPost_app_post_imagesInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutPost_app_post_imagesInput, PostUncheckedCreateWithoutPost_app_post_imagesInput>
  }

  export type ImageUpsertWithoutPost_app_post_imagesInput = {
    update: XOR<ImageUpdateWithoutPost_app_post_imagesInput, ImageUncheckedUpdateWithoutPost_app_post_imagesInput>
    create: XOR<ImageCreateWithoutPost_app_post_imagesInput, ImageUncheckedCreateWithoutPost_app_post_imagesInput>
    where?: ImageWhereInput
  }

  export type ImageUpdateToOneWithWhereWithoutPost_app_post_imagesInput = {
    where?: ImageWhereInput
    data: XOR<ImageUpdateWithoutPost_app_post_imagesInput, ImageUncheckedUpdateWithoutPost_app_post_imagesInput>
  }

  export type ImageUpdateWithoutPost_app_post_imagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    filename?: StringFieldUpdateOperationsInput | string
    file?: StringFieldUpdateOperationsInput | string
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
    album_images?: post_app_album_imagesUpdateManyWithoutImageNestedInput
  }

  export type ImageUncheckedUpdateWithoutPost_app_post_imagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    filename?: StringFieldUpdateOperationsInput | string
    file?: StringFieldUpdateOperationsInput | string
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
    album_images?: post_app_album_imagesUncheckedUpdateManyWithoutImageNestedInput
  }

  export type PostUpsertWithoutPost_app_post_imagesInput = {
    update: XOR<PostUpdateWithoutPost_app_post_imagesInput, PostUncheckedUpdateWithoutPost_app_post_imagesInput>
    create: XOR<PostCreateWithoutPost_app_post_imagesInput, PostUncheckedCreateWithoutPost_app_post_imagesInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutPost_app_post_imagesInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutPost_app_post_imagesInput, PostUncheckedUpdateWithoutPost_app_post_imagesInput>
  }

  export type PostUpdateWithoutPost_app_post_imagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    post_app_link?: LinkUpdateManyWithoutPost_app_postNestedInput
    author?: ProfileUpdateOneRequiredWithoutPostNestedInput
    likes?: post_app_post_likesUpdateManyWithoutPostNestedInput
    post_app_post_tags?: post_app_post_tagsUpdateManyWithoutPost_app_postNestedInput
    views?: post_app_post_viewsUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutPost_app_post_imagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
    topic?: StringFieldUpdateOperationsInput | string
    post_app_link?: LinkUncheckedUpdateManyWithoutPost_app_postNestedInput
    likes?: post_app_post_likesUncheckedUpdateManyWithoutPostNestedInput
    post_app_post_tags?: post_app_post_tagsUncheckedUpdateManyWithoutPost_app_postNestedInput
    views?: post_app_post_viewsUncheckedUpdateManyWithoutPostNestedInput
  }

  export type PostCreateWithoutPost_app_post_tagsInput = {
    id?: bigint | number
    title: string
    content: string
    topic: string
    post_app_link?: LinkCreateNestedManyWithoutPost_app_postInput
    author: ProfileCreateNestedOneWithoutPostInput
    post_app_post_images?: post_app_post_imagesCreateNestedManyWithoutPost_app_postInput
    likes?: post_app_post_likesCreateNestedManyWithoutPostInput
    views?: post_app_post_viewsCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutPost_app_post_tagsInput = {
    id?: bigint | number
    title: string
    content: string
    author_id: bigint | number
    topic: string
    post_app_link?: LinkUncheckedCreateNestedManyWithoutPost_app_postInput
    post_app_post_images?: post_app_post_imagesUncheckedCreateNestedManyWithoutPost_app_postInput
    likes?: post_app_post_likesUncheckedCreateNestedManyWithoutPostInput
    views?: post_app_post_viewsUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutPost_app_post_tagsInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutPost_app_post_tagsInput, PostUncheckedCreateWithoutPost_app_post_tagsInput>
  }

  export type TagsCreateWithoutPost_app_post_tagsInput = {
    id?: bigint | number
    name: string
    post_app_album?: AlbumCreateNestedManyWithoutPost_app_tagInput
  }

  export type TagsUncheckedCreateWithoutPost_app_post_tagsInput = {
    id?: bigint | number
    name: string
    post_app_album?: AlbumUncheckedCreateNestedManyWithoutPost_app_tagInput
  }

  export type TagsCreateOrConnectWithoutPost_app_post_tagsInput = {
    where: TagsWhereUniqueInput
    create: XOR<TagsCreateWithoutPost_app_post_tagsInput, TagsUncheckedCreateWithoutPost_app_post_tagsInput>
  }

  export type PostUpsertWithoutPost_app_post_tagsInput = {
    update: XOR<PostUpdateWithoutPost_app_post_tagsInput, PostUncheckedUpdateWithoutPost_app_post_tagsInput>
    create: XOR<PostCreateWithoutPost_app_post_tagsInput, PostUncheckedCreateWithoutPost_app_post_tagsInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutPost_app_post_tagsInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutPost_app_post_tagsInput, PostUncheckedUpdateWithoutPost_app_post_tagsInput>
  }

  export type PostUpdateWithoutPost_app_post_tagsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    post_app_link?: LinkUpdateManyWithoutPost_app_postNestedInput
    author?: ProfileUpdateOneRequiredWithoutPostNestedInput
    post_app_post_images?: post_app_post_imagesUpdateManyWithoutPost_app_postNestedInput
    likes?: post_app_post_likesUpdateManyWithoutPostNestedInput
    views?: post_app_post_viewsUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutPost_app_post_tagsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
    topic?: StringFieldUpdateOperationsInput | string
    post_app_link?: LinkUncheckedUpdateManyWithoutPost_app_postNestedInput
    post_app_post_images?: post_app_post_imagesUncheckedUpdateManyWithoutPost_app_postNestedInput
    likes?: post_app_post_likesUncheckedUpdateManyWithoutPostNestedInput
    views?: post_app_post_viewsUncheckedUpdateManyWithoutPostNestedInput
  }

  export type TagsUpsertWithoutPost_app_post_tagsInput = {
    update: XOR<TagsUpdateWithoutPost_app_post_tagsInput, TagsUncheckedUpdateWithoutPost_app_post_tagsInput>
    create: XOR<TagsCreateWithoutPost_app_post_tagsInput, TagsUncheckedCreateWithoutPost_app_post_tagsInput>
    where?: TagsWhereInput
  }

  export type TagsUpdateToOneWithWhereWithoutPost_app_post_tagsInput = {
    where?: TagsWhereInput
    data: XOR<TagsUpdateWithoutPost_app_post_tagsInput, TagsUncheckedUpdateWithoutPost_app_post_tagsInput>
  }

  export type TagsUpdateWithoutPost_app_post_tagsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    post_app_album?: AlbumUpdateManyWithoutPost_app_tagNestedInput
  }

  export type TagsUncheckedUpdateWithoutPost_app_post_tagsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    post_app_album?: AlbumUncheckedUpdateManyWithoutPost_app_tagNestedInput
  }

  export type ProfileCreateWithoutAlbumInput = {
    id?: bigint | number
    date_of_birth: Date | string
    signature?: string | null
    administered_groups?: ChatGroupCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageCreateNestedManyWithoutAuthorInput
    post?: PostCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipCreateNestedManyWithoutProfile2Input
    auth_user: auth_userCreateNestedOneWithoutUser_app_profileInput
  }

  export type ProfileUncheckedCreateWithoutAlbumInput = {
    id?: bigint | number
    date_of_birth: Date | string
    user_id: number
    signature?: string | null
    administered_groups?: ChatGroupUncheckedCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageUncheckedCreateNestedManyWithoutAuthorInput
    post?: PostUncheckedCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesUncheckedCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsUncheckedCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarUncheckedCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipUncheckedCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipUncheckedCreateNestedManyWithoutProfile2Input
  }

  export type ProfileCreateOrConnectWithoutAlbumInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutAlbumInput, ProfileUncheckedCreateWithoutAlbumInput>
  }

  export type TagsCreateWithoutPost_app_albumInput = {
    id?: bigint | number
    name: string
    post_app_post_tags?: post_app_post_tagsCreateNestedManyWithoutPost_app_tagInput
  }

  export type TagsUncheckedCreateWithoutPost_app_albumInput = {
    id?: bigint | number
    name: string
    post_app_post_tags?: post_app_post_tagsUncheckedCreateNestedManyWithoutPost_app_tagInput
  }

  export type TagsCreateOrConnectWithoutPost_app_albumInput = {
    where: TagsWhereUniqueInput
    create: XOR<TagsCreateWithoutPost_app_albumInput, TagsUncheckedCreateWithoutPost_app_albumInput>
  }

  export type post_app_album_imagesCreateWithoutAlbumInput = {
    id?: bigint | number
    image: ImageCreateNestedOneWithoutAlbum_imagesInput
  }

  export type post_app_album_imagesUncheckedCreateWithoutAlbumInput = {
    id?: bigint | number
    image_id: bigint | number
  }

  export type post_app_album_imagesCreateOrConnectWithoutAlbumInput = {
    where: post_app_album_imagesWhereUniqueInput
    create: XOR<post_app_album_imagesCreateWithoutAlbumInput, post_app_album_imagesUncheckedCreateWithoutAlbumInput>
  }

  export type post_app_album_imagesCreateManyAlbumInputEnvelope = {
    data: post_app_album_imagesCreateManyAlbumInput | post_app_album_imagesCreateManyAlbumInput[]
    skipDuplicates?: boolean
  }

  export type ProfileUpsertWithoutAlbumInput = {
    update: XOR<ProfileUpdateWithoutAlbumInput, ProfileUncheckedUpdateWithoutAlbumInput>
    create: XOR<ProfileCreateWithoutAlbumInput, ProfileUncheckedCreateWithoutAlbumInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutAlbumInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutAlbumInput, ProfileUncheckedUpdateWithoutAlbumInput>
  }

  export type ProfileUpdateWithoutAlbumInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUpdateManyWithoutAuthorNestedInput
    post?: PostUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUpdateManyWithoutProfile2NestedInput
    auth_user?: auth_userUpdateOneRequiredWithoutUser_app_profileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutAlbumInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUncheckedUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUncheckedUpdateManyWithoutAuthorNestedInput
    post?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUncheckedUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUncheckedUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUncheckedUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUncheckedUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUncheckedUpdateManyWithoutProfile2NestedInput
  }

  export type TagsUpsertWithoutPost_app_albumInput = {
    update: XOR<TagsUpdateWithoutPost_app_albumInput, TagsUncheckedUpdateWithoutPost_app_albumInput>
    create: XOR<TagsCreateWithoutPost_app_albumInput, TagsUncheckedCreateWithoutPost_app_albumInput>
    where?: TagsWhereInput
  }

  export type TagsUpdateToOneWithWhereWithoutPost_app_albumInput = {
    where?: TagsWhereInput
    data: XOR<TagsUpdateWithoutPost_app_albumInput, TagsUncheckedUpdateWithoutPost_app_albumInput>
  }

  export type TagsUpdateWithoutPost_app_albumInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    post_app_post_tags?: post_app_post_tagsUpdateManyWithoutPost_app_tagNestedInput
  }

  export type TagsUncheckedUpdateWithoutPost_app_albumInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    post_app_post_tags?: post_app_post_tagsUncheckedUpdateManyWithoutPost_app_tagNestedInput
  }

  export type post_app_album_imagesUpsertWithWhereUniqueWithoutAlbumInput = {
    where: post_app_album_imagesWhereUniqueInput
    update: XOR<post_app_album_imagesUpdateWithoutAlbumInput, post_app_album_imagesUncheckedUpdateWithoutAlbumInput>
    create: XOR<post_app_album_imagesCreateWithoutAlbumInput, post_app_album_imagesUncheckedCreateWithoutAlbumInput>
  }

  export type post_app_album_imagesUpdateWithWhereUniqueWithoutAlbumInput = {
    where: post_app_album_imagesWhereUniqueInput
    data: XOR<post_app_album_imagesUpdateWithoutAlbumInput, post_app_album_imagesUncheckedUpdateWithoutAlbumInput>
  }

  export type post_app_album_imagesUpdateManyWithWhereWithoutAlbumInput = {
    where: post_app_album_imagesScalarWhereInput
    data: XOR<post_app_album_imagesUpdateManyMutationInput, post_app_album_imagesUncheckedUpdateManyWithoutAlbumInput>
  }

  export type post_app_album_imagesScalarWhereInput = {
    AND?: post_app_album_imagesScalarWhereInput | post_app_album_imagesScalarWhereInput[]
    OR?: post_app_album_imagesScalarWhereInput[]
    NOT?: post_app_album_imagesScalarWhereInput | post_app_album_imagesScalarWhereInput[]
    id?: BigIntFilter<"post_app_album_images"> | bigint | number
    album_id?: BigIntFilter<"post_app_album_images"> | bigint | number
    image_id?: BigIntFilter<"post_app_album_images"> | bigint | number
  }

  export type AlbumCreateWithoutImagesInput = {
    id?: bigint | number
    name: string
    created_at: Date | string
    preview_image?: string | null
    shown: boolean
    author: ProfileCreateNestedOneWithoutAlbumInput
    post_app_tag: TagsCreateNestedOneWithoutPost_app_albumInput
  }

  export type AlbumUncheckedCreateWithoutImagesInput = {
    id?: bigint | number
    name: string
    created_at: Date | string
    preview_image?: string | null
    shown: boolean
    topic_id: bigint | number
    author_id: bigint | number
  }

  export type AlbumCreateOrConnectWithoutImagesInput = {
    where: AlbumWhereUniqueInput
    create: XOR<AlbumCreateWithoutImagesInput, AlbumUncheckedCreateWithoutImagesInput>
  }

  export type ImageCreateWithoutAlbum_imagesInput = {
    id?: bigint | number
    filename: string
    file: string
    uploaded_at: Date | string
    post_app_post_images?: post_app_post_imagesCreateNestedManyWithoutPost_app_imageInput
  }

  export type ImageUncheckedCreateWithoutAlbum_imagesInput = {
    id?: bigint | number
    filename: string
    file: string
    uploaded_at: Date | string
    post_app_post_images?: post_app_post_imagesUncheckedCreateNestedManyWithoutPost_app_imageInput
  }

  export type ImageCreateOrConnectWithoutAlbum_imagesInput = {
    where: ImageWhereUniqueInput
    create: XOR<ImageCreateWithoutAlbum_imagesInput, ImageUncheckedCreateWithoutAlbum_imagesInput>
  }

  export type AlbumUpsertWithoutImagesInput = {
    update: XOR<AlbumUpdateWithoutImagesInput, AlbumUncheckedUpdateWithoutImagesInput>
    create: XOR<AlbumCreateWithoutImagesInput, AlbumUncheckedCreateWithoutImagesInput>
    where?: AlbumWhereInput
  }

  export type AlbumUpdateToOneWithWhereWithoutImagesInput = {
    where?: AlbumWhereInput
    data: XOR<AlbumUpdateWithoutImagesInput, AlbumUncheckedUpdateWithoutImagesInput>
  }

  export type AlbumUpdateWithoutImagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    preview_image?: NullableStringFieldUpdateOperationsInput | string | null
    shown?: BoolFieldUpdateOperationsInput | boolean
    author?: ProfileUpdateOneRequiredWithoutAlbumNestedInput
    post_app_tag?: TagsUpdateOneRequiredWithoutPost_app_albumNestedInput
  }

  export type AlbumUncheckedUpdateWithoutImagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    preview_image?: NullableStringFieldUpdateOperationsInput | string | null
    shown?: BoolFieldUpdateOperationsInput | boolean
    topic_id?: BigIntFieldUpdateOperationsInput | bigint | number
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type ImageUpsertWithoutAlbum_imagesInput = {
    update: XOR<ImageUpdateWithoutAlbum_imagesInput, ImageUncheckedUpdateWithoutAlbum_imagesInput>
    create: XOR<ImageCreateWithoutAlbum_imagesInput, ImageUncheckedCreateWithoutAlbum_imagesInput>
    where?: ImageWhereInput
  }

  export type ImageUpdateToOneWithWhereWithoutAlbum_imagesInput = {
    where?: ImageWhereInput
    data: XOR<ImageUpdateWithoutAlbum_imagesInput, ImageUncheckedUpdateWithoutAlbum_imagesInput>
  }

  export type ImageUpdateWithoutAlbum_imagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    filename?: StringFieldUpdateOperationsInput | string
    file?: StringFieldUpdateOperationsInput | string
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_app_post_images?: post_app_post_imagesUpdateManyWithoutPost_app_imageNestedInput
  }

  export type ImageUncheckedUpdateWithoutAlbum_imagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    filename?: StringFieldUpdateOperationsInput | string
    file?: StringFieldUpdateOperationsInput | string
    uploaded_at?: DateTimeFieldUpdateOperationsInput | Date | string
    post_app_post_images?: post_app_post_imagesUncheckedUpdateManyWithoutPost_app_imageNestedInput
  }

  export type ProfileCreateWithoutAdministered_groupsInput = {
    id?: bigint | number
    date_of_birth: Date | string
    signature?: string | null
    chat_group_members?: chat_app_chatgroup_membersCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageCreateNestedManyWithoutAuthorInput
    album?: AlbumCreateNestedManyWithoutAuthorInput
    post?: PostCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipCreateNestedManyWithoutProfile2Input
    auth_user: auth_userCreateNestedOneWithoutUser_app_profileInput
  }

  export type ProfileUncheckedCreateWithoutAdministered_groupsInput = {
    id?: bigint | number
    date_of_birth: Date | string
    user_id: number
    signature?: string | null
    chat_group_members?: chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageUncheckedCreateNestedManyWithoutAuthorInput
    album?: AlbumUncheckedCreateNestedManyWithoutAuthorInput
    post?: PostUncheckedCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesUncheckedCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsUncheckedCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarUncheckedCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipUncheckedCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipUncheckedCreateNestedManyWithoutProfile2Input
  }

  export type ProfileCreateOrConnectWithoutAdministered_groupsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutAdministered_groupsInput, ProfileUncheckedCreateWithoutAdministered_groupsInput>
  }

  export type chat_app_chatgroup_membersCreateWithoutChat_app_chatgroupInput = {
    id?: bigint | number
    profile: ProfileCreateNestedOneWithoutChat_group_membersInput
  }

  export type chat_app_chatgroup_membersUncheckedCreateWithoutChat_app_chatgroupInput = {
    id?: bigint | number
    profile_id: bigint | number
  }

  export type chat_app_chatgroup_membersCreateOrConnectWithoutChat_app_chatgroupInput = {
    where: chat_app_chatgroup_membersWhereUniqueInput
    create: XOR<chat_app_chatgroup_membersCreateWithoutChat_app_chatgroupInput, chat_app_chatgroup_membersUncheckedCreateWithoutChat_app_chatgroupInput>
  }

  export type chat_app_chatgroup_membersCreateManyChat_app_chatgroupInputEnvelope = {
    data: chat_app_chatgroup_membersCreateManyChat_app_chatgroupInput | chat_app_chatgroup_membersCreateManyChat_app_chatgroupInput[]
    skipDuplicates?: boolean
  }

  export type ChatMessageCreateWithoutChat_app_chatgroupInput = {
    id?: bigint | number
    content: string
    sent_at: Date | string
    attached_image?: string | null
    author: ProfileCreateNestedOneWithoutChat_messagesInput
  }

  export type ChatMessageUncheckedCreateWithoutChat_app_chatgroupInput = {
    id?: bigint | number
    content: string
    sent_at: Date | string
    author_id: bigint | number
    attached_image?: string | null
  }

  export type ChatMessageCreateOrConnectWithoutChat_app_chatgroupInput = {
    where: ChatMessageWhereUniqueInput
    create: XOR<ChatMessageCreateWithoutChat_app_chatgroupInput, ChatMessageUncheckedCreateWithoutChat_app_chatgroupInput>
  }

  export type ChatMessageCreateManyChat_app_chatgroupInputEnvelope = {
    data: ChatMessageCreateManyChat_app_chatgroupInput | ChatMessageCreateManyChat_app_chatgroupInput[]
    skipDuplicates?: boolean
  }

  export type ProfileUpsertWithoutAdministered_groupsInput = {
    update: XOR<ProfileUpdateWithoutAdministered_groupsInput, ProfileUncheckedUpdateWithoutAdministered_groupsInput>
    create: XOR<ProfileCreateWithoutAdministered_groupsInput, ProfileUncheckedCreateWithoutAdministered_groupsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutAdministered_groupsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutAdministered_groupsInput, ProfileUncheckedUpdateWithoutAdministered_groupsInput>
  }

  export type ProfileUpdateWithoutAdministered_groupsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    chat_group_members?: chat_app_chatgroup_membersUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUpdateManyWithoutAuthorNestedInput
    album?: AlbumUpdateManyWithoutAuthorNestedInput
    post?: PostUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUpdateManyWithoutProfile2NestedInput
    auth_user?: auth_userUpdateOneRequiredWithoutUser_app_profileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutAdministered_groupsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    chat_group_members?: chat_app_chatgroup_membersUncheckedUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUncheckedUpdateManyWithoutAuthorNestedInput
    album?: AlbumUncheckedUpdateManyWithoutAuthorNestedInput
    post?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUncheckedUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUncheckedUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUncheckedUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUncheckedUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUncheckedUpdateManyWithoutProfile2NestedInput
  }

  export type chat_app_chatgroup_membersUpsertWithWhereUniqueWithoutChat_app_chatgroupInput = {
    where: chat_app_chatgroup_membersWhereUniqueInput
    update: XOR<chat_app_chatgroup_membersUpdateWithoutChat_app_chatgroupInput, chat_app_chatgroup_membersUncheckedUpdateWithoutChat_app_chatgroupInput>
    create: XOR<chat_app_chatgroup_membersCreateWithoutChat_app_chatgroupInput, chat_app_chatgroup_membersUncheckedCreateWithoutChat_app_chatgroupInput>
  }

  export type chat_app_chatgroup_membersUpdateWithWhereUniqueWithoutChat_app_chatgroupInput = {
    where: chat_app_chatgroup_membersWhereUniqueInput
    data: XOR<chat_app_chatgroup_membersUpdateWithoutChat_app_chatgroupInput, chat_app_chatgroup_membersUncheckedUpdateWithoutChat_app_chatgroupInput>
  }

  export type chat_app_chatgroup_membersUpdateManyWithWhereWithoutChat_app_chatgroupInput = {
    where: chat_app_chatgroup_membersScalarWhereInput
    data: XOR<chat_app_chatgroup_membersUpdateManyMutationInput, chat_app_chatgroup_membersUncheckedUpdateManyWithoutChat_app_chatgroupInput>
  }

  export type chat_app_chatgroup_membersScalarWhereInput = {
    AND?: chat_app_chatgroup_membersScalarWhereInput | chat_app_chatgroup_membersScalarWhereInput[]
    OR?: chat_app_chatgroup_membersScalarWhereInput[]
    NOT?: chat_app_chatgroup_membersScalarWhereInput | chat_app_chatgroup_membersScalarWhereInput[]
    id?: BigIntFilter<"chat_app_chatgroup_members"> | bigint | number
    chatgroup_id?: BigIntFilter<"chat_app_chatgroup_members"> | bigint | number
    profile_id?: BigIntFilter<"chat_app_chatgroup_members"> | bigint | number
  }

  export type ChatMessageUpsertWithWhereUniqueWithoutChat_app_chatgroupInput = {
    where: ChatMessageWhereUniqueInput
    update: XOR<ChatMessageUpdateWithoutChat_app_chatgroupInput, ChatMessageUncheckedUpdateWithoutChat_app_chatgroupInput>
    create: XOR<ChatMessageCreateWithoutChat_app_chatgroupInput, ChatMessageUncheckedCreateWithoutChat_app_chatgroupInput>
  }

  export type ChatMessageUpdateWithWhereUniqueWithoutChat_app_chatgroupInput = {
    where: ChatMessageWhereUniqueInput
    data: XOR<ChatMessageUpdateWithoutChat_app_chatgroupInput, ChatMessageUncheckedUpdateWithoutChat_app_chatgroupInput>
  }

  export type ChatMessageUpdateManyWithWhereWithoutChat_app_chatgroupInput = {
    where: ChatMessageScalarWhereInput
    data: XOR<ChatMessageUpdateManyMutationInput, ChatMessageUncheckedUpdateManyWithoutChat_app_chatgroupInput>
  }

  export type ChatMessageScalarWhereInput = {
    AND?: ChatMessageScalarWhereInput | ChatMessageScalarWhereInput[]
    OR?: ChatMessageScalarWhereInput[]
    NOT?: ChatMessageScalarWhereInput | ChatMessageScalarWhereInput[]
    id?: BigIntFilter<"ChatMessage"> | bigint | number
    content?: StringFilter<"ChatMessage"> | string
    sent_at?: DateTimeFilter<"ChatMessage"> | Date | string
    author_id?: BigIntFilter<"ChatMessage"> | bigint | number
    chat_group_id?: BigIntFilter<"ChatMessage"> | bigint | number
    attached_image?: StringNullableFilter<"ChatMessage"> | string | null
  }

  export type ProfileCreateWithoutChat_messagesInput = {
    id?: bigint | number
    date_of_birth: Date | string
    signature?: string | null
    administered_groups?: ChatGroupCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersCreateNestedManyWithoutProfileInput
    album?: AlbumCreateNestedManyWithoutAuthorInput
    post?: PostCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipCreateNestedManyWithoutProfile2Input
    auth_user: auth_userCreateNestedOneWithoutUser_app_profileInput
  }

  export type ProfileUncheckedCreateWithoutChat_messagesInput = {
    id?: bigint | number
    date_of_birth: Date | string
    user_id: number
    signature?: string | null
    administered_groups?: ChatGroupUncheckedCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutProfileInput
    album?: AlbumUncheckedCreateNestedManyWithoutAuthorInput
    post?: PostUncheckedCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesUncheckedCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsUncheckedCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarUncheckedCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipUncheckedCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipUncheckedCreateNestedManyWithoutProfile2Input
  }

  export type ProfileCreateOrConnectWithoutChat_messagesInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutChat_messagesInput, ProfileUncheckedCreateWithoutChat_messagesInput>
  }

  export type ChatGroupCreateWithoutChat_app_chatmessageInput = {
    id?: bigint | number
    name: string
    is_personal_chat: boolean
    avatar?: string | null
    admin: ProfileCreateNestedOneWithoutAdministered_groupsInput
    chat_app_chatgroup_members?: chat_app_chatgroup_membersCreateNestedManyWithoutChat_app_chatgroupInput
  }

  export type ChatGroupUncheckedCreateWithoutChat_app_chatmessageInput = {
    id?: bigint | number
    name: string
    is_personal_chat: boolean
    admin_id: bigint | number
    avatar?: string | null
    chat_app_chatgroup_members?: chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutChat_app_chatgroupInput
  }

  export type ChatGroupCreateOrConnectWithoutChat_app_chatmessageInput = {
    where: ChatGroupWhereUniqueInput
    create: XOR<ChatGroupCreateWithoutChat_app_chatmessageInput, ChatGroupUncheckedCreateWithoutChat_app_chatmessageInput>
  }

  export type ProfileUpsertWithoutChat_messagesInput = {
    update: XOR<ProfileUpdateWithoutChat_messagesInput, ProfileUncheckedUpdateWithoutChat_messagesInput>
    create: XOR<ProfileCreateWithoutChat_messagesInput, ProfileUncheckedCreateWithoutChat_messagesInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutChat_messagesInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutChat_messagesInput, ProfileUncheckedUpdateWithoutChat_messagesInput>
  }

  export type ProfileUpdateWithoutChat_messagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUpdateManyWithoutProfileNestedInput
    album?: AlbumUpdateManyWithoutAuthorNestedInput
    post?: PostUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUpdateManyWithoutProfile2NestedInput
    auth_user?: auth_userUpdateOneRequiredWithoutUser_app_profileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutChat_messagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUncheckedUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedUpdateManyWithoutProfileNestedInput
    album?: AlbumUncheckedUpdateManyWithoutAuthorNestedInput
    post?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUncheckedUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUncheckedUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUncheckedUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUncheckedUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUncheckedUpdateManyWithoutProfile2NestedInput
  }

  export type ChatGroupUpsertWithoutChat_app_chatmessageInput = {
    update: XOR<ChatGroupUpdateWithoutChat_app_chatmessageInput, ChatGroupUncheckedUpdateWithoutChat_app_chatmessageInput>
    create: XOR<ChatGroupCreateWithoutChat_app_chatmessageInput, ChatGroupUncheckedCreateWithoutChat_app_chatmessageInput>
    where?: ChatGroupWhereInput
  }

  export type ChatGroupUpdateToOneWithWhereWithoutChat_app_chatmessageInput = {
    where?: ChatGroupWhereInput
    data: XOR<ChatGroupUpdateWithoutChat_app_chatmessageInput, ChatGroupUncheckedUpdateWithoutChat_app_chatmessageInput>
  }

  export type ChatGroupUpdateWithoutChat_app_chatmessageInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    is_personal_chat?: BoolFieldUpdateOperationsInput | boolean
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: ProfileUpdateOneRequiredWithoutAdministered_groupsNestedInput
    chat_app_chatgroup_members?: chat_app_chatgroup_membersUpdateManyWithoutChat_app_chatgroupNestedInput
  }

  export type ChatGroupUncheckedUpdateWithoutChat_app_chatmessageInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    is_personal_chat?: BoolFieldUpdateOperationsInput | boolean
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    chat_app_chatgroup_members?: chat_app_chatgroup_membersUncheckedUpdateManyWithoutChat_app_chatgroupNestedInput
  }

  export type ChatGroupCreateWithoutChat_app_chatgroup_membersInput = {
    id?: bigint | number
    name: string
    is_personal_chat: boolean
    avatar?: string | null
    admin: ProfileCreateNestedOneWithoutAdministered_groupsInput
    chat_app_chatmessage?: ChatMessageCreateNestedManyWithoutChat_app_chatgroupInput
  }

  export type ChatGroupUncheckedCreateWithoutChat_app_chatgroup_membersInput = {
    id?: bigint | number
    name: string
    is_personal_chat: boolean
    admin_id: bigint | number
    avatar?: string | null
    chat_app_chatmessage?: ChatMessageUncheckedCreateNestedManyWithoutChat_app_chatgroupInput
  }

  export type ChatGroupCreateOrConnectWithoutChat_app_chatgroup_membersInput = {
    where: ChatGroupWhereUniqueInput
    create: XOR<ChatGroupCreateWithoutChat_app_chatgroup_membersInput, ChatGroupUncheckedCreateWithoutChat_app_chatgroup_membersInput>
  }

  export type ProfileCreateWithoutChat_group_membersInput = {
    id?: bigint | number
    date_of_birth: Date | string
    signature?: string | null
    administered_groups?: ChatGroupCreateNestedManyWithoutAdminInput
    chat_messages?: ChatMessageCreateNestedManyWithoutAuthorInput
    album?: AlbumCreateNestedManyWithoutAuthorInput
    post?: PostCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipCreateNestedManyWithoutProfile2Input
    auth_user: auth_userCreateNestedOneWithoutUser_app_profileInput
  }

  export type ProfileUncheckedCreateWithoutChat_group_membersInput = {
    id?: bigint | number
    date_of_birth: Date | string
    user_id: number
    signature?: string | null
    administered_groups?: ChatGroupUncheckedCreateNestedManyWithoutAdminInput
    chat_messages?: ChatMessageUncheckedCreateNestedManyWithoutAuthorInput
    album?: AlbumUncheckedCreateNestedManyWithoutAuthorInput
    post?: PostUncheckedCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesUncheckedCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsUncheckedCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarUncheckedCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipUncheckedCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipUncheckedCreateNestedManyWithoutProfile2Input
  }

  export type ProfileCreateOrConnectWithoutChat_group_membersInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutChat_group_membersInput, ProfileUncheckedCreateWithoutChat_group_membersInput>
  }

  export type ChatGroupUpsertWithoutChat_app_chatgroup_membersInput = {
    update: XOR<ChatGroupUpdateWithoutChat_app_chatgroup_membersInput, ChatGroupUncheckedUpdateWithoutChat_app_chatgroup_membersInput>
    create: XOR<ChatGroupCreateWithoutChat_app_chatgroup_membersInput, ChatGroupUncheckedCreateWithoutChat_app_chatgroup_membersInput>
    where?: ChatGroupWhereInput
  }

  export type ChatGroupUpdateToOneWithWhereWithoutChat_app_chatgroup_membersInput = {
    where?: ChatGroupWhereInput
    data: XOR<ChatGroupUpdateWithoutChat_app_chatgroup_membersInput, ChatGroupUncheckedUpdateWithoutChat_app_chatgroup_membersInput>
  }

  export type ChatGroupUpdateWithoutChat_app_chatgroup_membersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    is_personal_chat?: BoolFieldUpdateOperationsInput | boolean
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    admin?: ProfileUpdateOneRequiredWithoutAdministered_groupsNestedInput
    chat_app_chatmessage?: ChatMessageUpdateManyWithoutChat_app_chatgroupNestedInput
  }

  export type ChatGroupUncheckedUpdateWithoutChat_app_chatgroup_membersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    is_personal_chat?: BoolFieldUpdateOperationsInput | boolean
    admin_id?: BigIntFieldUpdateOperationsInput | bigint | number
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    chat_app_chatmessage?: ChatMessageUncheckedUpdateManyWithoutChat_app_chatgroupNestedInput
  }

  export type ProfileUpsertWithoutChat_group_membersInput = {
    update: XOR<ProfileUpdateWithoutChat_group_membersInput, ProfileUncheckedUpdateWithoutChat_group_membersInput>
    create: XOR<ProfileCreateWithoutChat_group_membersInput, ProfileUncheckedCreateWithoutChat_group_membersInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutChat_group_membersInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutChat_group_membersInput, ProfileUncheckedUpdateWithoutChat_group_membersInput>
  }

  export type ProfileUpdateWithoutChat_group_membersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUpdateManyWithoutAdminNestedInput
    chat_messages?: ChatMessageUpdateManyWithoutAuthorNestedInput
    album?: AlbumUpdateManyWithoutAuthorNestedInput
    post?: PostUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUpdateManyWithoutProfile2NestedInput
    auth_user?: auth_userUpdateOneRequiredWithoutUser_app_profileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutChat_group_membersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUncheckedUpdateManyWithoutAdminNestedInput
    chat_messages?: ChatMessageUncheckedUpdateManyWithoutAuthorNestedInput
    album?: AlbumUncheckedUpdateManyWithoutAuthorNestedInput
    post?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUncheckedUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUncheckedUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUncheckedUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUncheckedUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUncheckedUpdateManyWithoutProfile2NestedInput
  }

  export type ProfileCreateWithoutFriendship_fromInput = {
    id?: bigint | number
    date_of_birth: Date | string
    signature?: string | null
    administered_groups?: ChatGroupCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageCreateNestedManyWithoutAuthorInput
    album?: AlbumCreateNestedManyWithoutAuthorInput
    post?: PostCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarCreateNestedManyWithoutProfileInput
    friendship_to?: FriendshipCreateNestedManyWithoutProfile2Input
    auth_user: auth_userCreateNestedOneWithoutUser_app_profileInput
  }

  export type ProfileUncheckedCreateWithoutFriendship_fromInput = {
    id?: bigint | number
    date_of_birth: Date | string
    user_id: number
    signature?: string | null
    administered_groups?: ChatGroupUncheckedCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageUncheckedCreateNestedManyWithoutAuthorInput
    album?: AlbumUncheckedCreateNestedManyWithoutAuthorInput
    post?: PostUncheckedCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesUncheckedCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsUncheckedCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarUncheckedCreateNestedManyWithoutProfileInput
    friendship_to?: FriendshipUncheckedCreateNestedManyWithoutProfile2Input
  }

  export type ProfileCreateOrConnectWithoutFriendship_fromInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutFriendship_fromInput, ProfileUncheckedCreateWithoutFriendship_fromInput>
  }

  export type ProfileCreateWithoutFriendship_toInput = {
    id?: bigint | number
    date_of_birth: Date | string
    signature?: string | null
    administered_groups?: ChatGroupCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageCreateNestedManyWithoutAuthorInput
    album?: AlbumCreateNestedManyWithoutAuthorInput
    post?: PostCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipCreateNestedManyWithoutProfile1Input
    auth_user: auth_userCreateNestedOneWithoutUser_app_profileInput
  }

  export type ProfileUncheckedCreateWithoutFriendship_toInput = {
    id?: bigint | number
    date_of_birth: Date | string
    user_id: number
    signature?: string | null
    administered_groups?: ChatGroupUncheckedCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageUncheckedCreateNestedManyWithoutAuthorInput
    album?: AlbumUncheckedCreateNestedManyWithoutAuthorInput
    post?: PostUncheckedCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesUncheckedCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsUncheckedCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarUncheckedCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipUncheckedCreateNestedManyWithoutProfile1Input
  }

  export type ProfileCreateOrConnectWithoutFriendship_toInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutFriendship_toInput, ProfileUncheckedCreateWithoutFriendship_toInput>
  }

  export type ProfileUpsertWithoutFriendship_fromInput = {
    update: XOR<ProfileUpdateWithoutFriendship_fromInput, ProfileUncheckedUpdateWithoutFriendship_fromInput>
    create: XOR<ProfileCreateWithoutFriendship_fromInput, ProfileUncheckedCreateWithoutFriendship_fromInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutFriendship_fromInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutFriendship_fromInput, ProfileUncheckedUpdateWithoutFriendship_fromInput>
  }

  export type ProfileUpdateWithoutFriendship_fromInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUpdateManyWithoutAuthorNestedInput
    album?: AlbumUpdateManyWithoutAuthorNestedInput
    post?: PostUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUpdateManyWithoutProfileNestedInput
    friendship_to?: FriendshipUpdateManyWithoutProfile2NestedInput
    auth_user?: auth_userUpdateOneRequiredWithoutUser_app_profileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutFriendship_fromInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUncheckedUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUncheckedUpdateManyWithoutAuthorNestedInput
    album?: AlbumUncheckedUpdateManyWithoutAuthorNestedInput
    post?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUncheckedUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUncheckedUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUncheckedUpdateManyWithoutProfileNestedInput
    friendship_to?: FriendshipUncheckedUpdateManyWithoutProfile2NestedInput
  }

  export type ProfileUpsertWithoutFriendship_toInput = {
    update: XOR<ProfileUpdateWithoutFriendship_toInput, ProfileUncheckedUpdateWithoutFriendship_toInput>
    create: XOR<ProfileCreateWithoutFriendship_toInput, ProfileUncheckedCreateWithoutFriendship_toInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutFriendship_toInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutFriendship_toInput, ProfileUncheckedUpdateWithoutFriendship_toInput>
  }

  export type ProfileUpdateWithoutFriendship_toInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUpdateManyWithoutAuthorNestedInput
    album?: AlbumUpdateManyWithoutAuthorNestedInput
    post?: PostUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUpdateManyWithoutProfile1NestedInput
    auth_user?: auth_userUpdateOneRequiredWithoutUser_app_profileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutFriendship_toInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUncheckedUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUncheckedUpdateManyWithoutAuthorNestedInput
    album?: AlbumUncheckedUpdateManyWithoutAuthorNestedInput
    post?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUncheckedUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUncheckedUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUncheckedUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUncheckedUpdateManyWithoutProfile1NestedInput
  }

  export type post_app_album_imagesCreateWithoutImageInput = {
    id?: bigint | number
    album: AlbumCreateNestedOneWithoutImagesInput
  }

  export type post_app_album_imagesUncheckedCreateWithoutImageInput = {
    id?: bigint | number
    album_id: bigint | number
  }

  export type post_app_album_imagesCreateOrConnectWithoutImageInput = {
    where: post_app_album_imagesWhereUniqueInput
    create: XOR<post_app_album_imagesCreateWithoutImageInput, post_app_album_imagesUncheckedCreateWithoutImageInput>
  }

  export type post_app_album_imagesCreateManyImageInputEnvelope = {
    data: post_app_album_imagesCreateManyImageInput | post_app_album_imagesCreateManyImageInput[]
    skipDuplicates?: boolean
  }

  export type post_app_post_imagesCreateWithoutPost_app_imageInput = {
    id?: bigint | number
    post_app_post: PostCreateNestedOneWithoutPost_app_post_imagesInput
  }

  export type post_app_post_imagesUncheckedCreateWithoutPost_app_imageInput = {
    id?: bigint | number
    post_id: bigint | number
  }

  export type post_app_post_imagesCreateOrConnectWithoutPost_app_imageInput = {
    where: post_app_post_imagesWhereUniqueInput
    create: XOR<post_app_post_imagesCreateWithoutPost_app_imageInput, post_app_post_imagesUncheckedCreateWithoutPost_app_imageInput>
  }

  export type post_app_post_imagesCreateManyPost_app_imageInputEnvelope = {
    data: post_app_post_imagesCreateManyPost_app_imageInput | post_app_post_imagesCreateManyPost_app_imageInput[]
    skipDuplicates?: boolean
  }

  export type post_app_album_imagesUpsertWithWhereUniqueWithoutImageInput = {
    where: post_app_album_imagesWhereUniqueInput
    update: XOR<post_app_album_imagesUpdateWithoutImageInput, post_app_album_imagesUncheckedUpdateWithoutImageInput>
    create: XOR<post_app_album_imagesCreateWithoutImageInput, post_app_album_imagesUncheckedCreateWithoutImageInput>
  }

  export type post_app_album_imagesUpdateWithWhereUniqueWithoutImageInput = {
    where: post_app_album_imagesWhereUniqueInput
    data: XOR<post_app_album_imagesUpdateWithoutImageInput, post_app_album_imagesUncheckedUpdateWithoutImageInput>
  }

  export type post_app_album_imagesUpdateManyWithWhereWithoutImageInput = {
    where: post_app_album_imagesScalarWhereInput
    data: XOR<post_app_album_imagesUpdateManyMutationInput, post_app_album_imagesUncheckedUpdateManyWithoutImageInput>
  }

  export type post_app_post_imagesUpsertWithWhereUniqueWithoutPost_app_imageInput = {
    where: post_app_post_imagesWhereUniqueInput
    update: XOR<post_app_post_imagesUpdateWithoutPost_app_imageInput, post_app_post_imagesUncheckedUpdateWithoutPost_app_imageInput>
    create: XOR<post_app_post_imagesCreateWithoutPost_app_imageInput, post_app_post_imagesUncheckedCreateWithoutPost_app_imageInput>
  }

  export type post_app_post_imagesUpdateWithWhereUniqueWithoutPost_app_imageInput = {
    where: post_app_post_imagesWhereUniqueInput
    data: XOR<post_app_post_imagesUpdateWithoutPost_app_imageInput, post_app_post_imagesUncheckedUpdateWithoutPost_app_imageInput>
  }

  export type post_app_post_imagesUpdateManyWithWhereWithoutPost_app_imageInput = {
    where: post_app_post_imagesScalarWhereInput
    data: XOR<post_app_post_imagesUpdateManyMutationInput, post_app_post_imagesUncheckedUpdateManyWithoutPost_app_imageInput>
  }

  export type post_app_post_imagesScalarWhereInput = {
    AND?: post_app_post_imagesScalarWhereInput | post_app_post_imagesScalarWhereInput[]
    OR?: post_app_post_imagesScalarWhereInput[]
    NOT?: post_app_post_imagesScalarWhereInput | post_app_post_imagesScalarWhereInput[]
    id?: BigIntFilter<"post_app_post_images"> | bigint | number
    post_id?: BigIntFilter<"post_app_post_images"> | bigint | number
    image_id?: BigIntFilter<"post_app_post_images"> | bigint | number
  }

  export type LinkCreateWithoutPost_app_postInput = {
    id?: bigint | number
    url: string
  }

  export type LinkUncheckedCreateWithoutPost_app_postInput = {
    id?: bigint | number
    url: string
  }

  export type LinkCreateOrConnectWithoutPost_app_postInput = {
    where: LinkWhereUniqueInput
    create: XOR<LinkCreateWithoutPost_app_postInput, LinkUncheckedCreateWithoutPost_app_postInput>
  }

  export type LinkCreateManyPost_app_postInputEnvelope = {
    data: LinkCreateManyPost_app_postInput | LinkCreateManyPost_app_postInput[]
    skipDuplicates?: boolean
  }

  export type ProfileCreateWithoutPostInput = {
    id?: bigint | number
    date_of_birth: Date | string
    signature?: string | null
    administered_groups?: ChatGroupCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageCreateNestedManyWithoutAuthorInput
    album?: AlbumCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipCreateNestedManyWithoutProfile2Input
    auth_user: auth_userCreateNestedOneWithoutUser_app_profileInput
  }

  export type ProfileUncheckedCreateWithoutPostInput = {
    id?: bigint | number
    date_of_birth: Date | string
    user_id: number
    signature?: string | null
    administered_groups?: ChatGroupUncheckedCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageUncheckedCreateNestedManyWithoutAuthorInput
    album?: AlbumUncheckedCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesUncheckedCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsUncheckedCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarUncheckedCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipUncheckedCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipUncheckedCreateNestedManyWithoutProfile2Input
  }

  export type ProfileCreateOrConnectWithoutPostInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutPostInput, ProfileUncheckedCreateWithoutPostInput>
  }

  export type post_app_post_imagesCreateWithoutPost_app_postInput = {
    id?: bigint | number
    post_app_image: ImageCreateNestedOneWithoutPost_app_post_imagesInput
  }

  export type post_app_post_imagesUncheckedCreateWithoutPost_app_postInput = {
    id?: bigint | number
    image_id: bigint | number
  }

  export type post_app_post_imagesCreateOrConnectWithoutPost_app_postInput = {
    where: post_app_post_imagesWhereUniqueInput
    create: XOR<post_app_post_imagesCreateWithoutPost_app_postInput, post_app_post_imagesUncheckedCreateWithoutPost_app_postInput>
  }

  export type post_app_post_imagesCreateManyPost_app_postInputEnvelope = {
    data: post_app_post_imagesCreateManyPost_app_postInput | post_app_post_imagesCreateManyPost_app_postInput[]
    skipDuplicates?: boolean
  }

  export type post_app_post_likesCreateWithoutPostInput = {
    id?: bigint | number
    user_app_profile: ProfileCreateNestedOneWithoutPost_app_post_likesInput
  }

  export type post_app_post_likesUncheckedCreateWithoutPostInput = {
    id?: bigint | number
    profile_id: bigint | number
  }

  export type post_app_post_likesCreateOrConnectWithoutPostInput = {
    where: post_app_post_likesWhereUniqueInput
    create: XOR<post_app_post_likesCreateWithoutPostInput, post_app_post_likesUncheckedCreateWithoutPostInput>
  }

  export type post_app_post_likesCreateManyPostInputEnvelope = {
    data: post_app_post_likesCreateManyPostInput | post_app_post_likesCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type post_app_post_tagsCreateWithoutPost_app_postInput = {
    id?: bigint | number
    post_app_tag: TagsCreateNestedOneWithoutPost_app_post_tagsInput
  }

  export type post_app_post_tagsUncheckedCreateWithoutPost_app_postInput = {
    id?: bigint | number
    tag_id: bigint | number
  }

  export type post_app_post_tagsCreateOrConnectWithoutPost_app_postInput = {
    where: post_app_post_tagsWhereUniqueInput
    create: XOR<post_app_post_tagsCreateWithoutPost_app_postInput, post_app_post_tagsUncheckedCreateWithoutPost_app_postInput>
  }

  export type post_app_post_tagsCreateManyPost_app_postInputEnvelope = {
    data: post_app_post_tagsCreateManyPost_app_postInput | post_app_post_tagsCreateManyPost_app_postInput[]
    skipDuplicates?: boolean
  }

  export type post_app_post_viewsCreateWithoutPostInput = {
    id?: bigint | number
    user_app_profile: ProfileCreateNestedOneWithoutPost_app_post_viewsInput
  }

  export type post_app_post_viewsUncheckedCreateWithoutPostInput = {
    id?: bigint | number
    profile_id: bigint | number
  }

  export type post_app_post_viewsCreateOrConnectWithoutPostInput = {
    where: post_app_post_viewsWhereUniqueInput
    create: XOR<post_app_post_viewsCreateWithoutPostInput, post_app_post_viewsUncheckedCreateWithoutPostInput>
  }

  export type post_app_post_viewsCreateManyPostInputEnvelope = {
    data: post_app_post_viewsCreateManyPostInput | post_app_post_viewsCreateManyPostInput[]
    skipDuplicates?: boolean
  }

  export type LinkUpsertWithWhereUniqueWithoutPost_app_postInput = {
    where: LinkWhereUniqueInput
    update: XOR<LinkUpdateWithoutPost_app_postInput, LinkUncheckedUpdateWithoutPost_app_postInput>
    create: XOR<LinkCreateWithoutPost_app_postInput, LinkUncheckedCreateWithoutPost_app_postInput>
  }

  export type LinkUpdateWithWhereUniqueWithoutPost_app_postInput = {
    where: LinkWhereUniqueInput
    data: XOR<LinkUpdateWithoutPost_app_postInput, LinkUncheckedUpdateWithoutPost_app_postInput>
  }

  export type LinkUpdateManyWithWhereWithoutPost_app_postInput = {
    where: LinkScalarWhereInput
    data: XOR<LinkUpdateManyMutationInput, LinkUncheckedUpdateManyWithoutPost_app_postInput>
  }

  export type LinkScalarWhereInput = {
    AND?: LinkScalarWhereInput | LinkScalarWhereInput[]
    OR?: LinkScalarWhereInput[]
    NOT?: LinkScalarWhereInput | LinkScalarWhereInput[]
    id?: BigIntFilter<"Link"> | bigint | number
    url?: StringFilter<"Link"> | string
    post_id?: BigIntFilter<"Link"> | bigint | number
  }

  export type ProfileUpsertWithoutPostInput = {
    update: XOR<ProfileUpdateWithoutPostInput, ProfileUncheckedUpdateWithoutPostInput>
    create: XOR<ProfileCreateWithoutPostInput, ProfileUncheckedCreateWithoutPostInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutPostInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutPostInput, ProfileUncheckedUpdateWithoutPostInput>
  }

  export type ProfileUpdateWithoutPostInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUpdateManyWithoutAuthorNestedInput
    album?: AlbumUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUpdateManyWithoutProfile2NestedInput
    auth_user?: auth_userUpdateOneRequiredWithoutUser_app_profileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutPostInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUncheckedUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUncheckedUpdateManyWithoutAuthorNestedInput
    album?: AlbumUncheckedUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUncheckedUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUncheckedUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUncheckedUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUncheckedUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUncheckedUpdateManyWithoutProfile2NestedInput
  }

  export type post_app_post_imagesUpsertWithWhereUniqueWithoutPost_app_postInput = {
    where: post_app_post_imagesWhereUniqueInput
    update: XOR<post_app_post_imagesUpdateWithoutPost_app_postInput, post_app_post_imagesUncheckedUpdateWithoutPost_app_postInput>
    create: XOR<post_app_post_imagesCreateWithoutPost_app_postInput, post_app_post_imagesUncheckedCreateWithoutPost_app_postInput>
  }

  export type post_app_post_imagesUpdateWithWhereUniqueWithoutPost_app_postInput = {
    where: post_app_post_imagesWhereUniqueInput
    data: XOR<post_app_post_imagesUpdateWithoutPost_app_postInput, post_app_post_imagesUncheckedUpdateWithoutPost_app_postInput>
  }

  export type post_app_post_imagesUpdateManyWithWhereWithoutPost_app_postInput = {
    where: post_app_post_imagesScalarWhereInput
    data: XOR<post_app_post_imagesUpdateManyMutationInput, post_app_post_imagesUncheckedUpdateManyWithoutPost_app_postInput>
  }

  export type post_app_post_likesUpsertWithWhereUniqueWithoutPostInput = {
    where: post_app_post_likesWhereUniqueInput
    update: XOR<post_app_post_likesUpdateWithoutPostInput, post_app_post_likesUncheckedUpdateWithoutPostInput>
    create: XOR<post_app_post_likesCreateWithoutPostInput, post_app_post_likesUncheckedCreateWithoutPostInput>
  }

  export type post_app_post_likesUpdateWithWhereUniqueWithoutPostInput = {
    where: post_app_post_likesWhereUniqueInput
    data: XOR<post_app_post_likesUpdateWithoutPostInput, post_app_post_likesUncheckedUpdateWithoutPostInput>
  }

  export type post_app_post_likesUpdateManyWithWhereWithoutPostInput = {
    where: post_app_post_likesScalarWhereInput
    data: XOR<post_app_post_likesUpdateManyMutationInput, post_app_post_likesUncheckedUpdateManyWithoutPostInput>
  }

  export type post_app_post_likesScalarWhereInput = {
    AND?: post_app_post_likesScalarWhereInput | post_app_post_likesScalarWhereInput[]
    OR?: post_app_post_likesScalarWhereInput[]
    NOT?: post_app_post_likesScalarWhereInput | post_app_post_likesScalarWhereInput[]
    id?: BigIntFilter<"post_app_post_likes"> | bigint | number
    post_id?: BigIntFilter<"post_app_post_likes"> | bigint | number
    profile_id?: BigIntFilter<"post_app_post_likes"> | bigint | number
  }

  export type post_app_post_tagsUpsertWithWhereUniqueWithoutPost_app_postInput = {
    where: post_app_post_tagsWhereUniqueInput
    update: XOR<post_app_post_tagsUpdateWithoutPost_app_postInput, post_app_post_tagsUncheckedUpdateWithoutPost_app_postInput>
    create: XOR<post_app_post_tagsCreateWithoutPost_app_postInput, post_app_post_tagsUncheckedCreateWithoutPost_app_postInput>
  }

  export type post_app_post_tagsUpdateWithWhereUniqueWithoutPost_app_postInput = {
    where: post_app_post_tagsWhereUniqueInput
    data: XOR<post_app_post_tagsUpdateWithoutPost_app_postInput, post_app_post_tagsUncheckedUpdateWithoutPost_app_postInput>
  }

  export type post_app_post_tagsUpdateManyWithWhereWithoutPost_app_postInput = {
    where: post_app_post_tagsScalarWhereInput
    data: XOR<post_app_post_tagsUpdateManyMutationInput, post_app_post_tagsUncheckedUpdateManyWithoutPost_app_postInput>
  }

  export type post_app_post_tagsScalarWhereInput = {
    AND?: post_app_post_tagsScalarWhereInput | post_app_post_tagsScalarWhereInput[]
    OR?: post_app_post_tagsScalarWhereInput[]
    NOT?: post_app_post_tagsScalarWhereInput | post_app_post_tagsScalarWhereInput[]
    id?: BigIntFilter<"post_app_post_tags"> | bigint | number
    post_id?: BigIntFilter<"post_app_post_tags"> | bigint | number
    tag_id?: BigIntFilter<"post_app_post_tags"> | bigint | number
  }

  export type post_app_post_viewsUpsertWithWhereUniqueWithoutPostInput = {
    where: post_app_post_viewsWhereUniqueInput
    update: XOR<post_app_post_viewsUpdateWithoutPostInput, post_app_post_viewsUncheckedUpdateWithoutPostInput>
    create: XOR<post_app_post_viewsCreateWithoutPostInput, post_app_post_viewsUncheckedCreateWithoutPostInput>
  }

  export type post_app_post_viewsUpdateWithWhereUniqueWithoutPostInput = {
    where: post_app_post_viewsWhereUniqueInput
    data: XOR<post_app_post_viewsUpdateWithoutPostInput, post_app_post_viewsUncheckedUpdateWithoutPostInput>
  }

  export type post_app_post_viewsUpdateManyWithWhereWithoutPostInput = {
    where: post_app_post_viewsScalarWhereInput
    data: XOR<post_app_post_viewsUpdateManyMutationInput, post_app_post_viewsUncheckedUpdateManyWithoutPostInput>
  }

  export type post_app_post_viewsScalarWhereInput = {
    AND?: post_app_post_viewsScalarWhereInput | post_app_post_viewsScalarWhereInput[]
    OR?: post_app_post_viewsScalarWhereInput[]
    NOT?: post_app_post_viewsScalarWhereInput | post_app_post_viewsScalarWhereInput[]
    id?: BigIntFilter<"post_app_post_views"> | bigint | number
    post_id?: BigIntFilter<"post_app_post_views"> | bigint | number
    profile_id?: BigIntFilter<"post_app_post_views"> | bigint | number
  }

  export type AlbumCreateWithoutPost_app_tagInput = {
    id?: bigint | number
    name: string
    created_at: Date | string
    preview_image?: string | null
    shown: boolean
    author: ProfileCreateNestedOneWithoutAlbumInput
    images?: post_app_album_imagesCreateNestedManyWithoutAlbumInput
  }

  export type AlbumUncheckedCreateWithoutPost_app_tagInput = {
    id?: bigint | number
    name: string
    created_at: Date | string
    preview_image?: string | null
    shown: boolean
    author_id: bigint | number
    images?: post_app_album_imagesUncheckedCreateNestedManyWithoutAlbumInput
  }

  export type AlbumCreateOrConnectWithoutPost_app_tagInput = {
    where: AlbumWhereUniqueInput
    create: XOR<AlbumCreateWithoutPost_app_tagInput, AlbumUncheckedCreateWithoutPost_app_tagInput>
  }

  export type AlbumCreateManyPost_app_tagInputEnvelope = {
    data: AlbumCreateManyPost_app_tagInput | AlbumCreateManyPost_app_tagInput[]
    skipDuplicates?: boolean
  }

  export type post_app_post_tagsCreateWithoutPost_app_tagInput = {
    id?: bigint | number
    post_app_post: PostCreateNestedOneWithoutPost_app_post_tagsInput
  }

  export type post_app_post_tagsUncheckedCreateWithoutPost_app_tagInput = {
    id?: bigint | number
    post_id: bigint | number
  }

  export type post_app_post_tagsCreateOrConnectWithoutPost_app_tagInput = {
    where: post_app_post_tagsWhereUniqueInput
    create: XOR<post_app_post_tagsCreateWithoutPost_app_tagInput, post_app_post_tagsUncheckedCreateWithoutPost_app_tagInput>
  }

  export type post_app_post_tagsCreateManyPost_app_tagInputEnvelope = {
    data: post_app_post_tagsCreateManyPost_app_tagInput | post_app_post_tagsCreateManyPost_app_tagInput[]
    skipDuplicates?: boolean
  }

  export type AlbumUpsertWithWhereUniqueWithoutPost_app_tagInput = {
    where: AlbumWhereUniqueInput
    update: XOR<AlbumUpdateWithoutPost_app_tagInput, AlbumUncheckedUpdateWithoutPost_app_tagInput>
    create: XOR<AlbumCreateWithoutPost_app_tagInput, AlbumUncheckedCreateWithoutPost_app_tagInput>
  }

  export type AlbumUpdateWithWhereUniqueWithoutPost_app_tagInput = {
    where: AlbumWhereUniqueInput
    data: XOR<AlbumUpdateWithoutPost_app_tagInput, AlbumUncheckedUpdateWithoutPost_app_tagInput>
  }

  export type AlbumUpdateManyWithWhereWithoutPost_app_tagInput = {
    where: AlbumScalarWhereInput
    data: XOR<AlbumUpdateManyMutationInput, AlbumUncheckedUpdateManyWithoutPost_app_tagInput>
  }

  export type AlbumScalarWhereInput = {
    AND?: AlbumScalarWhereInput | AlbumScalarWhereInput[]
    OR?: AlbumScalarWhereInput[]
    NOT?: AlbumScalarWhereInput | AlbumScalarWhereInput[]
    id?: BigIntFilter<"Album"> | bigint | number
    name?: StringFilter<"Album"> | string
    created_at?: DateTimeFilter<"Album"> | Date | string
    preview_image?: StringNullableFilter<"Album"> | string | null
    shown?: BoolFilter<"Album"> | boolean
    topic_id?: BigIntFilter<"Album"> | bigint | number
    author_id?: BigIntFilter<"Album"> | bigint | number
  }

  export type post_app_post_tagsUpsertWithWhereUniqueWithoutPost_app_tagInput = {
    where: post_app_post_tagsWhereUniqueInput
    update: XOR<post_app_post_tagsUpdateWithoutPost_app_tagInput, post_app_post_tagsUncheckedUpdateWithoutPost_app_tagInput>
    create: XOR<post_app_post_tagsCreateWithoutPost_app_tagInput, post_app_post_tagsUncheckedCreateWithoutPost_app_tagInput>
  }

  export type post_app_post_tagsUpdateWithWhereUniqueWithoutPost_app_tagInput = {
    where: post_app_post_tagsWhereUniqueInput
    data: XOR<post_app_post_tagsUpdateWithoutPost_app_tagInput, post_app_post_tagsUncheckedUpdateWithoutPost_app_tagInput>
  }

  export type post_app_post_tagsUpdateManyWithWhereWithoutPost_app_tagInput = {
    where: post_app_post_tagsScalarWhereInput
    data: XOR<post_app_post_tagsUpdateManyMutationInput, post_app_post_tagsUncheckedUpdateManyWithoutPost_app_tagInput>
  }

  export type PostCreateWithoutPost_app_linkInput = {
    id?: bigint | number
    title: string
    content: string
    topic: string
    author: ProfileCreateNestedOneWithoutPostInput
    post_app_post_images?: post_app_post_imagesCreateNestedManyWithoutPost_app_postInput
    likes?: post_app_post_likesCreateNestedManyWithoutPostInput
    post_app_post_tags?: post_app_post_tagsCreateNestedManyWithoutPost_app_postInput
    views?: post_app_post_viewsCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutPost_app_linkInput = {
    id?: bigint | number
    title: string
    content: string
    author_id: bigint | number
    topic: string
    post_app_post_images?: post_app_post_imagesUncheckedCreateNestedManyWithoutPost_app_postInput
    likes?: post_app_post_likesUncheckedCreateNestedManyWithoutPostInput
    post_app_post_tags?: post_app_post_tagsUncheckedCreateNestedManyWithoutPost_app_postInput
    views?: post_app_post_viewsUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutPost_app_linkInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutPost_app_linkInput, PostUncheckedCreateWithoutPost_app_linkInput>
  }

  export type PostUpsertWithoutPost_app_linkInput = {
    update: XOR<PostUpdateWithoutPost_app_linkInput, PostUncheckedUpdateWithoutPost_app_linkInput>
    create: XOR<PostCreateWithoutPost_app_linkInput, PostUncheckedCreateWithoutPost_app_linkInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutPost_app_linkInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutPost_app_linkInput, PostUncheckedUpdateWithoutPost_app_linkInput>
  }

  export type PostUpdateWithoutPost_app_linkInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    author?: ProfileUpdateOneRequiredWithoutPostNestedInput
    post_app_post_images?: post_app_post_imagesUpdateManyWithoutPost_app_postNestedInput
    likes?: post_app_post_likesUpdateManyWithoutPostNestedInput
    post_app_post_tags?: post_app_post_tagsUpdateManyWithoutPost_app_postNestedInput
    views?: post_app_post_viewsUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutPost_app_linkInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
    topic?: StringFieldUpdateOperationsInput | string
    post_app_post_images?: post_app_post_imagesUncheckedUpdateManyWithoutPost_app_postNestedInput
    likes?: post_app_post_likesUncheckedUpdateManyWithoutPostNestedInput
    post_app_post_tags?: post_app_post_tagsUncheckedUpdateManyWithoutPost_app_postNestedInput
    views?: post_app_post_viewsUncheckedUpdateManyWithoutPostNestedInput
  }

  export type PostCreateWithoutLikesInput = {
    id?: bigint | number
    title: string
    content: string
    topic: string
    post_app_link?: LinkCreateNestedManyWithoutPost_app_postInput
    author: ProfileCreateNestedOneWithoutPostInput
    post_app_post_images?: post_app_post_imagesCreateNestedManyWithoutPost_app_postInput
    post_app_post_tags?: post_app_post_tagsCreateNestedManyWithoutPost_app_postInput
    views?: post_app_post_viewsCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutLikesInput = {
    id?: bigint | number
    title: string
    content: string
    author_id: bigint | number
    topic: string
    post_app_link?: LinkUncheckedCreateNestedManyWithoutPost_app_postInput
    post_app_post_images?: post_app_post_imagesUncheckedCreateNestedManyWithoutPost_app_postInput
    post_app_post_tags?: post_app_post_tagsUncheckedCreateNestedManyWithoutPost_app_postInput
    views?: post_app_post_viewsUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutLikesInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutLikesInput, PostUncheckedCreateWithoutLikesInput>
  }

  export type ProfileCreateWithoutPost_app_post_likesInput = {
    id?: bigint | number
    date_of_birth: Date | string
    signature?: string | null
    administered_groups?: ChatGroupCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageCreateNestedManyWithoutAuthorInput
    album?: AlbumCreateNestedManyWithoutAuthorInput
    post?: PostCreateNestedManyWithoutAuthorInput
    post_app_post_views?: post_app_post_viewsCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipCreateNestedManyWithoutProfile2Input
    auth_user: auth_userCreateNestedOneWithoutUser_app_profileInput
  }

  export type ProfileUncheckedCreateWithoutPost_app_post_likesInput = {
    id?: bigint | number
    date_of_birth: Date | string
    user_id: number
    signature?: string | null
    administered_groups?: ChatGroupUncheckedCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageUncheckedCreateNestedManyWithoutAuthorInput
    album?: AlbumUncheckedCreateNestedManyWithoutAuthorInput
    post?: PostUncheckedCreateNestedManyWithoutAuthorInput
    post_app_post_views?: post_app_post_viewsUncheckedCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarUncheckedCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipUncheckedCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipUncheckedCreateNestedManyWithoutProfile2Input
  }

  export type ProfileCreateOrConnectWithoutPost_app_post_likesInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutPost_app_post_likesInput, ProfileUncheckedCreateWithoutPost_app_post_likesInput>
  }

  export type PostUpsertWithoutLikesInput = {
    update: XOR<PostUpdateWithoutLikesInput, PostUncheckedUpdateWithoutLikesInput>
    create: XOR<PostCreateWithoutLikesInput, PostUncheckedCreateWithoutLikesInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutLikesInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutLikesInput, PostUncheckedUpdateWithoutLikesInput>
  }

  export type PostUpdateWithoutLikesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    post_app_link?: LinkUpdateManyWithoutPost_app_postNestedInput
    author?: ProfileUpdateOneRequiredWithoutPostNestedInput
    post_app_post_images?: post_app_post_imagesUpdateManyWithoutPost_app_postNestedInput
    post_app_post_tags?: post_app_post_tagsUpdateManyWithoutPost_app_postNestedInput
    views?: post_app_post_viewsUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutLikesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
    topic?: StringFieldUpdateOperationsInput | string
    post_app_link?: LinkUncheckedUpdateManyWithoutPost_app_postNestedInput
    post_app_post_images?: post_app_post_imagesUncheckedUpdateManyWithoutPost_app_postNestedInput
    post_app_post_tags?: post_app_post_tagsUncheckedUpdateManyWithoutPost_app_postNestedInput
    views?: post_app_post_viewsUncheckedUpdateManyWithoutPostNestedInput
  }

  export type ProfileUpsertWithoutPost_app_post_likesInput = {
    update: XOR<ProfileUpdateWithoutPost_app_post_likesInput, ProfileUncheckedUpdateWithoutPost_app_post_likesInput>
    create: XOR<ProfileCreateWithoutPost_app_post_likesInput, ProfileUncheckedCreateWithoutPost_app_post_likesInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutPost_app_post_likesInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutPost_app_post_likesInput, ProfileUncheckedUpdateWithoutPost_app_post_likesInput>
  }

  export type ProfileUpdateWithoutPost_app_post_likesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUpdateManyWithoutAuthorNestedInput
    album?: AlbumUpdateManyWithoutAuthorNestedInput
    post?: PostUpdateManyWithoutAuthorNestedInput
    post_app_post_views?: post_app_post_viewsUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUpdateManyWithoutProfile2NestedInput
    auth_user?: auth_userUpdateOneRequiredWithoutUser_app_profileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutPost_app_post_likesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUncheckedUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUncheckedUpdateManyWithoutAuthorNestedInput
    album?: AlbumUncheckedUpdateManyWithoutAuthorNestedInput
    post?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    post_app_post_views?: post_app_post_viewsUncheckedUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUncheckedUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUncheckedUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUncheckedUpdateManyWithoutProfile2NestedInput
  }

  export type PostCreateWithoutViewsInput = {
    id?: bigint | number
    title: string
    content: string
    topic: string
    post_app_link?: LinkCreateNestedManyWithoutPost_app_postInput
    author: ProfileCreateNestedOneWithoutPostInput
    post_app_post_images?: post_app_post_imagesCreateNestedManyWithoutPost_app_postInput
    likes?: post_app_post_likesCreateNestedManyWithoutPostInput
    post_app_post_tags?: post_app_post_tagsCreateNestedManyWithoutPost_app_postInput
  }

  export type PostUncheckedCreateWithoutViewsInput = {
    id?: bigint | number
    title: string
    content: string
    author_id: bigint | number
    topic: string
    post_app_link?: LinkUncheckedCreateNestedManyWithoutPost_app_postInput
    post_app_post_images?: post_app_post_imagesUncheckedCreateNestedManyWithoutPost_app_postInput
    likes?: post_app_post_likesUncheckedCreateNestedManyWithoutPostInput
    post_app_post_tags?: post_app_post_tagsUncheckedCreateNestedManyWithoutPost_app_postInput
  }

  export type PostCreateOrConnectWithoutViewsInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutViewsInput, PostUncheckedCreateWithoutViewsInput>
  }

  export type ProfileCreateWithoutPost_app_post_viewsInput = {
    id?: bigint | number
    date_of_birth: Date | string
    signature?: string | null
    administered_groups?: ChatGroupCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageCreateNestedManyWithoutAuthorInput
    album?: AlbumCreateNestedManyWithoutAuthorInput
    post?: PostCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipCreateNestedManyWithoutProfile2Input
    auth_user: auth_userCreateNestedOneWithoutUser_app_profileInput
  }

  export type ProfileUncheckedCreateWithoutPost_app_post_viewsInput = {
    id?: bigint | number
    date_of_birth: Date | string
    user_id: number
    signature?: string | null
    administered_groups?: ChatGroupUncheckedCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageUncheckedCreateNestedManyWithoutAuthorInput
    album?: AlbumUncheckedCreateNestedManyWithoutAuthorInput
    post?: PostUncheckedCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesUncheckedCreateNestedManyWithoutUser_app_profileInput
    avatar?: AvatarUncheckedCreateNestedManyWithoutProfileInput
    friendship_from?: FriendshipUncheckedCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipUncheckedCreateNestedManyWithoutProfile2Input
  }

  export type ProfileCreateOrConnectWithoutPost_app_post_viewsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutPost_app_post_viewsInput, ProfileUncheckedCreateWithoutPost_app_post_viewsInput>
  }

  export type PostUpsertWithoutViewsInput = {
    update: XOR<PostUpdateWithoutViewsInput, PostUncheckedUpdateWithoutViewsInput>
    create: XOR<PostCreateWithoutViewsInput, PostUncheckedCreateWithoutViewsInput>
    where?: PostWhereInput
  }

  export type PostUpdateToOneWithWhereWithoutViewsInput = {
    where?: PostWhereInput
    data: XOR<PostUpdateWithoutViewsInput, PostUncheckedUpdateWithoutViewsInput>
  }

  export type PostUpdateWithoutViewsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    post_app_link?: LinkUpdateManyWithoutPost_app_postNestedInput
    author?: ProfileUpdateOneRequiredWithoutPostNestedInput
    post_app_post_images?: post_app_post_imagesUpdateManyWithoutPost_app_postNestedInput
    likes?: post_app_post_likesUpdateManyWithoutPostNestedInput
    post_app_post_tags?: post_app_post_tagsUpdateManyWithoutPost_app_postNestedInput
  }

  export type PostUncheckedUpdateWithoutViewsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
    topic?: StringFieldUpdateOperationsInput | string
    post_app_link?: LinkUncheckedUpdateManyWithoutPost_app_postNestedInput
    post_app_post_images?: post_app_post_imagesUncheckedUpdateManyWithoutPost_app_postNestedInput
    likes?: post_app_post_likesUncheckedUpdateManyWithoutPostNestedInput
    post_app_post_tags?: post_app_post_tagsUncheckedUpdateManyWithoutPost_app_postNestedInput
  }

  export type ProfileUpsertWithoutPost_app_post_viewsInput = {
    update: XOR<ProfileUpdateWithoutPost_app_post_viewsInput, ProfileUncheckedUpdateWithoutPost_app_post_viewsInput>
    create: XOR<ProfileCreateWithoutPost_app_post_viewsInput, ProfileUncheckedCreateWithoutPost_app_post_viewsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutPost_app_post_viewsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutPost_app_post_viewsInput, ProfileUncheckedUpdateWithoutPost_app_post_viewsInput>
  }

  export type ProfileUpdateWithoutPost_app_post_viewsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUpdateManyWithoutAuthorNestedInput
    album?: AlbumUpdateManyWithoutAuthorNestedInput
    post?: PostUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUpdateManyWithoutProfile2NestedInput
    auth_user?: auth_userUpdateOneRequiredWithoutUser_app_profileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutPost_app_post_viewsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUncheckedUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUncheckedUpdateManyWithoutAuthorNestedInput
    album?: AlbumUncheckedUpdateManyWithoutAuthorNestedInput
    post?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUncheckedUpdateManyWithoutUser_app_profileNestedInput
    avatar?: AvatarUncheckedUpdateManyWithoutProfileNestedInput
    friendship_from?: FriendshipUncheckedUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUncheckedUpdateManyWithoutProfile2NestedInput
  }

  export type ChatGroupCreateWithoutAdminInput = {
    id?: bigint | number
    name: string
    is_personal_chat: boolean
    avatar?: string | null
    chat_app_chatgroup_members?: chat_app_chatgroup_membersCreateNestedManyWithoutChat_app_chatgroupInput
    chat_app_chatmessage?: ChatMessageCreateNestedManyWithoutChat_app_chatgroupInput
  }

  export type ChatGroupUncheckedCreateWithoutAdminInput = {
    id?: bigint | number
    name: string
    is_personal_chat: boolean
    avatar?: string | null
    chat_app_chatgroup_members?: chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutChat_app_chatgroupInput
    chat_app_chatmessage?: ChatMessageUncheckedCreateNestedManyWithoutChat_app_chatgroupInput
  }

  export type ChatGroupCreateOrConnectWithoutAdminInput = {
    where: ChatGroupWhereUniqueInput
    create: XOR<ChatGroupCreateWithoutAdminInput, ChatGroupUncheckedCreateWithoutAdminInput>
  }

  export type ChatGroupCreateManyAdminInputEnvelope = {
    data: ChatGroupCreateManyAdminInput | ChatGroupCreateManyAdminInput[]
    skipDuplicates?: boolean
  }

  export type chat_app_chatgroup_membersCreateWithoutProfileInput = {
    id?: bigint | number
    chat_app_chatgroup: ChatGroupCreateNestedOneWithoutChat_app_chatgroup_membersInput
  }

  export type chat_app_chatgroup_membersUncheckedCreateWithoutProfileInput = {
    id?: bigint | number
    chatgroup_id: bigint | number
  }

  export type chat_app_chatgroup_membersCreateOrConnectWithoutProfileInput = {
    where: chat_app_chatgroup_membersWhereUniqueInput
    create: XOR<chat_app_chatgroup_membersCreateWithoutProfileInput, chat_app_chatgroup_membersUncheckedCreateWithoutProfileInput>
  }

  export type chat_app_chatgroup_membersCreateManyProfileInputEnvelope = {
    data: chat_app_chatgroup_membersCreateManyProfileInput | chat_app_chatgroup_membersCreateManyProfileInput[]
    skipDuplicates?: boolean
  }

  export type ChatMessageCreateWithoutAuthorInput = {
    id?: bigint | number
    content: string
    sent_at: Date | string
    attached_image?: string | null
    chat_app_chatgroup: ChatGroupCreateNestedOneWithoutChat_app_chatmessageInput
  }

  export type ChatMessageUncheckedCreateWithoutAuthorInput = {
    id?: bigint | number
    content: string
    sent_at: Date | string
    chat_group_id: bigint | number
    attached_image?: string | null
  }

  export type ChatMessageCreateOrConnectWithoutAuthorInput = {
    where: ChatMessageWhereUniqueInput
    create: XOR<ChatMessageCreateWithoutAuthorInput, ChatMessageUncheckedCreateWithoutAuthorInput>
  }

  export type ChatMessageCreateManyAuthorInputEnvelope = {
    data: ChatMessageCreateManyAuthorInput | ChatMessageCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type AlbumCreateWithoutAuthorInput = {
    id?: bigint | number
    name: string
    created_at: Date | string
    preview_image?: string | null
    shown: boolean
    post_app_tag: TagsCreateNestedOneWithoutPost_app_albumInput
    images?: post_app_album_imagesCreateNestedManyWithoutAlbumInput
  }

  export type AlbumUncheckedCreateWithoutAuthorInput = {
    id?: bigint | number
    name: string
    created_at: Date | string
    preview_image?: string | null
    shown: boolean
    topic_id: bigint | number
    images?: post_app_album_imagesUncheckedCreateNestedManyWithoutAlbumInput
  }

  export type AlbumCreateOrConnectWithoutAuthorInput = {
    where: AlbumWhereUniqueInput
    create: XOR<AlbumCreateWithoutAuthorInput, AlbumUncheckedCreateWithoutAuthorInput>
  }

  export type AlbumCreateManyAuthorInputEnvelope = {
    data: AlbumCreateManyAuthorInput | AlbumCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type PostCreateWithoutAuthorInput = {
    id?: bigint | number
    title: string
    content: string
    topic: string
    post_app_link?: LinkCreateNestedManyWithoutPost_app_postInput
    post_app_post_images?: post_app_post_imagesCreateNestedManyWithoutPost_app_postInput
    likes?: post_app_post_likesCreateNestedManyWithoutPostInput
    post_app_post_tags?: post_app_post_tagsCreateNestedManyWithoutPost_app_postInput
    views?: post_app_post_viewsCreateNestedManyWithoutPostInput
  }

  export type PostUncheckedCreateWithoutAuthorInput = {
    id?: bigint | number
    title: string
    content: string
    topic: string
    post_app_link?: LinkUncheckedCreateNestedManyWithoutPost_app_postInput
    post_app_post_images?: post_app_post_imagesUncheckedCreateNestedManyWithoutPost_app_postInput
    likes?: post_app_post_likesUncheckedCreateNestedManyWithoutPostInput
    post_app_post_tags?: post_app_post_tagsUncheckedCreateNestedManyWithoutPost_app_postInput
    views?: post_app_post_viewsUncheckedCreateNestedManyWithoutPostInput
  }

  export type PostCreateOrConnectWithoutAuthorInput = {
    where: PostWhereUniqueInput
    create: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput>
  }

  export type PostCreateManyAuthorInputEnvelope = {
    data: PostCreateManyAuthorInput | PostCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type post_app_post_likesCreateWithoutUser_app_profileInput = {
    id?: bigint | number
    post: PostCreateNestedOneWithoutLikesInput
  }

  export type post_app_post_likesUncheckedCreateWithoutUser_app_profileInput = {
    id?: bigint | number
    post_id: bigint | number
  }

  export type post_app_post_likesCreateOrConnectWithoutUser_app_profileInput = {
    where: post_app_post_likesWhereUniqueInput
    create: XOR<post_app_post_likesCreateWithoutUser_app_profileInput, post_app_post_likesUncheckedCreateWithoutUser_app_profileInput>
  }

  export type post_app_post_likesCreateManyUser_app_profileInputEnvelope = {
    data: post_app_post_likesCreateManyUser_app_profileInput | post_app_post_likesCreateManyUser_app_profileInput[]
    skipDuplicates?: boolean
  }

  export type post_app_post_viewsCreateWithoutUser_app_profileInput = {
    id?: bigint | number
    post: PostCreateNestedOneWithoutViewsInput
  }

  export type post_app_post_viewsUncheckedCreateWithoutUser_app_profileInput = {
    id?: bigint | number
    post_id: bigint | number
  }

  export type post_app_post_viewsCreateOrConnectWithoutUser_app_profileInput = {
    where: post_app_post_viewsWhereUniqueInput
    create: XOR<post_app_post_viewsCreateWithoutUser_app_profileInput, post_app_post_viewsUncheckedCreateWithoutUser_app_profileInput>
  }

  export type post_app_post_viewsCreateManyUser_app_profileInputEnvelope = {
    data: post_app_post_viewsCreateManyUser_app_profileInput | post_app_post_viewsCreateManyUser_app_profileInput[]
    skipDuplicates?: boolean
  }

  export type AvatarCreateWithoutProfileInput = {
    id?: bigint | number
    image: string
    active: boolean
    shown: boolean
  }

  export type AvatarUncheckedCreateWithoutProfileInput = {
    id?: bigint | number
    image: string
    active: boolean
    shown: boolean
  }

  export type AvatarCreateOrConnectWithoutProfileInput = {
    where: AvatarWhereUniqueInput
    create: XOR<AvatarCreateWithoutProfileInput, AvatarUncheckedCreateWithoutProfileInput>
  }

  export type AvatarCreateManyProfileInputEnvelope = {
    data: AvatarCreateManyProfileInput | AvatarCreateManyProfileInput[]
    skipDuplicates?: boolean
  }

  export type FriendshipCreateWithoutProfile1Input = {
    id?: bigint | number
    accepted: boolean
    profile2: ProfileCreateNestedOneWithoutFriendship_toInput
  }

  export type FriendshipUncheckedCreateWithoutProfile1Input = {
    id?: bigint | number
    accepted: boolean
    profile2_id: bigint | number
  }

  export type FriendshipCreateOrConnectWithoutProfile1Input = {
    where: FriendshipWhereUniqueInput
    create: XOR<FriendshipCreateWithoutProfile1Input, FriendshipUncheckedCreateWithoutProfile1Input>
  }

  export type FriendshipCreateManyProfile1InputEnvelope = {
    data: FriendshipCreateManyProfile1Input | FriendshipCreateManyProfile1Input[]
    skipDuplicates?: boolean
  }

  export type FriendshipCreateWithoutProfile2Input = {
    id?: bigint | number
    accepted: boolean
    profile1: ProfileCreateNestedOneWithoutFriendship_fromInput
  }

  export type FriendshipUncheckedCreateWithoutProfile2Input = {
    id?: bigint | number
    accepted: boolean
    profile1_id: bigint | number
  }

  export type FriendshipCreateOrConnectWithoutProfile2Input = {
    where: FriendshipWhereUniqueInput
    create: XOR<FriendshipCreateWithoutProfile2Input, FriendshipUncheckedCreateWithoutProfile2Input>
  }

  export type FriendshipCreateManyProfile2InputEnvelope = {
    data: FriendshipCreateManyProfile2Input | FriendshipCreateManyProfile2Input[]
    skipDuplicates?: boolean
  }

  export type auth_userCreateWithoutUser_app_profileInput = {
    password: string
    last_login?: Date | string | null
    is_superuser: boolean
    username: string
    first_name: string
    last_name: string
    email: string
    is_staff: boolean
    is_active: boolean
    date_joined: Date | string
    auth_user_groups?: auth_user_groupsCreateNestedManyWithoutAuth_userInput
    auth_user_user_permissions?: auth_user_user_permissionsCreateNestedManyWithoutAuth_userInput
    django_admin_log?: django_admin_logCreateNestedManyWithoutAuth_userInput
  }

  export type auth_userUncheckedCreateWithoutUser_app_profileInput = {
    id?: number
    password: string
    last_login?: Date | string | null
    is_superuser: boolean
    username: string
    first_name: string
    last_name: string
    email: string
    is_staff: boolean
    is_active: boolean
    date_joined: Date | string
    auth_user_groups?: auth_user_groupsUncheckedCreateNestedManyWithoutAuth_userInput
    auth_user_user_permissions?: auth_user_user_permissionsUncheckedCreateNestedManyWithoutAuth_userInput
    django_admin_log?: django_admin_logUncheckedCreateNestedManyWithoutAuth_userInput
  }

  export type auth_userCreateOrConnectWithoutUser_app_profileInput = {
    where: auth_userWhereUniqueInput
    create: XOR<auth_userCreateWithoutUser_app_profileInput, auth_userUncheckedCreateWithoutUser_app_profileInput>
  }

  export type ChatGroupUpsertWithWhereUniqueWithoutAdminInput = {
    where: ChatGroupWhereUniqueInput
    update: XOR<ChatGroupUpdateWithoutAdminInput, ChatGroupUncheckedUpdateWithoutAdminInput>
    create: XOR<ChatGroupCreateWithoutAdminInput, ChatGroupUncheckedCreateWithoutAdminInput>
  }

  export type ChatGroupUpdateWithWhereUniqueWithoutAdminInput = {
    where: ChatGroupWhereUniqueInput
    data: XOR<ChatGroupUpdateWithoutAdminInput, ChatGroupUncheckedUpdateWithoutAdminInput>
  }

  export type ChatGroupUpdateManyWithWhereWithoutAdminInput = {
    where: ChatGroupScalarWhereInput
    data: XOR<ChatGroupUpdateManyMutationInput, ChatGroupUncheckedUpdateManyWithoutAdminInput>
  }

  export type ChatGroupScalarWhereInput = {
    AND?: ChatGroupScalarWhereInput | ChatGroupScalarWhereInput[]
    OR?: ChatGroupScalarWhereInput[]
    NOT?: ChatGroupScalarWhereInput | ChatGroupScalarWhereInput[]
    id?: BigIntFilter<"ChatGroup"> | bigint | number
    name?: StringFilter<"ChatGroup"> | string
    is_personal_chat?: BoolFilter<"ChatGroup"> | boolean
    admin_id?: BigIntFilter<"ChatGroup"> | bigint | number
    avatar?: StringNullableFilter<"ChatGroup"> | string | null
  }

  export type chat_app_chatgroup_membersUpsertWithWhereUniqueWithoutProfileInput = {
    where: chat_app_chatgroup_membersWhereUniqueInput
    update: XOR<chat_app_chatgroup_membersUpdateWithoutProfileInput, chat_app_chatgroup_membersUncheckedUpdateWithoutProfileInput>
    create: XOR<chat_app_chatgroup_membersCreateWithoutProfileInput, chat_app_chatgroup_membersUncheckedCreateWithoutProfileInput>
  }

  export type chat_app_chatgroup_membersUpdateWithWhereUniqueWithoutProfileInput = {
    where: chat_app_chatgroup_membersWhereUniqueInput
    data: XOR<chat_app_chatgroup_membersUpdateWithoutProfileInput, chat_app_chatgroup_membersUncheckedUpdateWithoutProfileInput>
  }

  export type chat_app_chatgroup_membersUpdateManyWithWhereWithoutProfileInput = {
    where: chat_app_chatgroup_membersScalarWhereInput
    data: XOR<chat_app_chatgroup_membersUpdateManyMutationInput, chat_app_chatgroup_membersUncheckedUpdateManyWithoutProfileInput>
  }

  export type ChatMessageUpsertWithWhereUniqueWithoutAuthorInput = {
    where: ChatMessageWhereUniqueInput
    update: XOR<ChatMessageUpdateWithoutAuthorInput, ChatMessageUncheckedUpdateWithoutAuthorInput>
    create: XOR<ChatMessageCreateWithoutAuthorInput, ChatMessageUncheckedCreateWithoutAuthorInput>
  }

  export type ChatMessageUpdateWithWhereUniqueWithoutAuthorInput = {
    where: ChatMessageWhereUniqueInput
    data: XOR<ChatMessageUpdateWithoutAuthorInput, ChatMessageUncheckedUpdateWithoutAuthorInput>
  }

  export type ChatMessageUpdateManyWithWhereWithoutAuthorInput = {
    where: ChatMessageScalarWhereInput
    data: XOR<ChatMessageUpdateManyMutationInput, ChatMessageUncheckedUpdateManyWithoutAuthorInput>
  }

  export type AlbumUpsertWithWhereUniqueWithoutAuthorInput = {
    where: AlbumWhereUniqueInput
    update: XOR<AlbumUpdateWithoutAuthorInput, AlbumUncheckedUpdateWithoutAuthorInput>
    create: XOR<AlbumCreateWithoutAuthorInput, AlbumUncheckedCreateWithoutAuthorInput>
  }

  export type AlbumUpdateWithWhereUniqueWithoutAuthorInput = {
    where: AlbumWhereUniqueInput
    data: XOR<AlbumUpdateWithoutAuthorInput, AlbumUncheckedUpdateWithoutAuthorInput>
  }

  export type AlbumUpdateManyWithWhereWithoutAuthorInput = {
    where: AlbumScalarWhereInput
    data: XOR<AlbumUpdateManyMutationInput, AlbumUncheckedUpdateManyWithoutAuthorInput>
  }

  export type PostUpsertWithWhereUniqueWithoutAuthorInput = {
    where: PostWhereUniqueInput
    update: XOR<PostUpdateWithoutAuthorInput, PostUncheckedUpdateWithoutAuthorInput>
    create: XOR<PostCreateWithoutAuthorInput, PostUncheckedCreateWithoutAuthorInput>
  }

  export type PostUpdateWithWhereUniqueWithoutAuthorInput = {
    where: PostWhereUniqueInput
    data: XOR<PostUpdateWithoutAuthorInput, PostUncheckedUpdateWithoutAuthorInput>
  }

  export type PostUpdateManyWithWhereWithoutAuthorInput = {
    where: PostScalarWhereInput
    data: XOR<PostUpdateManyMutationInput, PostUncheckedUpdateManyWithoutAuthorInput>
  }

  export type PostScalarWhereInput = {
    AND?: PostScalarWhereInput | PostScalarWhereInput[]
    OR?: PostScalarWhereInput[]
    NOT?: PostScalarWhereInput | PostScalarWhereInput[]
    id?: BigIntFilter<"Post"> | bigint | number
    title?: StringFilter<"Post"> | string
    content?: StringFilter<"Post"> | string
    author_id?: BigIntFilter<"Post"> | bigint | number
    topic?: StringFilter<"Post"> | string
  }

  export type post_app_post_likesUpsertWithWhereUniqueWithoutUser_app_profileInput = {
    where: post_app_post_likesWhereUniqueInput
    update: XOR<post_app_post_likesUpdateWithoutUser_app_profileInput, post_app_post_likesUncheckedUpdateWithoutUser_app_profileInput>
    create: XOR<post_app_post_likesCreateWithoutUser_app_profileInput, post_app_post_likesUncheckedCreateWithoutUser_app_profileInput>
  }

  export type post_app_post_likesUpdateWithWhereUniqueWithoutUser_app_profileInput = {
    where: post_app_post_likesWhereUniqueInput
    data: XOR<post_app_post_likesUpdateWithoutUser_app_profileInput, post_app_post_likesUncheckedUpdateWithoutUser_app_profileInput>
  }

  export type post_app_post_likesUpdateManyWithWhereWithoutUser_app_profileInput = {
    where: post_app_post_likesScalarWhereInput
    data: XOR<post_app_post_likesUpdateManyMutationInput, post_app_post_likesUncheckedUpdateManyWithoutUser_app_profileInput>
  }

  export type post_app_post_viewsUpsertWithWhereUniqueWithoutUser_app_profileInput = {
    where: post_app_post_viewsWhereUniqueInput
    update: XOR<post_app_post_viewsUpdateWithoutUser_app_profileInput, post_app_post_viewsUncheckedUpdateWithoutUser_app_profileInput>
    create: XOR<post_app_post_viewsCreateWithoutUser_app_profileInput, post_app_post_viewsUncheckedCreateWithoutUser_app_profileInput>
  }

  export type post_app_post_viewsUpdateWithWhereUniqueWithoutUser_app_profileInput = {
    where: post_app_post_viewsWhereUniqueInput
    data: XOR<post_app_post_viewsUpdateWithoutUser_app_profileInput, post_app_post_viewsUncheckedUpdateWithoutUser_app_profileInput>
  }

  export type post_app_post_viewsUpdateManyWithWhereWithoutUser_app_profileInput = {
    where: post_app_post_viewsScalarWhereInput
    data: XOR<post_app_post_viewsUpdateManyMutationInput, post_app_post_viewsUncheckedUpdateManyWithoutUser_app_profileInput>
  }

  export type AvatarUpsertWithWhereUniqueWithoutProfileInput = {
    where: AvatarWhereUniqueInput
    update: XOR<AvatarUpdateWithoutProfileInput, AvatarUncheckedUpdateWithoutProfileInput>
    create: XOR<AvatarCreateWithoutProfileInput, AvatarUncheckedCreateWithoutProfileInput>
  }

  export type AvatarUpdateWithWhereUniqueWithoutProfileInput = {
    where: AvatarWhereUniqueInput
    data: XOR<AvatarUpdateWithoutProfileInput, AvatarUncheckedUpdateWithoutProfileInput>
  }

  export type AvatarUpdateManyWithWhereWithoutProfileInput = {
    where: AvatarScalarWhereInput
    data: XOR<AvatarUpdateManyMutationInput, AvatarUncheckedUpdateManyWithoutProfileInput>
  }

  export type AvatarScalarWhereInput = {
    AND?: AvatarScalarWhereInput | AvatarScalarWhereInput[]
    OR?: AvatarScalarWhereInput[]
    NOT?: AvatarScalarWhereInput | AvatarScalarWhereInput[]
    id?: BigIntFilter<"Avatar"> | bigint | number
    image?: StringFilter<"Avatar"> | string
    active?: BoolFilter<"Avatar"> | boolean
    shown?: BoolFilter<"Avatar"> | boolean
    profile_id?: BigIntFilter<"Avatar"> | bigint | number
  }

  export type FriendshipUpsertWithWhereUniqueWithoutProfile1Input = {
    where: FriendshipWhereUniqueInput
    update: XOR<FriendshipUpdateWithoutProfile1Input, FriendshipUncheckedUpdateWithoutProfile1Input>
    create: XOR<FriendshipCreateWithoutProfile1Input, FriendshipUncheckedCreateWithoutProfile1Input>
  }

  export type FriendshipUpdateWithWhereUniqueWithoutProfile1Input = {
    where: FriendshipWhereUniqueInput
    data: XOR<FriendshipUpdateWithoutProfile1Input, FriendshipUncheckedUpdateWithoutProfile1Input>
  }

  export type FriendshipUpdateManyWithWhereWithoutProfile1Input = {
    where: FriendshipScalarWhereInput
    data: XOR<FriendshipUpdateManyMutationInput, FriendshipUncheckedUpdateManyWithoutProfile1Input>
  }

  export type FriendshipScalarWhereInput = {
    AND?: FriendshipScalarWhereInput | FriendshipScalarWhereInput[]
    OR?: FriendshipScalarWhereInput[]
    NOT?: FriendshipScalarWhereInput | FriendshipScalarWhereInput[]
    id?: BigIntFilter<"Friendship"> | bigint | number
    accepted?: BoolFilter<"Friendship"> | boolean
    profile1_id?: BigIntFilter<"Friendship"> | bigint | number
    profile2_id?: BigIntFilter<"Friendship"> | bigint | number
  }

  export type FriendshipUpsertWithWhereUniqueWithoutProfile2Input = {
    where: FriendshipWhereUniqueInput
    update: XOR<FriendshipUpdateWithoutProfile2Input, FriendshipUncheckedUpdateWithoutProfile2Input>
    create: XOR<FriendshipCreateWithoutProfile2Input, FriendshipUncheckedCreateWithoutProfile2Input>
  }

  export type FriendshipUpdateWithWhereUniqueWithoutProfile2Input = {
    where: FriendshipWhereUniqueInput
    data: XOR<FriendshipUpdateWithoutProfile2Input, FriendshipUncheckedUpdateWithoutProfile2Input>
  }

  export type FriendshipUpdateManyWithWhereWithoutProfile2Input = {
    where: FriendshipScalarWhereInput
    data: XOR<FriendshipUpdateManyMutationInput, FriendshipUncheckedUpdateManyWithoutProfile2Input>
  }

  export type auth_userUpsertWithoutUser_app_profileInput = {
    update: XOR<auth_userUpdateWithoutUser_app_profileInput, auth_userUncheckedUpdateWithoutUser_app_profileInput>
    create: XOR<auth_userCreateWithoutUser_app_profileInput, auth_userUncheckedCreateWithoutUser_app_profileInput>
    where?: auth_userWhereInput
  }

  export type auth_userUpdateToOneWithWhereWithoutUser_app_profileInput = {
    where?: auth_userWhereInput
    data: XOR<auth_userUpdateWithoutUser_app_profileInput, auth_userUncheckedUpdateWithoutUser_app_profileInput>
  }

  export type auth_userUpdateWithoutUser_app_profileInput = {
    password?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_superuser?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    is_staff?: BoolFieldUpdateOperationsInput | boolean
    is_active?: BoolFieldUpdateOperationsInput | boolean
    date_joined?: DateTimeFieldUpdateOperationsInput | Date | string
    auth_user_groups?: auth_user_groupsUpdateManyWithoutAuth_userNestedInput
    auth_user_user_permissions?: auth_user_user_permissionsUpdateManyWithoutAuth_userNestedInput
    django_admin_log?: django_admin_logUpdateManyWithoutAuth_userNestedInput
  }

  export type auth_userUncheckedUpdateWithoutUser_app_profileInput = {
    id?: IntFieldUpdateOperationsInput | number
    password?: StringFieldUpdateOperationsInput | string
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_superuser?: BoolFieldUpdateOperationsInput | boolean
    username?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    is_staff?: BoolFieldUpdateOperationsInput | boolean
    is_active?: BoolFieldUpdateOperationsInput | boolean
    date_joined?: DateTimeFieldUpdateOperationsInput | Date | string
    auth_user_groups?: auth_user_groupsUncheckedUpdateManyWithoutAuth_userNestedInput
    auth_user_user_permissions?: auth_user_user_permissionsUncheckedUpdateManyWithoutAuth_userNestedInput
    django_admin_log?: django_admin_logUncheckedUpdateManyWithoutAuth_userNestedInput
  }

  export type ProfileCreateWithoutAvatarInput = {
    id?: bigint | number
    date_of_birth: Date | string
    signature?: string | null
    administered_groups?: ChatGroupCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageCreateNestedManyWithoutAuthorInput
    album?: AlbumCreateNestedManyWithoutAuthorInput
    post?: PostCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsCreateNestedManyWithoutUser_app_profileInput
    friendship_from?: FriendshipCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipCreateNestedManyWithoutProfile2Input
    auth_user: auth_userCreateNestedOneWithoutUser_app_profileInput
  }

  export type ProfileUncheckedCreateWithoutAvatarInput = {
    id?: bigint | number
    date_of_birth: Date | string
    user_id: number
    signature?: string | null
    administered_groups?: ChatGroupUncheckedCreateNestedManyWithoutAdminInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedCreateNestedManyWithoutProfileInput
    chat_messages?: ChatMessageUncheckedCreateNestedManyWithoutAuthorInput
    album?: AlbumUncheckedCreateNestedManyWithoutAuthorInput
    post?: PostUncheckedCreateNestedManyWithoutAuthorInput
    post_app_post_likes?: post_app_post_likesUncheckedCreateNestedManyWithoutUser_app_profileInput
    post_app_post_views?: post_app_post_viewsUncheckedCreateNestedManyWithoutUser_app_profileInput
    friendship_from?: FriendshipUncheckedCreateNestedManyWithoutProfile1Input
    friendship_to?: FriendshipUncheckedCreateNestedManyWithoutProfile2Input
  }

  export type ProfileCreateOrConnectWithoutAvatarInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutAvatarInput, ProfileUncheckedCreateWithoutAvatarInput>
  }

  export type ProfileUpsertWithoutAvatarInput = {
    update: XOR<ProfileUpdateWithoutAvatarInput, ProfileUncheckedUpdateWithoutAvatarInput>
    create: XOR<ProfileCreateWithoutAvatarInput, ProfileUncheckedCreateWithoutAvatarInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutAvatarInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutAvatarInput, ProfileUncheckedUpdateWithoutAvatarInput>
  }

  export type ProfileUpdateWithoutAvatarInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUpdateManyWithoutAuthorNestedInput
    album?: AlbumUpdateManyWithoutAuthorNestedInput
    post?: PostUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUpdateManyWithoutUser_app_profileNestedInput
    friendship_from?: FriendshipUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUpdateManyWithoutProfile2NestedInput
    auth_user?: auth_userUpdateOneRequiredWithoutUser_app_profileNestedInput
  }

  export type ProfileUncheckedUpdateWithoutAvatarInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    administered_groups?: ChatGroupUncheckedUpdateManyWithoutAdminNestedInput
    chat_group_members?: chat_app_chatgroup_membersUncheckedUpdateManyWithoutProfileNestedInput
    chat_messages?: ChatMessageUncheckedUpdateManyWithoutAuthorNestedInput
    album?: AlbumUncheckedUpdateManyWithoutAuthorNestedInput
    post?: PostUncheckedUpdateManyWithoutAuthorNestedInput
    post_app_post_likes?: post_app_post_likesUncheckedUpdateManyWithoutUser_app_profileNestedInput
    post_app_post_views?: post_app_post_viewsUncheckedUpdateManyWithoutUser_app_profileNestedInput
    friendship_from?: FriendshipUncheckedUpdateManyWithoutProfile1NestedInput
    friendship_to?: FriendshipUncheckedUpdateManyWithoutProfile2NestedInput
  }

  export type auth_group_permissionsCreateManyAuth_groupInput = {
    id?: bigint | number
    permission_id: number
  }

  export type auth_user_groupsCreateManyAuth_groupInput = {
    id?: bigint | number
    user_id: number
  }

  export type auth_group_permissionsUpdateWithoutAuth_groupInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    auth_permission?: auth_permissionUpdateOneRequiredWithoutAuth_group_permissionsNestedInput
  }

  export type auth_group_permissionsUncheckedUpdateWithoutAuth_groupInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    permission_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_group_permissionsUncheckedUpdateManyWithoutAuth_groupInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    permission_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_user_groupsUpdateWithoutAuth_groupInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    auth_user?: auth_userUpdateOneRequiredWithoutAuth_user_groupsNestedInput
  }

  export type auth_user_groupsUncheckedUpdateWithoutAuth_groupInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_user_groupsUncheckedUpdateManyWithoutAuth_groupInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_group_permissionsCreateManyAuth_permissionInput = {
    id?: bigint | number
    group_id: number
  }

  export type auth_user_user_permissionsCreateManyAuth_permissionInput = {
    id?: bigint | number
    user_id: number
  }

  export type auth_group_permissionsUpdateWithoutAuth_permissionInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    auth_group?: auth_groupUpdateOneRequiredWithoutAuth_group_permissionsNestedInput
  }

  export type auth_group_permissionsUncheckedUpdateWithoutAuth_permissionInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    group_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_group_permissionsUncheckedUpdateManyWithoutAuth_permissionInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    group_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_user_user_permissionsUpdateWithoutAuth_permissionInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    auth_user?: auth_userUpdateOneRequiredWithoutAuth_user_user_permissionsNestedInput
  }

  export type auth_user_user_permissionsUncheckedUpdateWithoutAuth_permissionInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_user_user_permissionsUncheckedUpdateManyWithoutAuth_permissionInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_user_groupsCreateManyAuth_userInput = {
    id?: bigint | number
    group_id: number
  }

  export type auth_user_user_permissionsCreateManyAuth_userInput = {
    id?: bigint | number
    permission_id: number
  }

  export type django_admin_logCreateManyAuth_userInput = {
    id?: number
    action_time: Date | string
    object_id?: string | null
    object_repr: string
    action_flag: number
    change_message: string
    content_type_id?: number | null
  }

  export type auth_user_groupsUpdateWithoutAuth_userInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    auth_group?: auth_groupUpdateOneRequiredWithoutAuth_user_groupsNestedInput
  }

  export type auth_user_groupsUncheckedUpdateWithoutAuth_userInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    group_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_user_groupsUncheckedUpdateManyWithoutAuth_userInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    group_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_user_user_permissionsUpdateWithoutAuth_userInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    auth_permission?: auth_permissionUpdateOneRequiredWithoutAuth_user_user_permissionsNestedInput
  }

  export type auth_user_user_permissionsUncheckedUpdateWithoutAuth_userInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    permission_id?: IntFieldUpdateOperationsInput | number
  }

  export type auth_user_user_permissionsUncheckedUpdateManyWithoutAuth_userInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    permission_id?: IntFieldUpdateOperationsInput | number
  }

  export type django_admin_logUpdateWithoutAuth_userInput = {
    action_time?: DateTimeFieldUpdateOperationsInput | Date | string
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    object_repr?: StringFieldUpdateOperationsInput | string
    action_flag?: IntFieldUpdateOperationsInput | number
    change_message?: StringFieldUpdateOperationsInput | string
    django_content_type?: django_content_typeUpdateOneWithoutDjango_admin_logNestedInput
  }

  export type django_admin_logUncheckedUpdateWithoutAuth_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    action_time?: DateTimeFieldUpdateOperationsInput | Date | string
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    object_repr?: StringFieldUpdateOperationsInput | string
    action_flag?: IntFieldUpdateOperationsInput | number
    change_message?: StringFieldUpdateOperationsInput | string
    content_type_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type django_admin_logUncheckedUpdateManyWithoutAuth_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    action_time?: DateTimeFieldUpdateOperationsInput | Date | string
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    object_repr?: StringFieldUpdateOperationsInput | string
    action_flag?: IntFieldUpdateOperationsInput | number
    change_message?: StringFieldUpdateOperationsInput | string
    content_type_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type auth_permissionCreateManyDjango_content_typeInput = {
    id?: number
    name: string
    codename: string
  }

  export type django_admin_logCreateManyDjango_content_typeInput = {
    id?: number
    action_time: Date | string
    object_id?: string | null
    object_repr: string
    action_flag: number
    change_message: string
    user_id: number
  }

  export type auth_permissionUpdateWithoutDjango_content_typeInput = {
    name?: StringFieldUpdateOperationsInput | string
    codename?: StringFieldUpdateOperationsInput | string
    auth_group_permissions?: auth_group_permissionsUpdateManyWithoutAuth_permissionNestedInput
    auth_user_user_permissions?: auth_user_user_permissionsUpdateManyWithoutAuth_permissionNestedInput
  }

  export type auth_permissionUncheckedUpdateWithoutDjango_content_typeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codename?: StringFieldUpdateOperationsInput | string
    auth_group_permissions?: auth_group_permissionsUncheckedUpdateManyWithoutAuth_permissionNestedInput
    auth_user_user_permissions?: auth_user_user_permissionsUncheckedUpdateManyWithoutAuth_permissionNestedInput
  }

  export type auth_permissionUncheckedUpdateManyWithoutDjango_content_typeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    codename?: StringFieldUpdateOperationsInput | string
  }

  export type django_admin_logUpdateWithoutDjango_content_typeInput = {
    action_time?: DateTimeFieldUpdateOperationsInput | Date | string
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    object_repr?: StringFieldUpdateOperationsInput | string
    action_flag?: IntFieldUpdateOperationsInput | number
    change_message?: StringFieldUpdateOperationsInput | string
    auth_user?: auth_userUpdateOneRequiredWithoutDjango_admin_logNestedInput
  }

  export type django_admin_logUncheckedUpdateWithoutDjango_content_typeInput = {
    id?: IntFieldUpdateOperationsInput | number
    action_time?: DateTimeFieldUpdateOperationsInput | Date | string
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    object_repr?: StringFieldUpdateOperationsInput | string
    action_flag?: IntFieldUpdateOperationsInput | number
    change_message?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type django_admin_logUncheckedUpdateManyWithoutDjango_content_typeInput = {
    id?: IntFieldUpdateOperationsInput | number
    action_time?: DateTimeFieldUpdateOperationsInput | Date | string
    object_id?: NullableStringFieldUpdateOperationsInput | string | null
    object_repr?: StringFieldUpdateOperationsInput | string
    action_flag?: IntFieldUpdateOperationsInput | number
    change_message?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
  }

  export type post_app_album_imagesCreateManyAlbumInput = {
    id?: bigint | number
    image_id: bigint | number
  }

  export type post_app_album_imagesUpdateWithoutAlbumInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    image?: ImageUpdateOneRequiredWithoutAlbum_imagesNestedInput
  }

  export type post_app_album_imagesUncheckedUpdateWithoutAlbumInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    image_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_album_imagesUncheckedUpdateManyWithoutAlbumInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    image_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type chat_app_chatgroup_membersCreateManyChat_app_chatgroupInput = {
    id?: bigint | number
    profile_id: bigint | number
  }

  export type ChatMessageCreateManyChat_app_chatgroupInput = {
    id?: bigint | number
    content: string
    sent_at: Date | string
    author_id: bigint | number
    attached_image?: string | null
  }

  export type chat_app_chatgroup_membersUpdateWithoutChat_app_chatgroupInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    profile?: ProfileUpdateOneRequiredWithoutChat_group_membersNestedInput
  }

  export type chat_app_chatgroup_membersUncheckedUpdateWithoutChat_app_chatgroupInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    profile_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type chat_app_chatgroup_membersUncheckedUpdateManyWithoutChat_app_chatgroupInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    profile_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type ChatMessageUpdateWithoutChat_app_chatgroupInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: StringFieldUpdateOperationsInput | string
    sent_at?: DateTimeFieldUpdateOperationsInput | Date | string
    attached_image?: NullableStringFieldUpdateOperationsInput | string | null
    author?: ProfileUpdateOneRequiredWithoutChat_messagesNestedInput
  }

  export type ChatMessageUncheckedUpdateWithoutChat_app_chatgroupInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: StringFieldUpdateOperationsInput | string
    sent_at?: DateTimeFieldUpdateOperationsInput | Date | string
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
    attached_image?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChatMessageUncheckedUpdateManyWithoutChat_app_chatgroupInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: StringFieldUpdateOperationsInput | string
    sent_at?: DateTimeFieldUpdateOperationsInput | Date | string
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
    attached_image?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type post_app_album_imagesCreateManyImageInput = {
    id?: bigint | number
    album_id: bigint | number
  }

  export type post_app_post_imagesCreateManyPost_app_imageInput = {
    id?: bigint | number
    post_id: bigint | number
  }

  export type post_app_album_imagesUpdateWithoutImageInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    album?: AlbumUpdateOneRequiredWithoutImagesNestedInput
  }

  export type post_app_album_imagesUncheckedUpdateWithoutImageInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    album_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_album_imagesUncheckedUpdateManyWithoutImageInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    album_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_imagesUpdateWithoutPost_app_imageInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_app_post?: PostUpdateOneRequiredWithoutPost_app_post_imagesNestedInput
  }

  export type post_app_post_imagesUncheckedUpdateWithoutPost_app_imageInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_imagesUncheckedUpdateManyWithoutPost_app_imageInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type LinkCreateManyPost_app_postInput = {
    id?: bigint | number
    url: string
  }

  export type post_app_post_imagesCreateManyPost_app_postInput = {
    id?: bigint | number
    image_id: bigint | number
  }

  export type post_app_post_likesCreateManyPostInput = {
    id?: bigint | number
    profile_id: bigint | number
  }

  export type post_app_post_tagsCreateManyPost_app_postInput = {
    id?: bigint | number
    tag_id: bigint | number
  }

  export type post_app_post_viewsCreateManyPostInput = {
    id?: bigint | number
    profile_id: bigint | number
  }

  export type LinkUpdateWithoutPost_app_postInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
  }

  export type LinkUncheckedUpdateWithoutPost_app_postInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
  }

  export type LinkUncheckedUpdateManyWithoutPost_app_postInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
  }

  export type post_app_post_imagesUpdateWithoutPost_app_postInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_app_image?: ImageUpdateOneRequiredWithoutPost_app_post_imagesNestedInput
  }

  export type post_app_post_imagesUncheckedUpdateWithoutPost_app_postInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    image_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_imagesUncheckedUpdateManyWithoutPost_app_postInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    image_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_likesUpdateWithoutPostInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_app_profile?: ProfileUpdateOneRequiredWithoutPost_app_post_likesNestedInput
  }

  export type post_app_post_likesUncheckedUpdateWithoutPostInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    profile_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_likesUncheckedUpdateManyWithoutPostInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    profile_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_tagsUpdateWithoutPost_app_postInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_app_tag?: TagsUpdateOneRequiredWithoutPost_app_post_tagsNestedInput
  }

  export type post_app_post_tagsUncheckedUpdateWithoutPost_app_postInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    tag_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_tagsUncheckedUpdateManyWithoutPost_app_postInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    tag_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_viewsUpdateWithoutPostInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_app_profile?: ProfileUpdateOneRequiredWithoutPost_app_post_viewsNestedInput
  }

  export type post_app_post_viewsUncheckedUpdateWithoutPostInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    profile_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_viewsUncheckedUpdateManyWithoutPostInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    profile_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type AlbumCreateManyPost_app_tagInput = {
    id?: bigint | number
    name: string
    created_at: Date | string
    preview_image?: string | null
    shown: boolean
    author_id: bigint | number
  }

  export type post_app_post_tagsCreateManyPost_app_tagInput = {
    id?: bigint | number
    post_id: bigint | number
  }

  export type AlbumUpdateWithoutPost_app_tagInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    preview_image?: NullableStringFieldUpdateOperationsInput | string | null
    shown?: BoolFieldUpdateOperationsInput | boolean
    author?: ProfileUpdateOneRequiredWithoutAlbumNestedInput
    images?: post_app_album_imagesUpdateManyWithoutAlbumNestedInput
  }

  export type AlbumUncheckedUpdateWithoutPost_app_tagInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    preview_image?: NullableStringFieldUpdateOperationsInput | string | null
    shown?: BoolFieldUpdateOperationsInput | boolean
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
    images?: post_app_album_imagesUncheckedUpdateManyWithoutAlbumNestedInput
  }

  export type AlbumUncheckedUpdateManyWithoutPost_app_tagInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    preview_image?: NullableStringFieldUpdateOperationsInput | string | null
    shown?: BoolFieldUpdateOperationsInput | boolean
    author_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_tagsUpdateWithoutPost_app_tagInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_app_post?: PostUpdateOneRequiredWithoutPost_app_post_tagsNestedInput
  }

  export type post_app_post_tagsUncheckedUpdateWithoutPost_app_tagInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_tagsUncheckedUpdateManyWithoutPost_app_tagInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type ChatGroupCreateManyAdminInput = {
    id?: bigint | number
    name: string
    is_personal_chat: boolean
    avatar?: string | null
  }

  export type chat_app_chatgroup_membersCreateManyProfileInput = {
    id?: bigint | number
    chatgroup_id: bigint | number
  }

  export type ChatMessageCreateManyAuthorInput = {
    id?: bigint | number
    content: string
    sent_at: Date | string
    chat_group_id: bigint | number
    attached_image?: string | null
  }

  export type AlbumCreateManyAuthorInput = {
    id?: bigint | number
    name: string
    created_at: Date | string
    preview_image?: string | null
    shown: boolean
    topic_id: bigint | number
  }

  export type PostCreateManyAuthorInput = {
    id?: bigint | number
    title: string
    content: string
    topic: string
  }

  export type post_app_post_likesCreateManyUser_app_profileInput = {
    id?: bigint | number
    post_id: bigint | number
  }

  export type post_app_post_viewsCreateManyUser_app_profileInput = {
    id?: bigint | number
    post_id: bigint | number
  }

  export type AvatarCreateManyProfileInput = {
    id?: bigint | number
    image: string
    active: boolean
    shown: boolean
  }

  export type FriendshipCreateManyProfile1Input = {
    id?: bigint | number
    accepted: boolean
    profile2_id: bigint | number
  }

  export type FriendshipCreateManyProfile2Input = {
    id?: bigint | number
    accepted: boolean
    profile1_id: bigint | number
  }

  export type ChatGroupUpdateWithoutAdminInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    is_personal_chat?: BoolFieldUpdateOperationsInput | boolean
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    chat_app_chatgroup_members?: chat_app_chatgroup_membersUpdateManyWithoutChat_app_chatgroupNestedInput
    chat_app_chatmessage?: ChatMessageUpdateManyWithoutChat_app_chatgroupNestedInput
  }

  export type ChatGroupUncheckedUpdateWithoutAdminInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    is_personal_chat?: BoolFieldUpdateOperationsInput | boolean
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    chat_app_chatgroup_members?: chat_app_chatgroup_membersUncheckedUpdateManyWithoutChat_app_chatgroupNestedInput
    chat_app_chatmessage?: ChatMessageUncheckedUpdateManyWithoutChat_app_chatgroupNestedInput
  }

  export type ChatGroupUncheckedUpdateManyWithoutAdminInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    is_personal_chat?: BoolFieldUpdateOperationsInput | boolean
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type chat_app_chatgroup_membersUpdateWithoutProfileInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    chat_app_chatgroup?: ChatGroupUpdateOneRequiredWithoutChat_app_chatgroup_membersNestedInput
  }

  export type chat_app_chatgroup_membersUncheckedUpdateWithoutProfileInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    chatgroup_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type chat_app_chatgroup_membersUncheckedUpdateManyWithoutProfileInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    chatgroup_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type ChatMessageUpdateWithoutAuthorInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: StringFieldUpdateOperationsInput | string
    sent_at?: DateTimeFieldUpdateOperationsInput | Date | string
    attached_image?: NullableStringFieldUpdateOperationsInput | string | null
    chat_app_chatgroup?: ChatGroupUpdateOneRequiredWithoutChat_app_chatmessageNestedInput
  }

  export type ChatMessageUncheckedUpdateWithoutAuthorInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: StringFieldUpdateOperationsInput | string
    sent_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    attached_image?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ChatMessageUncheckedUpdateManyWithoutAuthorInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: StringFieldUpdateOperationsInput | string
    sent_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    attached_image?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AlbumUpdateWithoutAuthorInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    preview_image?: NullableStringFieldUpdateOperationsInput | string | null
    shown?: BoolFieldUpdateOperationsInput | boolean
    post_app_tag?: TagsUpdateOneRequiredWithoutPost_app_albumNestedInput
    images?: post_app_album_imagesUpdateManyWithoutAlbumNestedInput
  }

  export type AlbumUncheckedUpdateWithoutAuthorInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    preview_image?: NullableStringFieldUpdateOperationsInput | string | null
    shown?: BoolFieldUpdateOperationsInput | boolean
    topic_id?: BigIntFieldUpdateOperationsInput | bigint | number
    images?: post_app_album_imagesUncheckedUpdateManyWithoutAlbumNestedInput
  }

  export type AlbumUncheckedUpdateManyWithoutAuthorInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    preview_image?: NullableStringFieldUpdateOperationsInput | string | null
    shown?: BoolFieldUpdateOperationsInput | boolean
    topic_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type PostUpdateWithoutAuthorInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    post_app_link?: LinkUpdateManyWithoutPost_app_postNestedInput
    post_app_post_images?: post_app_post_imagesUpdateManyWithoutPost_app_postNestedInput
    likes?: post_app_post_likesUpdateManyWithoutPostNestedInput
    post_app_post_tags?: post_app_post_tagsUpdateManyWithoutPost_app_postNestedInput
    views?: post_app_post_viewsUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateWithoutAuthorInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
    post_app_link?: LinkUncheckedUpdateManyWithoutPost_app_postNestedInput
    post_app_post_images?: post_app_post_imagesUncheckedUpdateManyWithoutPost_app_postNestedInput
    likes?: post_app_post_likesUncheckedUpdateManyWithoutPostNestedInput
    post_app_post_tags?: post_app_post_tagsUncheckedUpdateManyWithoutPost_app_postNestedInput
    views?: post_app_post_viewsUncheckedUpdateManyWithoutPostNestedInput
  }

  export type PostUncheckedUpdateManyWithoutAuthorInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    topic?: StringFieldUpdateOperationsInput | string
  }

  export type post_app_post_likesUpdateWithoutUser_app_profileInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post?: PostUpdateOneRequiredWithoutLikesNestedInput
  }

  export type post_app_post_likesUncheckedUpdateWithoutUser_app_profileInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_likesUncheckedUpdateManyWithoutUser_app_profileInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_viewsUpdateWithoutUser_app_profileInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post?: PostUpdateOneRequiredWithoutViewsNestedInput
  }

  export type post_app_post_viewsUncheckedUpdateWithoutUser_app_profileInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type post_app_post_viewsUncheckedUpdateManyWithoutUser_app_profileInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type AvatarUpdateWithoutProfileInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    image?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    shown?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AvatarUncheckedUpdateWithoutProfileInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    image?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    shown?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AvatarUncheckedUpdateManyWithoutProfileInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    image?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    shown?: BoolFieldUpdateOperationsInput | boolean
  }

  export type FriendshipUpdateWithoutProfile1Input = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    accepted?: BoolFieldUpdateOperationsInput | boolean
    profile2?: ProfileUpdateOneRequiredWithoutFriendship_toNestedInput
  }

  export type FriendshipUncheckedUpdateWithoutProfile1Input = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    accepted?: BoolFieldUpdateOperationsInput | boolean
    profile2_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type FriendshipUncheckedUpdateManyWithoutProfile1Input = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    accepted?: BoolFieldUpdateOperationsInput | boolean
    profile2_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type FriendshipUpdateWithoutProfile2Input = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    accepted?: BoolFieldUpdateOperationsInput | boolean
    profile1?: ProfileUpdateOneRequiredWithoutFriendship_fromNestedInput
  }

  export type FriendshipUncheckedUpdateWithoutProfile2Input = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    accepted?: BoolFieldUpdateOperationsInput | boolean
    profile1_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type FriendshipUncheckedUpdateManyWithoutProfile2Input = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    accepted?: BoolFieldUpdateOperationsInput | boolean
    profile1_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}